2020-02-24 01:30:38,685 - [test_register.py-->line:38] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 01:30:38,685 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:30:38,758 - [test_register.py-->line:38] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 01:30:38,758 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:30:39,214 - [test_register.py-->line:38] - ERROR: 用例注册名11位执行未通过
2020-02-24 01:30:39,214 - [test_register.py-->line:39] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 01:30:39,295 - [test_register.py-->line:38] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 01:30:39,295 - [test_register.py-->line:39] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 01:30:39,377 - [test_register.py-->line:38] - ERROR: 用例不输入类型执行未通过
2020-02-24 01:30:39,377 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:31:47,574 - [test_register.py-->line:38] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 01:31:47,574 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:31:47,647 - [test_register.py-->line:38] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 01:31:47,647 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:31:47,725 - [test_register.py-->line:44] - ERROR: 用例不输入手机号执行通过
2020-02-24 01:31:47,793 - [test_register.py-->line:44] - ERROR: 用例手机号长度10位执行通过
2020-02-24 01:31:47,890 - [test_register.py-->line:44] - ERROR: 用例手机号长度12位执行通过
2020-02-24 01:31:47,961 - [test_register.py-->line:44] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 01:31:48,121 - [test_register.py-->line:44] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 01:31:48,212 - [test_register.py-->line:44] - ERROR: 用例密码7位执行通过
2020-02-24 01:31:48,290 - [test_register.py-->line:44] - ERROR: 用例密码17位执行通过
2020-02-24 01:31:48,393 - [test_register.py-->line:44] - ERROR: 用例不输入密码执行通过
2020-02-24 01:31:48,472 - [test_register.py-->line:38] - ERROR: 用例注册名11位执行未通过
2020-02-24 01:31:48,472 - [test_register.py-->line:39] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 01:31:48,546 - [test_register.py-->line:38] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 01:31:48,546 - [test_register.py-->line:39] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 01:31:48,618 - [test_register.py-->line:38] - ERROR: 用例不输入类型执行未通过
2020-02-24 01:31:48,618 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:35:04,787 - [test_register.py-->line:38] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 01:35:04,787 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:35:04,857 - [test_register.py-->line:38] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 01:35:04,857 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:35:04,920 - [test_register.py-->line:44] - ERROR: 用例不输入手机号执行通过
2020-02-24 01:35:05,015 - [test_register.py-->line:44] - ERROR: 用例手机号长度10位执行通过
2020-02-24 01:35:05,095 - [test_register.py-->line:44] - ERROR: 用例手机号长度12位执行通过
2020-02-24 01:35:05,167 - [test_register.py-->line:44] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 01:35:05,324 - [test_register.py-->line:44] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 01:35:05,387 - [test_register.py-->line:44] - ERROR: 用例密码7位执行通过
2020-02-24 01:35:05,452 - [test_register.py-->line:44] - ERROR: 用例密码17位执行通过
2020-02-24 01:35:05,523 - [test_register.py-->line:44] - ERROR: 用例不输入密码执行通过
2020-02-24 01:35:05,595 - [test_register.py-->line:38] - ERROR: 用例注册名11位执行未通过
2020-02-24 01:35:05,595 - [test_register.py-->line:39] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 01:35:05,661 - [test_register.py-->line:38] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 01:35:05,661 - [test_register.py-->line:39] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 01:35:05,724 - [test_register.py-->line:38] - ERROR: 用例不输入类型执行未通过
2020-02-24 01:35:05,724 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:52:02,195 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 01:52:02,264 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 01:52:02,264 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 01:52:02,333 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 01:52:02,334 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 01:52:02,479 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 01:52:02,632 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 01:52:02,742 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 01:52:02,873 - [test_register.py-->line:38] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 01:52:02,873 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:52:02,948 - [test_register.py-->line:38] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 01:52:02,948 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:52:03,025 - [test_register.py-->line:44] - ERROR: 用例不输入手机号执行通过
2020-02-24 01:52:03,093 - [test_register.py-->line:44] - ERROR: 用例手机号长度10位执行通过
2020-02-24 01:52:03,162 - [test_register.py-->line:44] - ERROR: 用例手机号长度12位执行通过
2020-02-24 01:52:03,232 - [test_register.py-->line:44] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 01:52:03,397 - [test_register.py-->line:44] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 01:52:03,465 - [test_register.py-->line:44] - ERROR: 用例密码7位执行通过
2020-02-24 01:52:03,532 - [test_register.py-->line:44] - ERROR: 用例密码17位执行通过
2020-02-24 01:52:03,640 - [test_register.py-->line:44] - ERROR: 用例不输入密码执行通过
2020-02-24 01:52:03,707 - [test_register.py-->line:38] - ERROR: 用例注册名11位执行未通过
2020-02-24 01:52:03,708 - [test_register.py-->line:39] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 01:52:03,776 - [test_register.py-->line:38] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 01:52:03,776 - [test_register.py-->line:39] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 01:52:03,869 - [test_register.py-->line:38] - ERROR: 用例不输入类型执行未通过
2020-02-24 01:52:03,869 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:55:19,124 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 01:55:19,212 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 01:55:19,212 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 01:55:19,302 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 01:55:19,302 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 01:55:19,451 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 01:55:19,598 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 01:55:19,680 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 01:55:19,801 - [test_register.py-->line:38] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 01:55:19,801 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:55:19,881 - [test_register.py-->line:38] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 01:55:19,881 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:55:19,969 - [test_register.py-->line:44] - ERROR: 用例不输入手机号执行通过
2020-02-24 01:55:20,064 - [test_register.py-->line:44] - ERROR: 用例手机号长度10位执行通过
2020-02-24 01:55:20,166 - [test_register.py-->line:44] - ERROR: 用例手机号长度12位执行通过
2020-02-24 01:55:20,268 - [test_register.py-->line:44] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 01:55:20,434 - [test_register.py-->line:44] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 01:55:20,556 - [test_register.py-->line:44] - ERROR: 用例密码7位执行通过
2020-02-24 01:55:20,673 - [test_register.py-->line:44] - ERROR: 用例密码17位执行通过
2020-02-24 01:55:20,772 - [test_register.py-->line:44] - ERROR: 用例不输入密码执行通过
2020-02-24 01:55:20,861 - [test_register.py-->line:38] - ERROR: 用例注册名11位执行未通过
2020-02-24 01:55:20,863 - [test_register.py-->line:39] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 01:55:20,952 - [test_register.py-->line:38] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 01:55:20,952 - [test_register.py-->line:39] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 01:55:21,041 - [test_register.py-->line:38] - ERROR: 用例不输入类型执行未通过
2020-02-24 01:55:21,041 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:59:09,760 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 01:59:09,871 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 01:59:09,871 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 01:59:09,968 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 01:59:09,968 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 01:59:10,072 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 01:59:10,179 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 01:59:10,279 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 01:59:10,400 - [test_register.py-->line:38] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 01:59:10,401 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:59:10,497 - [test_register.py-->line:38] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 01:59:10,497 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:59:10,610 - [test_register.py-->line:44] - ERROR: 用例不输入手机号执行通过
2020-02-24 01:59:10,706 - [test_register.py-->line:44] - ERROR: 用例手机号长度10位执行通过
2020-02-24 01:59:10,810 - [test_register.py-->line:44] - ERROR: 用例手机号长度12位执行通过
2020-02-24 01:59:10,903 - [test_register.py-->line:44] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 01:59:10,996 - [test_register.py-->line:44] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 01:59:11,088 - [test_register.py-->line:44] - ERROR: 用例密码7位执行通过
2020-02-24 01:59:11,177 - [test_register.py-->line:44] - ERROR: 用例密码17位执行通过
2020-02-24 01:59:11,274 - [test_register.py-->line:44] - ERROR: 用例不输入密码执行通过
2020-02-24 01:59:11,392 - [test_register.py-->line:38] - ERROR: 用例注册名11位执行未通过
2020-02-24 01:59:11,393 - [test_register.py-->line:39] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 01:59:11,517 - [test_register.py-->line:38] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 01:59:11,517 - [test_register.py-->line:39] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 01:59:11,615 - [test_register.py-->line:38] - ERROR: 用例不输入类型执行未通过
2020-02-24 01:59:11,615 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:59:37,100 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 01:59:37,227 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 01:59:37,227 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 01:59:37,381 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 01:59:37,381 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 01:59:37,527 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 01:59:37,626 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 01:59:37,759 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 01:59:37,902 - [test_register.py-->line:38] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 01:59:37,902 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:59:37,997 - [test_register.py-->line:38] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 01:59:37,998 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 01:59:38,105 - [test_register.py-->line:44] - ERROR: 用例不输入手机号执行通过
2020-02-24 01:59:38,200 - [test_register.py-->line:44] - ERROR: 用例手机号长度10位执行通过
2020-02-24 01:59:38,294 - [test_register.py-->line:44] - ERROR: 用例手机号长度12位执行通过
2020-02-24 01:59:38,390 - [test_register.py-->line:44] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 01:59:38,489 - [test_register.py-->line:44] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 01:59:38,586 - [test_register.py-->line:44] - ERROR: 用例密码7位执行通过
2020-02-24 01:59:38,685 - [test_register.py-->line:44] - ERROR: 用例密码17位执行通过
2020-02-24 01:59:38,779 - [test_register.py-->line:44] - ERROR: 用例不输入密码执行通过
2020-02-24 01:59:38,875 - [test_register.py-->line:38] - ERROR: 用例注册名11位执行未通过
2020-02-24 01:59:38,875 - [test_register.py-->line:39] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 01:59:39,006 - [test_register.py-->line:38] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 01:59:39,006 - [test_register.py-->line:39] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 35, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 01:59:39,111 - [test_register.py-->line:38] - ERROR: 用例不输入类型执行未通过
2020-02-24 01:59:39,111 - [test_register.py-->line:39] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 34, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:12:34,646 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 02:12:34,762 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 02:12:34,762 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:12:34,888 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 02:12:34,889 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:12:35,063 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 02:12:35,242 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 02:12:35,359 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 02:12:35,507 - [test_register.py-->line:43] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 02:12:35,507 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:12:35,624 - [test_register.py-->line:43] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 02:12:35,624 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:12:35,772 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-24 02:12:35,882 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-24 02:12:36,004 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-24 02:12:36,122 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 02:12:36,310 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 02:12:36,424 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-24 02:12:36,551 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-24 02:12:36,665 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-24 02:12:36,789 - [test_register.py-->line:43] - ERROR: 用例注册名11位执行未通过
2020-02-24 02:12:36,789 - [test_register.py-->line:44] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 40, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 02:12:36,913 - [test_register.py-->line:43] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 02:12:36,914 - [test_register.py-->line:44] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 40, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 02:12:37,048 - [test_register.py-->line:43] - ERROR: 用例不输入类型执行未通过
2020-02-24 02:12:37,048 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:14:35,724 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 02:14:35,846 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 02:14:35,846 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:14:36,008 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 02:14:36,008 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:14:36,139 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 02:14:36,238 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 02:14:36,381 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 02:14:36,585 - [test_register.py-->line:43] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 02:14:36,585 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:14:36,681 - [test_register.py-->line:43] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 02:14:36,681 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:14:36,828 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-24 02:14:36,927 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-24 02:14:37,058 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-24 02:14:37,160 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 02:14:37,279 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 02:14:37,372 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-24 02:14:37,468 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-24 02:14:37,573 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-24 02:14:37,671 - [test_register.py-->line:43] - ERROR: 用例注册名11位执行未通过
2020-02-24 02:14:37,671 - [test_register.py-->line:44] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 40, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 02:14:37,799 - [test_register.py-->line:43] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 02:14:37,799 - [test_register.py-->line:44] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 40, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 02:14:37,896 - [test_register.py-->line:43] - ERROR: 用例不输入类型执行未通过
2020-02-24 02:14:37,897 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:15:48,141 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 02:15:48,234 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 02:15:48,234 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:15:48,383 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 02:15:48,383 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:15:48,534 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 02:15:48,630 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 02:15:48,765 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 02:15:48,935 - [test_register.py-->line:43] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 02:15:48,935 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:15:49,034 - [test_register.py-->line:43] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 02:15:49,034 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:15:49,148 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-24 02:15:49,277 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-24 02:15:49,384 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-24 02:15:49,515 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 02:15:49,617 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 02:15:49,764 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-24 02:15:49,897 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-24 02:15:49,994 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-24 02:15:50,096 - [test_register.py-->line:43] - ERROR: 用例注册名11位执行未通过
2020-02-24 02:15:50,096 - [test_register.py-->line:44] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 40, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 02:15:50,231 - [test_register.py-->line:43] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 02:15:50,232 - [test_register.py-->line:44] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 40, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 02:15:50,337 - [test_register.py-->line:43] - ERROR: 用例不输入类型执行未通过
2020-02-24 02:15:50,337 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:24:46,260 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 02:24:46,378 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 02:24:46,378 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:24:46,486 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 02:24:46,486 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:24:46,674 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 02:24:46,862 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 02:24:46,994 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 02:24:47,154 - [test_register.py-->line:43] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 02:24:47,154 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:24:47,300 - [test_register.py-->line:43] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 02:24:47,300 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:24:47,431 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-24 02:24:47,566 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-24 02:24:47,687 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-24 02:24:47,809 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 02:24:48,000 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 02:24:48,127 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-24 02:24:48,261 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-24 02:24:48,377 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-24 02:24:48,496 - [test_register.py-->line:43] - ERROR: 用例注册名11位执行未通过
2020-02-24 02:24:48,496 - [test_register.py-->line:44] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 40, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 02:24:48,616 - [test_register.py-->line:43] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 02:24:48,616 - [test_register.py-->line:44] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 40, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 02:24:48,748 - [test_register.py-->line:43] - ERROR: 用例不输入类型执行未通过
2020-02-24 02:24:48,748 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:27:13,342 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 02:27:13,478 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 02:27:13,478 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:27:13,616 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 02:27:13,616 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:27:13,836 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 02:27:14,049 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 02:27:14,142 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 02:27:14,303 - [test_register.py-->line:43] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-24 02:27:14,303 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:27:14,417 - [test_register.py-->line:43] - ERROR: 用例成功-不带用户名执行未通过
2020-02-24 02:27:14,417 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:27:14,522 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-24 02:27:14,618 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-24 02:27:14,713 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-24 02:27:14,813 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 02:27:15,005 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 02:27:15,120 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-24 02:27:15,219 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-24 02:27:15,316 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-24 02:27:15,429 - [test_register.py-->line:43] - ERROR: 用例注册名11位执行未通过
2020-02-24 02:27:15,429 - [test_register.py-->line:44] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 40, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 02:27:15,533 - [test_register.py-->line:43] - ERROR: 用例类型输入非0，1内容执行未通过
2020-02-24 02:27:15,533 - [test_register.py-->line:44] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 40, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 02:27:15,671 - [test_register.py-->line:43] - ERROR: 用例不输入类型执行未通过
2020-02-24 02:27:15,671 - [test_register.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 39, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:29:55,543 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 02:29:55,651 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 02:29:55,651 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:29:55,790 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 02:29:55,790 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:29:56,010 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 02:29:56,225 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 02:29:56,331 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 02:29:56,511 - [test_register.py-->line:56] - ERROR: 用例：注册成功-带注册名，执行未通过
2020-02-24 02:29:56,511 - [test_register.py-->line:57] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 52, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:29:56,658 - [test_register.py-->line:56] - ERROR: 用例：成功-不带用户名，执行未通过
2020-02-24 02:29:56,658 - [test_register.py-->line:57] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 52, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:29:56,758 - [test_register.py-->line:61] - INFO: 用例：不输入手机号，执行未通过
2020-02-24 02:29:56,859 - [test_register.py-->line:61] - INFO: 用例：手机号长度10位，执行未通过
2020-02-24 02:29:56,968 - [test_register.py-->line:61] - INFO: 用例：手机号长度12位，执行未通过
2020-02-24 02:29:57,097 - [test_register.py-->line:61] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-24 02:29:57,293 - [test_register.py-->line:61] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-24 02:29:57,426 - [test_register.py-->line:61] - INFO: 用例：密码7位，执行未通过
2020-02-24 02:29:57,561 - [test_register.py-->line:61] - INFO: 用例：密码17位，执行未通过
2020-02-24 02:29:57,703 - [test_register.py-->line:61] - INFO: 用例：不输入密码，执行未通过
2020-02-24 02:29:57,817 - [test_register.py-->line:56] - ERROR: 用例：注册名11位，执行未通过
2020-02-24 02:29:57,817 - [test_register.py-->line:57] - ERROR: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 53, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '无效的手机格式'
- 用户昵称长度超过10位
+ 无效的手机格式

2020-02-24 02:29:57,920 - [test_register.py-->line:56] - ERROR: 用例：类型输入非0，1内容，执行未通过
2020-02-24 02:29:57,920 - [test_register.py-->line:57] - ERROR: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 53, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '不支持的用户类型' != '无效的手机格式'
- 不支持的用户类型
+ 无效的手机格式

2020-02-24 02:29:58,057 - [test_register.py-->line:56] - ERROR: 用例：不输入类型，执行未通过
2020-02-24 02:29:58,058 - [test_register.py-->line:57] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 52, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-24 02:33:02,581 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 02:33:02,716 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 02:33:02,716 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:33:02,844 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 02:33:02,844 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:33:02,990 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 02:33:03,129 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 02:33:03,247 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 02:33:03,539 - [test_register.py-->line:95] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-24 02:33:03,768 - [test_register.py-->line:95] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-24 02:33:03,913 - [test_register.py-->line:95] - INFO: 用例：不输入手机号，执行未通过
2020-02-24 02:33:04,013 - [test_register.py-->line:95] - INFO: 用例：手机号长度10位，执行未通过
2020-02-24 02:33:04,175 - [test_register.py-->line:95] - INFO: 用例：手机号长度12位，执行未通过
2020-02-24 02:33:04,303 - [test_register.py-->line:95] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-24 02:33:04,531 - [test_register.py-->line:95] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-24 02:33:04,661 - [test_register.py-->line:95] - INFO: 用例：密码7位，执行未通过
2020-02-24 02:33:04,754 - [test_register.py-->line:95] - INFO: 用例：密码17位，执行未通过
2020-02-24 02:33:04,848 - [test_register.py-->line:95] - INFO: 用例：不输入密码，执行未通过
2020-02-24 02:33:04,942 - [test_register.py-->line:95] - INFO: 用例：注册名11位，执行未通过
2020-02-24 02:33:05,107 - [test_register.py-->line:95] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-24 02:33:05,276 - [test_register.py-->line:95] - INFO: 用例：不输入类型，执行未通过
2020-02-24 02:45:54,816 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 02:45:54,910 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 02:45:54,910 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:45:55,008 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 02:45:55,008 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:45:55,193 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 02:45:55,413 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 02:45:55,527 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 02:45:55,754 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-24 02:45:55,966 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-24 02:45:56,094 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-24 02:45:56,191 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-24 02:45:56,293 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-24 02:45:56,390 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 02:45:56,600 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 02:45:56,713 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-24 02:45:56,812 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-24 02:45:56,910 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-24 02:45:57,041 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-24 02:45:57,136 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-24 02:45:57,349 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-24 02:45:57,572 - [test_register2345.py-->line:88] - INFO: 用例：登录成功，执行未通过
2020-02-24 02:45:57,671 - [test_register2345.py-->line:83] - ERROR: 用例：手机号为空，执行未通过
2020-02-24 02:45:57,672 - [test_register2345.py-->line:84] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register2345.py", line 79, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:45:57,773 - [test_register2345.py-->line:83] - ERROR: 用例：密码为空，执行未通过
2020-02-24 02:45:57,773 - [test_register2345.py-->line:84] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register2345.py", line 79, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:45:57,953 - [test_register2345.py-->line:88] - INFO: 用例：手机号未注册，执行未通过
2020-02-24 02:45:58,183 - [test_register2345.py-->line:88] - INFO: 用例：密码错误，执行未通过
2020-02-24 02:45:58,284 - [test_register2345.py-->line:88] - INFO: 用例：手机号格式错误，执行未通过
2020-02-24 02:45:58,511 - [test_register2345.py-->line:49] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-24 02:45:58,709 - [test_register2345.py-->line:49] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-24 02:45:58,811 - [test_register2345.py-->line:49] - INFO: 用例：不输入手机号，执行未通过
2020-02-24 02:45:58,909 - [test_register2345.py-->line:49] - INFO: 用例：手机号长度10位，执行未通过
2020-02-24 02:45:59,003 - [test_register2345.py-->line:49] - INFO: 用例：手机号长度12位，执行未通过
2020-02-24 02:45:59,132 - [test_register2345.py-->line:49] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-24 02:45:59,323 - [test_register2345.py-->line:49] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-24 02:45:59,428 - [test_register2345.py-->line:49] - INFO: 用例：密码7位，执行未通过
2020-02-24 02:45:59,543 - [test_register2345.py-->line:49] - INFO: 用例：密码17位，执行未通过
2020-02-24 02:45:59,673 - [test_register2345.py-->line:49] - INFO: 用例：不输入密码，执行未通过
2020-02-24 02:45:59,800 - [test_register2345.py-->line:49] - INFO: 用例：注册名11位，执行未通过
2020-02-24 02:45:59,918 - [test_register2345.py-->line:49] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-24 02:46:00,130 - [test_register2345.py-->line:49] - INFO: 用例：不输入类型，执行未通过
2020-02-24 02:47:16,955 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 02:47:17,083 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 02:47:17,083 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:47:17,176 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 02:47:17,176 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:47:17,332 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 02:47:17,531 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 02:47:17,627 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 02:47:17,856 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-24 02:47:18,065 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-24 02:47:18,161 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-24 02:47:18,281 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-24 02:47:18,401 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-24 02:47:18,512 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 02:47:18,703 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 02:47:18,801 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-24 02:47:18,992 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-24 02:47:19,103 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-24 02:47:19,238 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-24 02:47:19,368 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-24 02:47:19,626 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-24 02:50:56,568 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-24 02:50:56,772 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-24 02:50:56,772 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:50:56,869 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-24 02:50:56,869 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 02:50:57,120 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-24 02:50:57,367 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-24 02:50:57,473 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-24 02:50:57,712 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-24 02:50:57,968 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-24 02:50:58,078 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-24 02:50:58,205 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-24 02:50:58,311 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-24 02:50:58,511 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-24 02:50:58,673 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-24 02:50:58,835 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-24 02:50:58,974 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-24 02:50:59,152 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-24 02:50:59,330 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-24 02:50:59,449 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-24 02:50:59,632 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 20:57:10,991 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 20:57:11,121 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 20:57:11,121 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 20:57:11,273 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 20:57:11,273 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 20:57:11,469 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 20:57:11,651 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 20:57:11,785 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 20:57:12,011 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 20:57:12,220 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 20:57:12,337 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 20:57:12,491 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 20:57:12,610 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 20:57:12,726 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 20:57:12,951 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 20:57:13,079 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 20:57:13,209 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 20:57:13,332 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 20:57:13,452 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 20:57:13,573 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 20:57:13,760 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:02:55,057 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:02:55,180 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:02:55,180 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:02:55,301 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:02:55,301 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:02:55,466 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:02:55,661 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:02:55,798 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:02:56,214 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:02:56,450 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:02:56,584 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:02:56,738 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:02:56,864 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:02:56,988 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:02:57,174 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:02:57,294 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:02:57,451 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:02:57,600 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:02:57,721 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:02:57,842 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:02:58,065 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:05:34,157 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:05:34,269 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:05:34,270 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:05:34,387 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:05:34,387 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:05:34,541 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:05:34,665 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:05:34,783 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:05:35,168 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:05:35,401 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:05:35,536 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:05:35,674 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:05:35,857 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:05:35,998 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:05:36,224 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:05:36,342 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:05:36,463 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:05:36,580 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:05:36,702 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:05:36,823 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:05:37,026 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:07:19,742 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:07:19,860 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:07:19,861 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:07:19,974 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:07:19,975 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:07:20,187 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:07:20,412 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:07:20,544 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:07:20,963 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:07:21,203 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:07:21,353 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:07:21,468 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:07:21,583 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:07:21,699 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:07:21,915 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:07:22,030 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:07:22,154 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:07:22,267 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:07:22,433 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:07:22,547 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:07:22,751 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:08:30,883 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:08:31,000 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:08:31,000 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:08:31,126 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:08:31,126 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:08:31,306 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:08:31,507 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:08:31,620 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:08:31,898 - [test_recharge.py-->line:83] - ERROR: 用例会员id为空执行通过
2020-02-25 21:08:32,054 - [test_recharge.py-->line:83] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 21:08:32,176 - [test_recharge.py-->line:83] - ERROR: 用例会员id为字符串执行通过
2020-02-25 21:08:32,411 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:08:32,627 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:08:32,737 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:08:32,890 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:08:33,030 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:08:33,148 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:08:33,354 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:08:33,464 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:08:33,574 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:08:33,741 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:08:33,856 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:08:33,966 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:08:34,182 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:10:54,283 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:10:54,404 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:10:54,404 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:10:54,538 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:10:54,538 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:10:54,715 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:10:54,913 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:10:55,029 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:10:55,330 - [test_recharge.py-->line:83] - ERROR: 用例会员id为空执行通过
2020-02-25 21:10:55,449 - [test_recharge.py-->line:83] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 21:10:55,572 - [test_recharge.py-->line:77] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 21:10:55,572 - [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:10:55,683 - [test_recharge.py-->line:83] - ERROR: 用例会员id为小数执行通过
2020-02-25 21:10:55,809 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为0执行未通过
2020-02-25 21:10:55,809 - [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:10:55,958 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 21:10:55,958 - [test_recharge.py-->line:78] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:10:56,073 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为空执行未通过
2020-02-25 21:10:56,073 - [test_recharge.py-->line:78] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:10:56,197 - [test_recharge.py-->line:83] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 21:10:56,324 - [test_recharge.py-->line:77] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 21:10:56,324 - [test_recharge.py-->line:78] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:10:56,443 - [test_recharge.py-->line:83] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 21:10:56,665 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:10:56,849 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:10:56,974 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:10:57,087 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:10:57,208 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:10:57,337 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:10:57,520 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:10:57,675 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:10:57,891 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:10:58,009 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:10:58,158 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:10:58,403 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:10:58,608 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:12:36,528 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:12:36,639 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:12:36,639 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:12:36,800 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:12:36,800 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:12:37,002 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:12:37,197 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:12:37,305 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:12:37,792 - [test_recharge.py-->line:83] - ERROR: 用例会员id为空执行通过
2020-02-25 21:12:37,904 - [test_recharge.py-->line:83] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 21:12:38,063 - [test_recharge.py-->line:77] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 21:12:38,063 - [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:12:38,218 - [test_recharge.py-->line:83] - ERROR: 用例会员id为小数执行通过
2020-02-25 21:12:38,376 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为0执行未通过
2020-02-25 21:12:38,376 - [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:12:38,529 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 21:12:38,530 - [test_recharge.py-->line:78] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:12:38,708 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为空执行未通过
2020-02-25 21:12:38,708 - [test_recharge.py-->line:78] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:12:38,837 - [test_recharge.py-->line:83] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 21:12:38,967 - [test_recharge.py-->line:77] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 21:12:38,968 - [test_recharge.py-->line:78] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:12:39,086 - [test_recharge.py-->line:83] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 21:12:39,339 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:12:39,582 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:12:39,749 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:12:39,881 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:12:40,019 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:12:40,179 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:12:40,423 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:12:40,575 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:12:40,707 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:12:40,848 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:12:41,003 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:12:41,139 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:12:41,351 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:22:30,974 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:22:31,094 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:22:31,094 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:22:31,216 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:22:31,216 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:22:31,399 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:22:31,626 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:22:31,739 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:22:32,156 - [test_recharge.py-->line:83] - ERROR: 用例会员id为空执行通过
2020-02-25 21:22:32,294 - [test_recharge.py-->line:83] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 21:22:32,457 - [test_recharge.py-->line:77] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 21:22:32,458 - [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:22:32,597 - [test_recharge.py-->line:83] - ERROR: 用例会员id为小数执行通过
2020-02-25 21:22:32,737 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为0执行未通过
2020-02-25 21:22:32,737 - [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:22:32,877 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 21:22:32,877 - [test_recharge.py-->line:78] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:22:33,003 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为空执行未通过
2020-02-25 21:22:33,003 - [test_recharge.py-->line:78] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:22:33,125 - [test_recharge.py-->line:83] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 21:22:33,251 - [test_recharge.py-->line:77] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 21:22:33,251 - [test_recharge.py-->line:78] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:22:33,369 - [test_recharge.py-->line:83] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 21:22:33,600 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:22:33,821 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:22:33,939 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:22:34,087 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:22:34,207 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:22:34,325 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:22:34,542 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:22:34,658 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:22:34,778 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:22:34,903 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:22:35,049 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:22:35,206 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:22:35,401 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:25:32,896 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:25:33,012 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:25:33,013 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:25:33,138 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:25:33,138 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:25:33,322 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:25:33,541 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:25:33,656 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:25:34,069 - [test_recharge.py-->line:83] - ERROR: 用例会员id为空执行通过
2020-02-25 21:25:34,188 - [test_recharge.py-->line:83] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 21:25:34,322 - [test_recharge.py-->line:77] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 21:25:34,322 - [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:25:34,443 - [test_recharge.py-->line:83] - ERROR: 用例会员id为小数执行通过
2020-02-25 21:25:34,573 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为0执行未通过
2020-02-25 21:25:34,574 - [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:25:34,700 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 21:25:34,700 - [test_recharge.py-->line:78] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:25:34,827 - [test_recharge.py-->line:77] - ERROR: 用例充值金额为空执行未通过
2020-02-25 21:25:34,827 - [test_recharge.py-->line:78] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:25:34,951 - [test_recharge.py-->line:83] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 21:25:35,069 - [test_recharge.py-->line:77] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 21:25:35,070 - [test_recharge.py-->line:78] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:25:35,188 - [test_recharge.py-->line:83] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 21:25:35,418 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:25:35,639 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:25:35,760 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:25:35,910 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:25:36,055 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:25:36,180 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:25:36,398 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:25:36,552 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:25:36,673 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:25:36,815 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:25:36,967 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:25:37,131 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:25:37,354 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:37:05,322 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:37:05,524 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:37:05,524 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:37:05,672 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:37:05,672 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:37:05,893 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:37:06,150 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:37:06,257 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:37:06,694 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-25 21:37:06,802 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 21:37:07,011 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 21:37:07,011 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:37:07,181 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-25 21:37:07,331 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-25 21:37:07,331 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:37:07,446 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 21:37:07,446 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:37:07,595 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-25 21:37:07,596 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:37:07,711 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 21:37:07,865 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 21:37:07,865 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:37:08,010 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 21:37:08,251 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:37:08,465 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:37:08,629 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:37:08,779 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:37:08,893 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:37:09,040 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:37:09,238 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:37:09,355 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:37:09,472 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:37:09,588 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:37:09,743 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:37:09,871 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:37:10,117 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:38:43,702 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:38:43,819 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:38:43,819 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:38:43,955 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:38:43,955 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:38:44,146 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:38:44,343 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:38:44,478 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:38:44,873 - [test_recharge.py-->line:158] - INFO: 用例：会员id为空，执行未通过
2020-02-25 21:38:45,009 - [test_recharge.py-->line:158] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-25 21:38:45,142 - [test_recharge.py-->line:153] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-25 21:38:45,142 - [test_recharge.py-->line:154] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 144, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:38:45,261 - [test_recharge.py-->line:158] - INFO: 用例：会员id为小数，执行未通过
2020-02-25 21:38:45,391 - [test_recharge.py-->line:153] - ERROR: 用例：充值金额为0，执行未通过
2020-02-25 21:38:45,391 - [test_recharge.py-->line:154] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 144, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:38:45,513 - [test_recharge.py-->line:153] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-25 21:38:45,513 - [test_recharge.py-->line:154] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 145, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:38:45,637 - [test_recharge.py-->line:153] - ERROR: 用例：充值金额为空，执行未通过
2020-02-25 21:38:45,637 - [test_recharge.py-->line:154] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 144, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:38:45,758 - [test_recharge.py-->line:158] - INFO: 用例：充值金额-3位小数，执行未通过
2020-02-25 21:38:45,885 - [test_recharge.py-->line:153] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-25 21:38:45,885 - [test_recharge.py-->line:154] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 145, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:38:46,010 - [test_recharge.py-->line:158] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-25 21:38:46,261 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:38:46,455 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:38:46,577 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:38:46,693 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:38:46,816 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:38:46,933 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:38:47,119 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:38:47,232 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:38:47,346 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:38:47,462 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:38:47,638 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:38:47,769 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:38:47,999 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:40:25,348 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:40:25,453 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:40:25,453 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:40:25,564 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:40:25,564 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:40:25,755 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:40:25,977 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:40:26,087 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:40:26,937 - [test_recharge.py-->line:158] - INFO: 用例：充值成功-整数，执行未通过
2020-02-25 21:40:27,305 - [test_recharge.py-->line:158] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-25 21:40:27,666 - [test_recharge.py-->line:158] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-25 21:40:28,087 - [test_recharge.py-->line:158] - INFO: 用例：充值成功-50万，执行未通过
2020-02-25 21:40:28,238 - [test_recharge.py-->line:158] - INFO: 用例：会员id为空，执行未通过
2020-02-25 21:40:28,392 - [test_recharge.py-->line:158] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-25 21:40:28,548 - [test_recharge.py-->line:153] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-25 21:40:28,549 - [test_recharge.py-->line:154] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 144, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:40:28,678 - [test_recharge.py-->line:158] - INFO: 用例：会员id为小数，执行未通过
2020-02-25 21:40:28,801 - [test_recharge.py-->line:153] - ERROR: 用例：充值金额为0，执行未通过
2020-02-25 21:40:28,802 - [test_recharge.py-->line:154] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 144, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:40:28,988 - [test_recharge.py-->line:153] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-25 21:40:28,989 - [test_recharge.py-->line:154] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 145, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:40:29,105 - [test_recharge.py-->line:153] - ERROR: 用例：充值金额为空，执行未通过
2020-02-25 21:40:29,105 - [test_recharge.py-->line:154] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 144, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:40:29,524 - [test_recharge.py-->line:158] - INFO: 用例：充值金额-3位小数，执行未通过
2020-02-25 21:40:29,677 - [test_recharge.py-->line:153] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-25 21:40:29,678 - [test_recharge.py-->line:154] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 145, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:40:29,820 - [test_recharge.py-->line:158] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-25 21:40:30,057 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:40:30,241 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:40:30,357 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:40:30,471 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:40:30,594 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:40:30,707 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:40:30,920 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:40:31,032 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:40:31,150 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:40:31,266 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:40:31,379 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:40:31,496 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:40:31,689 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:41:29,776 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:41:29,887 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:41:29,888 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:41:30,026 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:41:30,026 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:41:30,206 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:41:30,404 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:41:30,520 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:41:31,013 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-25 21:41:31,384 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-25 21:41:31,772 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-25 21:41:32,151 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-25 21:41:32,272 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-25 21:41:32,399 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 21:41:32,529 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 21:41:32,530 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:41:32,641 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-25 21:41:32,765 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-25 21:41:32,765 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:41:32,883 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 21:41:32,883 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:41:33,008 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-25 21:41:33,008 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:41:33,129 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 21:41:33,248 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 21:41:33,248 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:41:33,404 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 21:41:33,652 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:41:33,866 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:41:33,983 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:41:34,117 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:41:34,275 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:41:34,424 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:41:34,680 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:41:34,809 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:41:34,971 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:41:35,092 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:41:35,211 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:41:35,328 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:41:35,521 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 21:44:58,581 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 21:44:58,721 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 21:44:58,722 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:44:58,868 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 21:44:58,869 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:44:59,078 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 21:44:59,303 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 21:44:59,424 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 21:44:59,918 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-25 21:45:00,277 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-25 21:45:00,678 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-25 21:45:01,029 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-25 21:45:01,169 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-25 21:45:01,294 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 21:45:01,445 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 21:45:01,445 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:45:01,593 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-25 21:45:01,755 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-25 21:45:01,755 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 21:45:01,909 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 21:45:01,910 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:45:02,027 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-25 21:45:02,027 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 21:45:02,141 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 21:45:02,262 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 21:45:02,262 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 21:45:02,382 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 21:45:02,652 - [test_register.py-->line:49] - ERROR: 用例注册成功-带注册名执行通过
2020-02-25 21:45:02,897 - [test_register.py-->line:49] - ERROR: 用例成功-不带用户名执行通过
2020-02-25 21:45:03,008 - [test_register.py-->line:49] - ERROR: 用例不输入手机号执行通过
2020-02-25 21:45:03,149 - [test_register.py-->line:49] - ERROR: 用例手机号长度10位执行通过
2020-02-25 21:45:03,261 - [test_register.py-->line:49] - ERROR: 用例手机号长度12位执行通过
2020-02-25 21:45:03,369 - [test_register.py-->line:49] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 21:45:03,603 - [test_register.py-->line:49] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 21:45:03,713 - [test_register.py-->line:49] - ERROR: 用例密码7位执行通过
2020-02-25 21:45:03,831 - [test_register.py-->line:49] - ERROR: 用例密码17位执行通过
2020-02-25 21:45:03,980 - [test_register.py-->line:49] - ERROR: 用例不输入密码执行通过
2020-02-25 21:45:04,112 - [test_register.py-->line:49] - ERROR: 用例注册名11位执行通过
2020-02-25 21:45:04,227 - [test_register.py-->line:49] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 21:45:04,431 - [test_register.py-->line:49] - ERROR: 用例不输入类型执行通过
2020-02-25 23:04:42,785 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 23:04:42,908 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 23:04:42,908 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:04:43,027 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 23:04:43,027 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:04:43,206 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 23:04:43,408 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 23:04:43,549 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 23:04:44,094 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-25 23:04:44,463 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-25 23:04:44,839 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-25 23:04:45,203 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-25 23:04:45,333 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-25 23:04:45,447 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 23:04:45,572 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 23:04:45,572 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:04:45,731 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-25 23:04:45,853 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-25 23:04:45,854 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:04:45,970 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 23:04:45,970 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:04:46,092 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-25 23:04:46,092 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:04:46,208 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 23:04:46,324 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 23:04:46,325 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:04:46,448 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 23:04:47,129 - [test_register.py-->line:60] - ERROR: 用例不输入手机号执行通过
2020-02-25 23:04:47,258 - [test_register.py-->line:60] - ERROR: 用例手机号长度10位执行通过
2020-02-25 23:04:47,377 - [test_register.py-->line:60] - ERROR: 用例手机号长度12位执行通过
2020-02-25 23:04:47,531 - [test_register.py-->line:60] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 23:04:47,776 - [test_register.py-->line:60] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 23:04:47,909 - [test_register.py-->line:60] - ERROR: 用例密码7位执行通过
2020-02-25 23:04:48,065 - [test_register.py-->line:60] - ERROR: 用例密码17位执行通过
2020-02-25 23:04:48,175 - [test_register.py-->line:60] - ERROR: 用例不输入密码执行通过
2020-02-25 23:04:48,288 - [test_register.py-->line:60] - ERROR: 用例注册名11位执行通过
2020-02-25 23:04:48,408 - [test_register.py-->line:60] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 23:09:13,943 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 23:09:14,071 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 23:09:14,071 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:09:14,211 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 23:09:14,211 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:09:14,410 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 23:09:14,624 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 23:09:14,749 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 23:09:15,274 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-25 23:09:15,632 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-25 23:09:16,008 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-25 23:09:16,366 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-25 23:09:16,507 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-25 23:09:16,632 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 23:09:16,785 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 23:09:16,785 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:09:16,905 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-25 23:09:17,035 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-25 23:09:17,035 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:09:17,163 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 23:09:17,163 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:09:17,290 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-25 23:09:17,290 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:09:17,426 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 23:09:17,551 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 23:09:17,551 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:09:17,717 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 23:09:18,351 - [test_register.py-->line:60] - ERROR: 用例不输入手机号执行通过
2020-02-25 23:09:18,467 - [test_register.py-->line:60] - ERROR: 用例手机号长度10位执行通过
2020-02-25 23:09:18,586 - [test_register.py-->line:60] - ERROR: 用例手机号长度12位执行通过
2020-02-25 23:09:18,697 - [test_register.py-->line:60] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 23:09:18,903 - [test_register.py-->line:60] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 23:09:19,024 - [test_register.py-->line:60] - ERROR: 用例密码7位执行通过
2020-02-25 23:09:19,177 - [test_register.py-->line:60] - ERROR: 用例密码17位执行通过
2020-02-25 23:09:19,290 - [test_register.py-->line:60] - ERROR: 用例不输入密码执行通过
2020-02-25 23:09:19,438 - [test_register.py-->line:60] - ERROR: 用例注册名11位执行通过
2020-02-25 23:09:19,558 - [test_register.py-->line:60] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 23:11:05,609 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 23:11:05,732 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 23:11:05,732 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:11:05,889 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 23:11:05,889 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:11:06,121 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 23:11:06,350 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 23:11:06,537 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 23:11:07,070 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-25 23:11:07,418 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-25 23:11:07,758 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-25 23:11:08,139 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-25 23:11:08,256 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-25 23:11:08,422 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 23:11:08,584 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 23:11:08,584 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:11:08,734 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-25 23:11:08,886 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-25 23:11:08,886 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:11:09,049 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 23:11:09,049 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:11:09,166 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-25 23:11:09,166 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:11:09,285 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 23:11:09,409 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 23:11:09,409 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:11:09,527 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 23:11:09,885 - [test_register.py-->line:55] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-25 23:11:09,885 - [test_register.py-->line:56] - ERROR: '13367899876' != '13651685412'
- 13367899876
+ 13651685412
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 51, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13651685412'
- 13367899876
+ 13651685412

2020-02-25 23:11:10,200 - [test_register.py-->line:55] - ERROR: 用例成功-不带用户名执行未通过
2020-02-25 23:11:10,201 - [test_register.py-->line:56] - ERROR: '13367899876' != '13661947497'
- 13367899876
+ 13661947497
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 51, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13661947497'
- 13367899876
+ 13661947497

2020-02-25 23:11:10,320 - [test_register.py-->line:60] - ERROR: 用例不输入手机号执行通过
2020-02-25 23:11:10,445 - [test_register.py-->line:60] - ERROR: 用例手机号长度10位执行通过
2020-02-25 23:11:10,575 - [test_register.py-->line:60] - ERROR: 用例手机号长度12位执行通过
2020-02-25 23:11:10,696 - [test_register.py-->line:60] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 23:11:10,917 - [test_register.py-->line:60] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 23:11:11,040 - [test_register.py-->line:60] - ERROR: 用例密码7位执行通过
2020-02-25 23:11:11,173 - [test_register.py-->line:60] - ERROR: 用例密码17位执行通过
2020-02-25 23:11:11,294 - [test_register.py-->line:60] - ERROR: 用例不输入密码执行通过
2020-02-25 23:11:11,423 - [test_register.py-->line:60] - ERROR: 用例注册名11位执行通过
2020-02-25 23:11:11,546 - [test_register.py-->line:60] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 23:11:11,858 - [test_register.py-->line:55] - ERROR: 用例不输入类型执行未通过
2020-02-25 23:11:11,859 - [test_register.py-->line:56] - ERROR: '13367899876' != '13653926234'
- 13367899876
+ 13653926234
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 51, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13653926234'
- 13367899876
+ 13653926234

2020-02-25 23:25:03,273 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 23:25:03,386 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 23:25:03,386 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:25:03,530 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 23:25:03,530 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:25:03,729 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 23:25:03,935 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 23:25:04,058 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 23:25:04,570 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-25 23:25:04,946 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-25 23:25:05,298 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-25 23:25:05,635 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-25 23:25:05,762 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-25 23:25:05,881 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 23:25:06,023 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 23:25:06,023 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:25:06,151 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-25 23:25:06,276 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-25 23:25:06,277 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:25:06,400 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 23:25:06,401 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:25:06,530 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-25 23:25:06,530 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:25:06,656 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 23:25:06,786 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 23:25:06,787 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:25:06,953 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 23:25:07,296 - [test_register.py-->line:55] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-25 23:25:07,296 - [test_register.py-->line:56] - ERROR: '13367899876' != '13669456304'
- 13367899876
+ 13669456304
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 51, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13669456304'
- 13367899876
+ 13669456304

2020-02-25 23:25:07,623 - [test_register.py-->line:55] - ERROR: 用例成功-不带用户名执行未通过
2020-02-25 23:25:07,623 - [test_register.py-->line:56] - ERROR: '13367899876' != '13663261707'
- 13367899876
+ 13663261707
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 51, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13663261707'
- 13367899876
+ 13663261707

2020-02-25 23:25:07,753 - [test_register.py-->line:60] - ERROR: 用例不输入手机号执行通过
2020-02-25 23:25:07,881 - [test_register.py-->line:60] - ERROR: 用例手机号长度10位执行通过
2020-02-25 23:25:08,000 - [test_register.py-->line:60] - ERROR: 用例手机号长度12位执行通过
2020-02-25 23:25:08,122 - [test_register.py-->line:60] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 23:25:08,349 - [test_register.py-->line:60] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 23:25:08,464 - [test_register.py-->line:60] - ERROR: 用例密码7位执行通过
2020-02-25 23:25:08,584 - [test_register.py-->line:60] - ERROR: 用例密码17位执行通过
2020-02-25 23:25:08,745 - [test_register.py-->line:60] - ERROR: 用例不输入密码执行通过
2020-02-25 23:25:08,871 - [test_register.py-->line:60] - ERROR: 用例注册名11位执行通过
2020-02-25 23:25:08,987 - [test_register.py-->line:60] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 23:25:09,515 - [test_register.py-->line:55] - ERROR: 用例不输入类型执行未通过
2020-02-25 23:25:09,515 - [test_register.py-->line:56] - ERROR: '13367899876' != '13615554267'
- 13367899876
+ 13615554267
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 51, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13615554267'
- 13367899876
+ 13615554267

2020-02-25 23:33:37,532 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 23:33:37,678 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 23:33:37,678 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:33:37,825 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 23:33:37,825 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:33:38,050 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 23:33:38,284 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 23:33:38,436 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 23:33:38,961 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-25 23:33:39,396 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-25 23:33:39,822 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-25 23:33:40,225 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-25 23:33:40,375 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-25 23:33:40,502 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 23:33:40,683 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 23:33:40,684 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:33:40,823 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-25 23:33:40,982 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-25 23:33:40,983 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:33:41,138 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 23:33:41,138 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:33:41,287 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-25 23:33:41,287 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:33:41,411 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 23:33:41,534 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 23:33:41,534 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:33:41,664 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 23:33:42,248 - [test_register.py-->line:56] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-25 23:33:42,248 - [test_register.py-->line:57] - ERROR: '13367899876' != '13641632959'
- 13367899876
+ 13641632959
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 52, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13641632959'
- 13367899876
+ 13641632959

2020-02-25 23:33:42,590 - [test_register.py-->line:56] - ERROR: 用例成功-不带用户名执行未通过
2020-02-25 23:33:42,590 - [test_register.py-->line:57] - ERROR: '13367899876' != '13627549902'
- 13367899876
+ 13627549902
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 52, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13627549902'
- 13367899876
+ 13627549902

2020-02-25 23:33:42,733 - [test_register.py-->line:61] - ERROR: 用例不输入手机号执行通过
2020-02-25 23:33:42,853 - [test_register.py-->line:61] - ERROR: 用例手机号长度10位执行通过
2020-02-25 23:33:42,982 - [test_register.py-->line:61] - ERROR: 用例手机号长度12位执行通过
2020-02-25 23:33:43,122 - [test_register.py-->line:61] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 23:33:43,375 - [test_register.py-->line:61] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 23:33:43,498 - [test_register.py-->line:61] - ERROR: 用例密码7位执行通过
2020-02-25 23:33:43,628 - [test_register.py-->line:61] - ERROR: 用例密码17位执行通过
2020-02-25 23:33:43,768 - [test_register.py-->line:61] - ERROR: 用例不输入密码执行通过
2020-02-25 23:33:43,900 - [test_register.py-->line:61] - ERROR: 用例注册名11位执行通过
2020-02-25 23:33:44,026 - [test_register.py-->line:61] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 23:33:44,339 - [test_register.py-->line:56] - ERROR: 用例不输入类型执行未通过
2020-02-25 23:33:44,339 - [test_register.py-->line:57] - ERROR: '13367899876' != '13657221283'
- 13367899876
+ 13657221283
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 52, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13657221283'
- 13367899876
+ 13657221283

2020-02-25 23:36:25,351 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-25 23:36:25,502 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-25 23:36:25,502 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:36:25,653 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-25 23:36:25,653 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:36:25,884 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-25 23:36:26,107 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-25 23:36:26,233 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-25 23:36:26,763 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-25 23:36:27,107 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-25 23:36:27,448 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-25 23:36:27,819 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-25 23:36:27,953 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-25 23:36:28,093 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-25 23:36:28,227 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-25 23:36:28,227 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:36:28,400 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-25 23:36:28,533 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-25 23:36:28,534 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-25 23:36:28,699 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-25 23:36:28,700 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:36:28,902 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-25 23:36:28,902 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-25 23:36:29,031 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-25 23:36:29,167 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-25 23:36:29,168 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-25 23:36:29,287 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-25 23:36:29,635 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行未通过
2020-02-25 23:36:29,636 - [test_register.py-->line:59] - ERROR: '13367899876' != '13682907805'
- 13367899876
+ 13682907805
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 54, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13682907805'
- 13367899876
+ 13682907805

2020-02-25 23:36:29,962 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行未通过
2020-02-25 23:36:29,963 - [test_register.py-->line:59] - ERROR: '13367899876' != '13670365315'
- 13367899876
+ 13670365315
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 54, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13670365315'
- 13367899876
+ 13670365315

2020-02-25 23:36:30,080 - [test_register.py-->line:63] - ERROR: 用例不输入手机号执行通过
2020-02-25 23:36:30,199 - [test_register.py-->line:63] - ERROR: 用例手机号长度10位执行通过
2020-02-25 23:36:30,326 - [test_register.py-->line:63] - ERROR: 用例手机号长度12位执行通过
2020-02-25 23:36:30,442 - [test_register.py-->line:63] - ERROR: 用例手机号含有非法字符执行通过
2020-02-25 23:36:30,701 - [test_register.py-->line:63] - ERROR: 用例已注册过的手机号执行通过
2020-02-25 23:36:30,852 - [test_register.py-->line:63] - ERROR: 用例密码7位执行通过
2020-02-25 23:36:31,007 - [test_register.py-->line:63] - ERROR: 用例密码17位执行通过
2020-02-25 23:36:31,123 - [test_register.py-->line:63] - ERROR: 用例不输入密码执行通过
2020-02-25 23:36:31,241 - [test_register.py-->line:63] - ERROR: 用例注册名11位执行通过
2020-02-25 23:36:31,357 - [test_register.py-->line:63] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-25 23:36:31,713 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行未通过
2020-02-25 23:36:31,713 - [test_register.py-->line:59] - ERROR: '13367899876' != '13628643073'
- 13367899876
+ 13628643073
Traceback (most recent call last):
  File "D:\apitest\testcases\test_register.py", line 54, in test_register
    self.assertEqual(user, phone)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '13367899876' != '13628643073'
- 13367899876
+ 13628643073

2020-02-26 00:01:33,392 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-26 00:01:33,520 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-26 00:01:33,520 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:01:33,654 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-26 00:01:33,654 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:01:33,853 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-26 00:01:34,070 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-26 00:01:34,199 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-26 00:01:34,728 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-26 00:01:35,120 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-26 00:01:35,497 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-26 00:01:35,867 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-26 00:01:35,997 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-26 00:01:36,133 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-26 00:01:36,269 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-26 00:01:36,269 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:01:36,435 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-26 00:01:36,568 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-26 00:01:36,569 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:01:36,705 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-26 00:01:36,705 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 00:01:36,840 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-26 00:01:36,841 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:01:36,994 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-26 00:01:37,126 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-26 00:01:37,126 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 00:01:37,265 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-26 00:01:37,832 - [test_register.py-->line:61] - ERROR: 用例不输入手机号执行通过
2020-02-26 00:01:37,965 - [test_register.py-->line:61] - ERROR: 用例手机号长度10位执行通过
2020-02-26 00:01:38,108 - [test_register.py-->line:61] - ERROR: 用例手机号长度12位执行通过
2020-02-26 00:01:38,248 - [test_register.py-->line:61] - ERROR: 用例手机号含有非法字符执行通过
2020-02-26 00:01:38,450 - [test_register.py-->line:61] - ERROR: 用例已注册过的手机号执行通过
2020-02-26 00:01:38,577 - [test_register.py-->line:61] - ERROR: 用例密码7位执行通过
2020-02-26 00:01:38,767 - [test_register.py-->line:61] - ERROR: 用例密码17位执行通过
2020-02-26 00:01:38,898 - [test_register.py-->line:61] - ERROR: 用例不输入密码执行通过
2020-02-26 00:01:39,045 - [test_register.py-->line:61] - ERROR: 用例注册名11位执行通过
2020-02-26 00:01:39,196 - [test_register.py-->line:61] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-26 00:03:04,099 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-26 00:03:04,231 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-26 00:03:04,231 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:03:04,380 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-26 00:03:04,380 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:03:04,577 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-26 00:03:04,790 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-26 00:03:04,924 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-26 00:03:05,446 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-26 00:03:05,816 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-26 00:03:06,178 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-26 00:03:06,540 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-26 00:03:06,673 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-26 00:03:06,805 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-26 00:03:06,940 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-26 00:03:06,940 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:03:07,093 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-26 00:03:07,240 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-26 00:03:07,240 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:03:07,395 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-26 00:03:07,395 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 00:03:07,536 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-26 00:03:07,537 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:03:07,684 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-26 00:03:07,826 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-26 00:03:07,826 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 00:03:07,964 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-26 00:03:08,324 - [test_register.py-->line:61] - ERROR: 用例注册成功-带注册名执行通过
2020-02-26 00:03:08,646 - [test_register.py-->line:61] - ERROR: 用例成功-不带用户名执行通过
2020-02-26 00:03:08,777 - [test_register.py-->line:61] - ERROR: 用例不输入手机号执行通过
2020-02-26 00:03:08,912 - [test_register.py-->line:61] - ERROR: 用例手机号长度10位执行通过
2020-02-26 00:03:09,049 - [test_register.py-->line:61] - ERROR: 用例手机号长度12位执行通过
2020-02-26 00:03:09,177 - [test_register.py-->line:61] - ERROR: 用例手机号含有非法字符执行通过
2020-02-26 00:03:09,409 - [test_register.py-->line:61] - ERROR: 用例已注册过的手机号执行通过
2020-02-26 00:03:09,540 - [test_register.py-->line:61] - ERROR: 用例密码7位执行通过
2020-02-26 00:03:09,679 - [test_register.py-->line:61] - ERROR: 用例密码17位执行通过
2020-02-26 00:03:09,818 - [test_register.py-->line:61] - ERROR: 用例不输入密码执行通过
2020-02-26 00:03:09,950 - [test_register.py-->line:61] - ERROR: 用例注册名11位执行通过
2020-02-26 00:03:10,077 - [test_register.py-->line:61] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-26 00:03:10,414 - [test_register.py-->line:61] - ERROR: 用例不输入类型执行通过
2020-02-26 00:07:36,361 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-26 00:07:36,512 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-26 00:07:36,512 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:07:36,654 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-26 00:07:36,654 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:07:36,832 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-26 00:07:37,053 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-26 00:07:37,178 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-26 00:07:37,685 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-26 00:07:38,042 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-26 00:07:38,418 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-26 00:07:38,874 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-26 00:07:39,005 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-26 00:07:39,144 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-26 00:07:39,289 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-26 00:07:39,289 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:07:39,433 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-26 00:07:39,578 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-26 00:07:39,578 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:07:39,716 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-26 00:07:39,716 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 00:07:39,862 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-26 00:07:39,863 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:07:40,010 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-26 00:07:40,143 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-26 00:07:40,143 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 00:07:40,275 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-26 00:07:40,660 - [test_register.py-->line:62] - ERROR: 用例不输入手机号执行通过
2020-02-26 00:07:40,798 - [test_register.py-->line:62] - ERROR: 用例手机号长度10位执行通过
2020-02-26 00:07:40,918 - [test_register.py-->line:62] - ERROR: 用例手机号长度12位执行通过
2020-02-26 00:07:41,046 - [test_register.py-->line:62] - ERROR: 用例手机号含有非法字符执行通过
2020-02-26 00:07:41,246 - [test_register.py-->line:62] - ERROR: 用例已注册过的手机号执行通过
2020-02-26 00:07:41,378 - [test_register.py-->line:62] - ERROR: 用例密码7位执行通过
2020-02-26 00:07:41,541 - [test_register.py-->line:62] - ERROR: 用例密码17位执行通过
2020-02-26 00:07:41,672 - [test_register.py-->line:62] - ERROR: 用例不输入密码执行通过
2020-02-26 00:07:41,801 - [test_register.py-->line:62] - ERROR: 用例注册名11位执行通过
2020-02-26 00:07:41,928 - [test_register.py-->line:62] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-26 00:08:45,024 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-26 00:08:45,150 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-26 00:08:45,150 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:08:45,288 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-26 00:08:45,288 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:08:45,420 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-26 00:08:45,572 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-26 00:08:45,723 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-26 00:08:46,180 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-26 00:08:46,544 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-26 00:08:46,915 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-26 00:08:47,290 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-26 00:08:47,419 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-26 00:08:47,543 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-26 00:08:47,679 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-26 00:08:47,679 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:08:47,812 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-26 00:08:47,945 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-26 00:08:47,945 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:08:48,091 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-26 00:08:48,091 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 00:08:48,224 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-26 00:08:48,224 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:08:48,353 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-26 00:08:48,477 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-26 00:08:48,477 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 00:08:48,615 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-26 00:08:48,947 - [test_register.py-->line:60] - ERROR: 用例注册成功-带注册名执行通过
2020-02-26 00:08:49,242 - [test_register.py-->line:60] - ERROR: 用例成功-不带用户名执行通过
2020-02-26 00:08:49,377 - [test_register.py-->line:60] - ERROR: 用例不输入手机号执行通过
2020-02-26 00:08:49,519 - [test_register.py-->line:60] - ERROR: 用例手机号长度10位执行通过
2020-02-26 00:08:49,646 - [test_register.py-->line:60] - ERROR: 用例手机号长度12位执行通过
2020-02-26 00:08:49,778 - [test_register.py-->line:60] - ERROR: 用例手机号含有非法字符执行通过
2020-02-26 00:08:50,021 - [test_register.py-->line:60] - ERROR: 用例已注册过的手机号执行通过
2020-02-26 00:08:50,176 - [test_register.py-->line:60] - ERROR: 用例密码7位执行通过
2020-02-26 00:08:50,317 - [test_register.py-->line:60] - ERROR: 用例密码17位执行通过
2020-02-26 00:08:50,458 - [test_register.py-->line:60] - ERROR: 用例不输入密码执行通过
2020-02-26 00:08:50,611 - [test_register.py-->line:60] - ERROR: 用例注册名11位执行通过
2020-02-26 00:08:50,748 - [test_register.py-->line:60] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-26 00:08:51,046 - [test_register.py-->line:60] - ERROR: 用例不输入类型执行通过
2020-02-26 00:18:31,563 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-26 00:18:31,728 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-02-26 00:18:31,728 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:18:31,877 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-26 00:18:31,877 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:18:32,135 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-26 00:18:32,373 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-26 00:18:32,511 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-26 00:18:33,131 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-26 00:18:33,542 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-26 00:18:33,928 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-26 00:18:34,293 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-26 00:18:34,453 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-26 00:18:34,607 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-26 00:18:34,759 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-26 00:18:34,759 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:18:34,952 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-26 00:18:35,094 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-26 00:18:35,094 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:18:35,238 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-26 00:18:35,238 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 00:18:35,375 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-26 00:18:35,375 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 00:18:35,523 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-26 00:18:35,656 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-26 00:18:35,656 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 00:18:35,796 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-26 00:18:36,196 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-26 00:18:36,529 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-26 00:18:36,703 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-26 00:18:36,843 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-26 00:18:36,978 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-26 00:18:37,117 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-26 00:18:37,357 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-26 00:18:37,502 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-26 00:18:37,674 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-26 00:18:37,807 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-26 00:18:37,947 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-26 00:18:38,091 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-26 00:18:38,399 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-26 00:18:38,927 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-26 00:18:39,387 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-26 00:18:39,799 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-26 00:18:40,192 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-26 00:18:40,335 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-26 00:18:40,335 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-26 00:18:40,496 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-26 00:18:40,496 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-26 00:18:40,673 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-26 00:18:40,673 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:18:40,817 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-26 00:18:40,817 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-26 00:18:41,007 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-26 00:18:41,007 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 00:18:41,159 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-26 00:18:41,159 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 00:18:41,376 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-26 00:18:41,376 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-26 00:18:41,526 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-26 00:18:41,672 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-26 00:18:41,672 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 00:18:41,814 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-26 00:18:41,814 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-26 11:33:58,031 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-26 11:33:58,184 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-26 11:33:58,184 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 11:33:58,430 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-26 11:33:58,657 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-26 11:33:58,791 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-26 11:33:59,292 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-26 11:33:59,667 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-26 11:34:00,042 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-26 11:34:00,421 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-26 11:34:00,572 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-26 11:34:00,722 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-26 11:34:00,864 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-26 11:34:00,864 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 11:34:01,029 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-26 11:34:01,165 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-26 11:34:01,165 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 11:34:01,325 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-26 11:34:01,325 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 11:34:01,460 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-26 11:34:01,460 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 11:34:01,662 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-26 11:34:01,803 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-26 11:34:01,803 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 11:34:02,000 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-26 11:34:02,338 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-26 11:34:02,673 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-26 11:34:02,807 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-26 11:34:02,995 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-26 11:34:03,136 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-26 11:34:03,308 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-26 11:34:03,489 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-26 11:34:03,646 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-26 11:34:03,785 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-26 11:34:03,986 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-26 11:34:04,135 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-26 11:34:04,289 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-26 11:34:04,606 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-26 11:34:05,115 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-26 11:34:05,494 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-26 11:34:05,873 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-26 11:34:06,238 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-26 11:34:06,372 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-26 11:34:06,373 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-26 11:34:06,574 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-26 11:34:06,575 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-26 11:34:06,725 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-26 11:34:06,725 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 11:34:06,925 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-26 11:34:06,926 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-26 11:34:07,083 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-26 11:34:07,083 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 11:34:07,328 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-26 11:34:07,328 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 11:34:07,476 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-26 11:34:07,476 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-26 11:34:07,677 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-26 11:34:07,828 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-26 11:34:07,828 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 11:34:08,022 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-26 11:34:08,022 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-26 20:00:39,321 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-26 20:00:39,468 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-26 20:00:39,469 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:00:39,814 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-26 20:00:40,069 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-26 20:00:40,253 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-26 20:00:40,768 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-26 20:00:41,138 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-26 20:00:41,519 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-26 20:00:41,892 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-26 20:00:42,035 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-26 20:00:42,200 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-26 20:00:42,367 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-26 20:00:42,367 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:00:42,557 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-26 20:00:42,710 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-26 20:00:42,710 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:00:42,887 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-26 20:00:42,887 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:00:43,038 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-26 20:00:43,038 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:00:43,287 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-26 20:00:43,432 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-26 20:00:43,432 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:00:43,691 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-26 20:00:44,063 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-26 20:00:44,389 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-26 20:00:44,586 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-26 20:00:44,731 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-26 20:00:44,882 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-26 20:00:45,061 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-26 20:00:45,285 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-26 20:00:45,435 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-26 20:00:45,594 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-26 20:00:45,780 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-26 20:00:45,939 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-26 20:00:46,117 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-26 20:00:46,468 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-26 20:00:46,979 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-26 20:00:47,376 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-26 20:00:47,791 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-26 20:00:48,195 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-26 20:00:48,341 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-26 20:00:48,341 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-26 20:00:48,550 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-26 20:00:48,550 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-26 20:00:48,855 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-26 20:00:48,855 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:00:49,022 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-26 20:00:49,022 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-26 20:00:49,241 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-26 20:00:49,241 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:00:49,374 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-26 20:00:49,374 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:00:49,542 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-26 20:00:49,542 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-26 20:00:49,685 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-26 20:00:49,872 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-26 20:00:49,872 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:00:50,053 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-26 20:00:50,053 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:23:39,655 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:23:39,792 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:23:39,792 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:23:40,022 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:23:40,215 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:23:40,348 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:23:40,777 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:23:41,138 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:23:41,484 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:23:41,831 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:23:41,960 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:23:42,087 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:23:42,224 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:23:42,225 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:23:42,368 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:23:42,510 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:23:42,510 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:23:42,651 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:23:42,652 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:23:42,785 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:23:42,786 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:23:42,922 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:23:43,051 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:23:43,051 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:23:43,183 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:23:43,546 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:23:43,869 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:23:44,047 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:23:44,188 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:23:44,318 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:23:44,459 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:23:44,664 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:23:44,794 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:23:44,948 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:23:45,095 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:23:45,231 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:23:45,363 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:23:45,673 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:23:46,224 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:23:46,642 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:23:47,035 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:23:47,533 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:23:47,762 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:23:47,762 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:23:47,957 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:23:47,957 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:23:48,100 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:23:48,100 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:23:48,329 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:23:48,329 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:23:48,527 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:23:48,527 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:23:48,669 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:23:48,669 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:23:48,907 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:23:48,908 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:23:49,127 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:23:49,293 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:23:49,294 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:23:49,434 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:23:49,434 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:27:19,859 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:27:19,991 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:27:19,991 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:27:20,226 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:27:20,429 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:27:20,569 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:27:21,000 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:27:21,358 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:27:21,713 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:27:22,071 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:27:22,201 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:27:22,337 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:27:22,473 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:27:22,473 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:27:22,601 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:27:22,732 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:27:22,733 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:27:22,869 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:27:22,869 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:27:23,000 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:27:23,000 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:27:23,143 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:27:23,270 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:27:23,270 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:27:23,402 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:27:23,742 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:27:24,041 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:27:24,202 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:27:24,334 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:27:24,460 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:27:24,601 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:27:24,801 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:27:24,932 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:27:25,061 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:27:25,199 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:27:25,326 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:27:25,454 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:27:25,775 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:27:26,275 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:27:26,624 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:27:26,987 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:27:27,338 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:27:27,469 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:27:27,469 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:27:27,655 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:27:27,655 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:27:27,838 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:27:27,838 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:27:28,013 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:27:28,013 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:27:28,209 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:27:28,209 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:27:28,350 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:27:28,351 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:27:28,504 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:27:28,504 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:27:28,662 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:27:28,835 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:27:28,835 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:27:28,968 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:27:28,968 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:30:10,911 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:30:11,104 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:30:11,104 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:30:11,332 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:30:11,688 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:30:11,853 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:30:12,325 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:30:12,727 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:30:13,106 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:30:13,487 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:30:13,620 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:30:13,752 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:30:13,905 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:30:13,905 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:30:14,057 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:30:14,195 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:30:14,195 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:30:14,331 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:30:14,332 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:30:14,473 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:30:14,474 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:30:14,607 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:30:14,738 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:30:14,738 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:30:14,870 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:30:15,211 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:30:15,544 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:30:15,675 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:30:15,806 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:30:15,930 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:30:16,064 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:30:16,265 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:30:16,409 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:30:16,539 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:30:16,662 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:30:16,791 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:30:16,918 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:30:17,214 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:30:17,719 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:30:18,094 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:30:18,460 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:30:18,835 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:30:18,978 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:30:18,978 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:30:19,139 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:30:19,139 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:30:19,289 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:30:19,290 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:30:19,466 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:30:19,466 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:30:19,600 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:30:19,600 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:30:19,733 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:30:19,733 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:30:19,873 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:30:19,873 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:30:20,002 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:30:20,135 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:30:20,136 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:30:20,307 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:30:20,307 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:32:27,132 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:32:27,276 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:32:27,276 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:32:27,510 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:32:27,804 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:32:27,999 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:32:28,477 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:32:28,896 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:32:29,312 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:32:29,782 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:32:29,985 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:32:30,119 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:32:30,325 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:32:30,325 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:32:30,488 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:32:30,683 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:32:30,684 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:32:30,850 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:32:30,850 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:32:30,984 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:32:30,984 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:32:31,146 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:32:31,311 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:32:31,311 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:32:31,497 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:32:31,889 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:32:32,263 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:32:32,389 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:32:32,562 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:32:32,690 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:32:32,868 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:32:33,122 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:32:33,281 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:32:33,431 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:32:33,577 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:32:33,760 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:32:33,906 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:32:34,264 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:32:34,867 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:32:35,284 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:32:35,707 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:32:36,132 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:32:36,286 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:32:36,286 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:32:36,451 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:32:36,451 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:32:36,628 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:32:36,628 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:32:36,853 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:32:36,853 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:32:37,060 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:32:37,060 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:32:37,200 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:32:37,200 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:32:37,365 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:32:37,365 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:32:37,498 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:32:37,698 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:32:37,698 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:32:37,897 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:32:37,897 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:34:51,550 - [test_loanadd.py-->line:71] - ERROR: 用例CC执行未通过
2020-02-28 02:34:51,550 - [test_loanadd.py-->line:72] - ERROR: 1 != 3897
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 65, in test_add
    self.assertEqual(1, count)
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 3897
2020-02-28 02:34:51,879 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:34:52,044 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:34:52,044 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:34:52,280 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:34:52,552 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:34:52,712 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:34:53,248 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:34:53,695 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:34:54,119 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:34:54,595 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:34:54,738 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:34:54,906 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:34:55,083 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:34:55,084 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:34:55,221 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:34:55,380 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:34:55,380 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:34:55,556 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:34:55,557 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:34:55,707 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:34:55,707 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:34:55,849 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:34:56,013 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:34:56,013 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:34:56,201 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:34:56,585 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:34:56,959 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:34:57,117 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:34:57,272 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:34:57,398 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:34:57,598 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:34:57,867 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:34:58,016 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:34:58,152 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:34:58,351 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:34:58,498 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:34:58,649 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:34:59,003 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:34:59,569 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:34:59,994 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:35:00,450 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:35:00,894 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:35:01,046 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:35:01,046 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:35:01,233 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:35:01,234 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:35:01,470 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:35:01,470 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:35:01,618 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:35:01,619 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:35:01,839 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:35:01,839 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:35:02,025 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:35:02,025 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:35:02,162 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:35:02,162 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:35:02,307 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:35:02,449 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:35:02,449 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:35:02,606 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:35:02,606 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:42:42,053 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-02-28 02:42:42,321 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:42:42,470 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:42:42,471 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:42:42,746 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:42:43,077 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:42:43,217 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:42:43,750 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:42:44,172 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:42:44,683 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:42:45,171 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:42:45,325 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:42:45,497 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:42:45,685 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:42:45,685 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:42:45,828 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:42:46,029 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:42:46,029 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:42:46,197 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:42:46,197 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:42:46,362 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:42:46,362 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:42:46,538 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:42:46,805 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:42:46,806 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:42:46,957 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:42:47,412 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:42:47,820 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:42:47,951 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:42:48,141 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:42:48,320 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:42:48,454 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:42:48,697 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:42:48,918 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:42:49,114 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:42:49,284 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:42:49,414 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:42:49,637 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:42:50,031 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:42:50,582 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:42:51,018 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:42:51,447 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:42:51,859 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:42:52,028 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:42:52,028 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:42:52,210 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:42:52,210 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:42:52,432 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:42:52,432 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:42:52,605 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:42:52,605 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:42:52,809 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:42:52,809 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:42:53,080 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:42:53,080 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:42:53,237 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:42:53,237 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:42:53,440 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:42:53,622 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:42:53,622 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:42:53,793 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:42:53,793 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:45:33,864 - [test_loanadd.py-->line:71] - ERROR: 用例CC执行未通过
2020-02-28 02:45:33,864 - [test_loanadd.py-->line:72] - ERROR: {'member_id': 74711} != 74711
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 65, in test_add
    self.assertEqual(add1, data["member_id"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'member_id': 74711} != 74711
2020-02-28 02:45:34,097 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:45:34,229 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:45:34,230 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:45:34,451 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:45:34,647 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:45:34,780 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:45:35,201 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:45:35,569 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:45:35,928 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:45:36,291 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:45:36,421 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:45:36,551 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:45:36,696 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:45:36,696 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:45:36,835 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:45:36,981 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:45:36,982 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:45:37,120 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:45:37,120 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:45:37,259 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:45:37,259 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:45:37,395 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:45:37,533 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:45:37,533 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:45:37,706 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:45:38,080 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:45:38,457 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:45:38,594 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:45:38,780 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:45:39,049 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:45:39,228 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:45:39,472 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:45:39,652 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:45:39,811 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:45:40,002 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:45:40,176 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:45:40,312 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:45:40,743 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:45:41,425 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:45:41,944 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:45:42,444 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:45:42,931 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:45:43,057 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:45:43,057 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:45:43,226 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:45:43,226 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:45:43,395 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:45:43,395 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:45:43,579 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:45:43,579 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:45:43,745 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:45:43,745 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:45:43,882 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:45:43,882 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:45:44,017 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:45:44,017 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:45:44,159 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:45:44,287 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:45:44,287 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:45:44,450 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:45:44,450 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:46:25,636 - [test_loanadd.py-->line:71] - ERROR: 用例CC执行未通过
2020-02-28 02:46:25,637 - [test_loanadd.py-->line:72] - ERROR: {'member_id': 74711} != '74711'
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 65, in test_add
    self.assertEqual(add1, str(data["member_id"]))
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'member_id': 74711} != '74711'
2020-02-28 02:46:25,973 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:46:26,125 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:46:26,125 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:46:26,393 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:46:26,663 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:46:26,790 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:46:27,345 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:46:27,784 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:46:28,200 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:46:28,696 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:46:28,900 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:46:29,102 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:46:29,298 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:46:29,298 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:46:29,466 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:46:29,652 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:46:29,652 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:46:29,827 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:46:29,827 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:46:29,996 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:46:29,996 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:46:30,158 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:46:30,290 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:46:30,290 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:46:30,499 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:46:30,887 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:46:31,229 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:46:31,387 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:46:31,514 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:46:31,728 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:46:31,909 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:46:32,152 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:46:32,284 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:46:32,424 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:46:32,585 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:46:32,714 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:46:32,925 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:46:33,246 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:46:33,787 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:46:34,222 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:46:34,627 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:46:35,014 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:46:35,172 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:46:35,173 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:46:35,402 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:46:35,402 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:46:35,604 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:46:35,604 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:46:35,739 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:46:35,739 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:46:35,939 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:46:35,939 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:46:36,089 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:46:36,089 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:46:36,253 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:46:36,253 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:46:36,442 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:46:36,599 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:46:36,599 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:46:36,731 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:46:36,732 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:47:23,789 - [test_loanadd.py-->line:71] - ERROR: 用例CC执行未通过
2020-02-28 02:47:23,789 - [test_loanadd.py-->line:72] - ERROR: {'member_id': 74711} != 74711
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 65, in test_add
    self.assertEqual(add1, data["member_id"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'member_id': 74711} != 74711
2020-02-28 02:47:24,068 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:47:24,228 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:47:24,228 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:47:24,434 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:47:24,677 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:47:24,814 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:47:25,287 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:47:25,698 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:47:26,075 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:47:26,513 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:47:26,645 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:47:26,808 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:47:26,983 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:47:26,983 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:47:27,124 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:47:27,343 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:47:27,343 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:47:27,475 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:47:27,475 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:47:27,668 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:47:27,668 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:47:27,798 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:47:27,937 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:47:27,937 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:47:28,104 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:47:28,511 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:47:28,843 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:47:29,029 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:47:29,184 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:47:29,368 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:47:29,551 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:47:29,799 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:47:29,970 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:47:30,195 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:47:30,353 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:47:30,526 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:47:30,701 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:47:31,129 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:47:31,793 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:47:32,244 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:47:32,672 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:47:33,135 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:47:33,352 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:47:33,352 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:47:33,558 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:47:33,558 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:47:33,708 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:47:33,708 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:47:33,875 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:47:33,876 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:47:34,044 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:47:34,044 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:47:34,257 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:47:34,257 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:47:34,435 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:47:34,435 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:47:34,608 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:47:34,843 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:47:34,843 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:47:35,012 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:47:35,013 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:49:53,104 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-02-28 02:49:53,104 - [test_loanadd.py-->line:74] - ERROR: {'member_id': 74711} != 74711
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 67, in test_add
    self.assertEqual(add1, data["member_id"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'member_id': 74711} != 74711
2020-02-28 02:49:53,356 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:49:53,488 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:49:53,489 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:49:53,728 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:49:53,974 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:49:54,176 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:49:54,658 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:49:55,089 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:49:55,492 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:49:55,892 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:49:56,049 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:49:56,243 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:49:56,383 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:49:56,383 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:49:56,515 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:49:56,656 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:49:56,656 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:49:56,793 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:49:56,793 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:49:56,958 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:49:56,958 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:49:57,098 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:49:57,302 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:49:57,302 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:49:57,498 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:49:57,942 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:49:58,271 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:49:58,486 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:49:58,641 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:49:58,789 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:49:58,934 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:49:59,158 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:49:59,296 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:49:59,433 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:49:59,587 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:49:59,831 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:50:00,020 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:50:00,388 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:50:00,964 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:50:01,453 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:50:01,873 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:50:02,270 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:50:02,424 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:50:02,424 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:50:02,609 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:50:02,609 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:50:02,896 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:50:02,896 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:50:03,030 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:50:03,030 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:50:03,253 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:50:03,253 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:50:03,413 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:50:03,414 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:50:03,563 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:50:03,563 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:50:03,696 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:50:03,923 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:50:03,923 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:50:04,087 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:50:04,087 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:55:49,414 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:55:49,546 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:55:49,546 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:55:49,777 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:55:50,047 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:55:50,200 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:55:50,729 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:55:51,213 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:55:51,667 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:55:52,109 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:55:52,285 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:55:52,455 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:55:52,654 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:55:52,654 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:55:52,837 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:55:53,027 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:55:53,027 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:55:53,166 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:55:53,166 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:55:53,358 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:55:53,358 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:55:53,496 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:55:53,694 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:55:53,694 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:55:53,831 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:55:54,234 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:55:54,569 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:55:54,699 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:55:54,912 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:55:55,128 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:55:55,302 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:55:55,602 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:55:55,821 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:55:55,996 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:55:56,192 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:55:56,335 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:55:56,497 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:55:56,852 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:55:57,429 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:55:57,889 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:55:58,313 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:55:58,701 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:55:58,828 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:55:58,828 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:55:58,976 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:55:58,977 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:55:59,175 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:55:59,175 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:55:59,314 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:55:59,314 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:55:59,542 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:55:59,542 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:55:59,692 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:55:59,692 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:55:59,826 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:55:59,826 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:55:59,974 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:56:00,104 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:56:00,105 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:56:00,235 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:56:00,236 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:59:15,178 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 02:59:15,321 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 02:59:15,322 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:59:15,652 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 02:59:15,913 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 02:59:16,079 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 02:59:16,604 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 02:59:17,108 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 02:59:17,591 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 02:59:18,003 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 02:59:18,243 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 02:59:18,524 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 02:59:18,684 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:59:18,685 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:59:18,855 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 02:59:19,018 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 02:59:19,018 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:59:19,163 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 02:59:19,163 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:59:19,302 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 02:59:19,302 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 02:59:19,441 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 02:59:19,612 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 02:59:19,613 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 02:59:19,750 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 02:59:20,199 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 02:59:20,542 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 02:59:20,674 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 02:59:20,869 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 02:59:21,024 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 02:59:21,195 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 02:59:21,455 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 02:59:21,692 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 02:59:21,883 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 02:59:22,044 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 02:59:22,220 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 02:59:22,364 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 02:59:22,727 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 02:59:23,308 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 02:59:23,708 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 02:59:24,166 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 02:59:24,575 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 02:59:24,749 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 02:59:24,749 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 02:59:24,946 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 02:59:24,946 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 02:59:25,191 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 02:59:25,191 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:59:25,365 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 02:59:25,365 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 02:59:25,538 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 02:59:25,538 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 02:59:25,698 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 02:59:25,698 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:59:25,855 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 02:59:25,855 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 02:59:26,011 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 02:59:26,178 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 02:59:26,178 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 02:59:26,326 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 02:59:26,327 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:02:51,731 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 03:02:51,878 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 03:02:51,878 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:02:52,129 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 03:02:52,387 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 03:02:52,580 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 03:02:53,040 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 03:02:53,481 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 03:02:53,950 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 03:02:54,391 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 03:02:54,603 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 03:02:54,772 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 03:02:54,947 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:02:54,947 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:02:55,073 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 03:02:55,220 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 03:02:55,220 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:02:55,358 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 03:02:55,358 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:02:55,558 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 03:02:55,558 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:02:55,812 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 03:02:55,946 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 03:02:55,946 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:02:56,102 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 03:02:56,485 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 03:02:56,871 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 03:02:57,065 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 03:02:57,236 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 03:02:57,367 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 03:02:57,570 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 03:02:57,791 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 03:02:57,950 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 03:02:58,109 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 03:02:58,301 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 03:02:58,472 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 03:02:58,650 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 03:02:59,005 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 03:02:59,560 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 03:02:59,991 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 03:03:00,406 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 03:03:00,799 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 03:03:00,925 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 03:03:00,925 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 03:03:01,078 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 03:03:01,078 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 03:03:01,225 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:03:01,226 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:03:01,421 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 03:03:01,421 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:03:01,599 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 03:03:01,599 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:03:01,835 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 03:03:01,835 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:03:02,022 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 03:03:02,022 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 03:03:02,205 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 03:03:02,358 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 03:03:02,358 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:03:02,551 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 03:03:02,551 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:05:24,344 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 03:05:24,484 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 03:05:24,484 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:05:24,692 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 03:05:24,889 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 03:05:25,027 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 03:05:25,476 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 03:05:25,830 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 03:05:26,196 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 03:05:26,556 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 03:05:26,686 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 03:05:26,826 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 03:05:26,966 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:05:26,966 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:05:27,135 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 03:05:27,331 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 03:05:27,332 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:05:27,461 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 03:05:27,462 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:05:27,589 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 03:05:27,589 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:05:27,760 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 03:05:27,888 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 03:05:27,888 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:05:28,018 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 03:05:28,406 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 03:05:28,777 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 03:05:28,952 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 03:05:29,101 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 03:05:29,272 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 03:05:29,401 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 03:05:29,643 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 03:05:29,786 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 03:05:29,992 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 03:05:30,154 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 03:05:30,307 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 03:05:30,440 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 03:05:30,812 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 03:05:31,425 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 03:05:31,860 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 03:05:32,327 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 03:05:32,766 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 03:05:32,913 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 03:05:32,913 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 03:05:33,091 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 03:05:33,091 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 03:05:33,276 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:05:33,276 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:05:33,411 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 03:05:33,411 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:05:33,612 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 03:05:33,612 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:05:33,750 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 03:05:33,750 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:05:33,931 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 03:05:33,931 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 03:05:34,063 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 03:05:34,199 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 03:05:34,199 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:05:34,339 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 03:05:34,339 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:07:13,487 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 03:07:13,664 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 03:07:13,664 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:07:13,989 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 03:07:14,278 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 03:07:14,560 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 03:07:15,076 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 03:07:15,518 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 03:07:15,890 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 03:07:16,341 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 03:07:16,569 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 03:07:16,728 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 03:07:16,906 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:07:16,907 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:07:17,182 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 03:07:17,405 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 03:07:17,406 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:07:17,575 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 03:07:17,575 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:07:17,802 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 03:07:17,802 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:07:17,936 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 03:07:18,131 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 03:07:18,131 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:07:18,395 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 03:07:18,868 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 03:07:19,259 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 03:07:19,493 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 03:07:19,675 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 03:07:19,934 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 03:07:20,069 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 03:07:20,320 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 03:07:20,468 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 03:07:20,598 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 03:07:20,728 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 03:07:20,948 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 03:07:21,114 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 03:07:21,462 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 03:07:22,020 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 03:07:22,416 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 03:07:22,890 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 03:07:23,309 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 03:07:23,474 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 03:07:23,474 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 03:07:23,633 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 03:07:23,633 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 03:07:23,870 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:07:23,870 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:07:23,998 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 03:07:23,998 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:07:24,189 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 03:07:24,189 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:07:24,318 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 03:07:24,318 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:07:24,525 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 03:07:24,525 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 03:07:24,650 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 03:07:24,815 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 03:07:24,815 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:07:24,983 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 03:07:24,983 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:13:02,282 - [test_loanadd.py-->line:71] - ERROR: 用例CC执行未通过
2020-02-28 03:13:02,282 - [test_loanadd.py-->line:72] - ERROR: {'member_id': 74711} != 74711
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 65, in test_add
    self.assertEqual(add1, data["member_id"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'member_id': 74711} != 74711
2020-02-28 03:13:02,555 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 03:13:02,691 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 03:13:02,691 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:13:02,955 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 03:13:03,204 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 03:13:03,374 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 03:13:04,182 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 03:13:04,593 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 03:13:05,014 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 03:13:05,460 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 03:13:05,590 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 03:13:05,720 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 03:13:06,050 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:13:06,051 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:13:06,254 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 03:13:06,426 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 03:13:06,426 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:13:06,610 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 03:13:06,610 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:13:06,755 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 03:13:06,755 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:13:06,930 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 03:13:07,061 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 03:13:07,061 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:13:07,228 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 03:13:07,651 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 03:13:08,009 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 03:13:08,170 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 03:13:08,312 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 03:13:08,488 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 03:13:08,629 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 03:13:08,971 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 03:13:09,149 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 03:13:09,289 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 03:13:09,462 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 03:13:09,613 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 03:13:09,784 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 03:13:10,147 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 03:13:10,721 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 03:13:11,195 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 03:13:11,658 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 03:13:12,091 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 03:13:12,224 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 03:13:12,224 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 03:13:12,421 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 03:13:12,421 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 03:13:12,632 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:13:12,632 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:13:12,769 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 03:13:12,769 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:13:12,915 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 03:13:12,915 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:13:13,080 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 03:13:13,080 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:13:13,240 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 03:13:13,240 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 03:13:13,436 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 03:13:13,599 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 03:13:13,599 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:13:13,773 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 03:13:13,773 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:15:05,459 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 03:15:05,599 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 03:15:05,599 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:15:05,829 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 03:15:06,066 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 03:15:06,238 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 03:15:06,699 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 03:15:07,089 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 03:15:07,478 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 03:15:07,892 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 03:15:08,016 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 03:15:08,149 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 03:15:08,373 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:15:08,373 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:15:08,501 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 03:15:08,699 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 03:15:08,699 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:15:08,854 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 03:15:08,854 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:15:09,026 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 03:15:09,026 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:15:09,245 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 03:15:09,409 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 03:15:09,409 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:15:09,569 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 03:15:10,015 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 03:15:10,446 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 03:15:10,607 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 03:15:10,773 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 03:15:10,905 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 03:15:11,094 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 03:15:11,346 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 03:15:11,503 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 03:15:11,680 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 03:15:11,845 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 03:15:12,026 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 03:15:12,192 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 03:15:12,544 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 03:15:13,116 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 03:15:13,553 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 03:15:13,955 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 03:15:14,374 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 03:15:14,499 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 03:15:14,499 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 03:15:14,635 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 03:15:14,635 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 03:15:14,807 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:15:14,807 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:15:15,007 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 03:15:15,007 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:15:15,164 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 03:15:15,164 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:15:15,341 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 03:15:15,341 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:15:15,485 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 03:15:15,485 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 03:15:15,613 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 03:15:15,741 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 03:15:15,741 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:15:15,960 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 03:15:15,960 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:15:47,599 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-02-28 03:15:47,887 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 03:15:48,038 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 03:15:48,038 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:15:48,274 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 03:15:48,517 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 03:15:48,652 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 03:15:49,118 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 03:15:49,541 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 03:15:49,899 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 03:15:50,292 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 03:15:50,438 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 03:15:50,571 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 03:15:50,761 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:15:50,761 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:15:50,903 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 03:15:51,077 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 03:15:51,077 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:15:51,243 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 03:15:51,243 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:15:51,375 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 03:15:51,375 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:15:51,523 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 03:15:51,692 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 03:15:51,692 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:15:51,857 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 03:15:52,261 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 03:15:52,624 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 03:15:52,777 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 03:15:52,907 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 03:15:53,076 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 03:15:53,235 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 03:15:53,499 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 03:15:53,632 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 03:15:53,829 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 03:15:53,957 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 03:15:54,160 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 03:15:54,291 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 03:15:54,636 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 03:15:55,229 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 03:15:55,667 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 03:15:56,145 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 03:15:56,620 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 03:15:56,800 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 03:15:56,800 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 03:15:56,968 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 03:15:56,968 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 03:15:57,125 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:15:57,126 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:15:57,304 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 03:15:57,304 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:15:57,589 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 03:15:57,589 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:15:57,813 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 03:15:57,813 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:15:57,947 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 03:15:57,947 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 03:15:58,160 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 03:15:58,342 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 03:15:58,342 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:15:58,522 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 03:15:58,522 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:22:10,686 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-02-28 03:22:10,977 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-02-28 03:22:11,288 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 03:22:11,466 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 03:22:11,466 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:22:11,706 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 03:22:11,918 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 03:22:12,057 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 03:22:12,605 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 03:22:13,087 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 03:22:13,575 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 03:22:14,130 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 03:22:14,255 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 03:22:14,381 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 03:22:14,561 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:22:14,561 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:22:14,698 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 03:22:14,855 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 03:22:14,855 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:22:15,014 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 03:22:15,015 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:22:15,159 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 03:22:15,159 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:22:15,326 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 03:22:15,486 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 03:22:15,486 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:22:15,625 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 03:22:16,105 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 03:22:16,488 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 03:22:16,657 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 03:22:16,858 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 03:22:16,998 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 03:22:17,192 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 03:22:17,451 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 03:22:17,623 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 03:22:17,778 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 03:22:17,950 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 03:22:18,158 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 03:22:18,301 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 03:22:18,681 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 03:22:19,228 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 03:22:19,677 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 03:22:20,098 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 03:22:20,552 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 03:22:20,699 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 03:22:20,699 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 03:22:20,848 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 03:22:20,848 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 03:22:21,010 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:22:21,010 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:22:21,163 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 03:22:21,163 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:22:21,350 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 03:22:21,351 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:22:21,513 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 03:22:21,513 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:22:21,671 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 03:22:21,671 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 03:22:21,831 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 03:22:22,045 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 03:22:22,045 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:22:22,215 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 03:22:22,215 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:27:13,157 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-02-28 03:27:13,458 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-02-28 03:27:13,629 - [test_loanadd.py-->line:71] - ERROR: 用例CC执行未通过
2020-02-28 03:27:13,630 - [test_loanadd.py-->line:72] - ERROR: '借款范围期限为1到36个月' != '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)'
- 借款范围期限为1到36个月
+ 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 59, in test_add
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款范围期限为1到36个月' != '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)'
- 借款范围期限为1到36个月
+ 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)

2020-02-28 03:27:13,881 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 03:27:14,040 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 03:27:14,040 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:27:14,256 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 03:27:14,529 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 03:27:14,665 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 03:27:15,162 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 03:27:15,575 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 03:27:16,005 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 03:27:16,451 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 03:27:16,600 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 03:27:16,743 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 03:27:16,891 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:27:16,891 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:27:17,036 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 03:27:17,330 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 03:27:17,330 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:27:17,517 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 03:27:17,517 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:27:17,789 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 03:27:17,790 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:27:18,027 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 03:27:18,190 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 03:27:18,190 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:27:18,414 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 03:27:18,830 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 03:27:19,238 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 03:27:19,488 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 03:27:19,690 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 03:27:19,937 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 03:27:20,146 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 03:27:20,406 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 03:27:20,538 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 03:27:20,719 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 03:27:20,981 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 03:27:21,127 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 03:27:21,276 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 03:27:21,610 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 03:27:22,157 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 03:27:22,653 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 03:27:23,126 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 03:27:23,548 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 03:27:23,721 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 03:27:23,721 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 03:27:23,899 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 03:27:23,899 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 03:27:24,097 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:27:24,097 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:27:24,241 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 03:27:24,241 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:27:24,419 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 03:27:24,419 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:27:24,552 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 03:27:24,552 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:27:24,688 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 03:27:24,688 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 03:27:24,819 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 03:27:24,949 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 03:27:24,949 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:27:25,142 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 03:27:25,142 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:29:20,904 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-02-28 03:29:21,207 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-02-28 03:29:21,372 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-02-28 03:29:21,689 - [test_login.py-->line:44] - ERROR: 用例登录成功执行通过
2020-02-28 03:29:21,833 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-02-28 03:29:21,833 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:29:22,074 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-02-28 03:29:22,323 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-02-28 03:29:22,456 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-02-28 03:29:22,956 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-整数执行通过
2020-02-28 03:29:23,383 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-1位小数执行通过
2020-02-28 03:29:23,789 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-2位小数执行通过
2020-02-28 03:29:24,190 - [test_recharge.py-->line:84] - ERROR: 用例充值成功-50万执行通过
2020-02-28 03:29:24,340 - [test_recharge.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-02-28 03:29:24,531 - [test_recharge.py-->line:84] - ERROR: 用例id不是当前登录的用户执行通过
2020-02-28 03:29:24,670 - [test_recharge.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:29:24,670 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:29:24,858 - [test_recharge.py-->line:84] - ERROR: 用例会员id为小数执行通过
2020-02-28 03:29:25,055 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为0执行未通过
2020-02-28 03:29:25,055 - [test_recharge.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:29:25,208 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为负数执行未通过
2020-02-28 03:29:25,208 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:29:25,388 - [test_recharge.py-->line:78] - ERROR: 用例充值金额为空执行未通过
2020-02-28 03:29:25,388 - [test_recharge.py-->line:79] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 03:29:25,527 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-3位小数执行通过
2020-02-28 03:29:25,657 - [test_recharge.py-->line:78] - ERROR: 用例充值金额-大于50万执行未通过
2020-02-28 03:29:25,657 - [test_recharge.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 03:29:25,810 - [test_recharge.py-->line:84] - ERROR: 用例充值金额-非数字执行通过
2020-02-28 03:29:26,210 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-02-28 03:29:26,563 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-02-28 03:29:26,773 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-02-28 03:29:26,917 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-02-28 03:29:27,048 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-02-28 03:29:27,203 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-02-28 03:29:27,522 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-02-28 03:29:27,698 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-02-28 03:29:27,841 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-02-28 03:29:28,019 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-02-28 03:29:28,156 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-02-28 03:29:28,358 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-02-28 03:29:28,702 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-02-28 03:29:29,239 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-02-28 03:29:29,668 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-02-28 03:29:30,121 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-02-28 03:29:30,523 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-02-28 03:29:30,708 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-02-28 03:29:30,708 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-02-28 03:29:30,885 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-02-28 03:29:30,885 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-02-28 03:29:31,048 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-02-28 03:29:31,048 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:29:31,189 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-02-28 03:29:31,190 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-02-28 03:29:31,406 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-02-28 03:29:31,406 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 03:29:31,550 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-02-28 03:29:31,550 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:29:31,707 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-02-28 03:29:31,708 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-02-28 03:29:31,858 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-02-28 03:29:32,010 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-02-28 03:29:32,010 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 03:29:32,185 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-02-28 03:29:32,186 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 17:48:48,784 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 17:48:48,785 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 17:48:48,962 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 17:48:48,963 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 17:48:49,167 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 17:48:49,307 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 17:48:49,501 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 17:48:49,787 - [test_recharge.py-->line:86] - ERROR: 用例会员id为空执行通过
2020-03-01 17:48:49,927 - [test_recharge.py-->line:86] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 17:48:50,204 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 17:48:50,501 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 17:48:50,660 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 17:48:50,847 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 17:48:51,013 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 17:48:51,169 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 17:48:51,341 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 17:48:51,501 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 17:48:51,668 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 17:48:51,825 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 17:48:51,966 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 17:48:52,112 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 17:48:52,406 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 17:48:52,857 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-整数执行未通过
2020-03-01 17:48:52,857 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-03-01 17:48:53,243 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-1位小数执行未通过
2020-03-01 17:48:53,243 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-03-01 17:48:53,572 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-2位小数执行未通过
2020-03-01 17:48:53,572 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-03-01 17:48:53,890 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-50万执行未通过
2020-03-01 17:48:53,891 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-03-01 17:48:54,043 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 17:48:54,043 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 17:48:54,203 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 17:48:54,203 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 17:48:54,356 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 17:48:54,356 - [test_withdraw.py-->line:79] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-03-01 17:48:54,528 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 17:48:54,528 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 17:48:54,725 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 17:48:54,725 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 17:48:54,869 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 17:48:54,869 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 17:48:55,008 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 17:48:55,008 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 17:48:55,196 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 17:48:55,357 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 17:48:55,357 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 17:48:55,548 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 17:48:55,549 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 17:56:46,383 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 17:56:46,383 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 17:56:46,542 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 17:56:46,543 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 17:56:46,749 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 17:56:46,971 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 17:56:47,127 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 17:56:47,389 - [test_recharge.py-->line:86] - ERROR: 用例会员id为空执行通过
2020-03-01 17:56:47,586 - [test_recharge.py-->line:86] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 17:56:47,899 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 17:56:48,198 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 17:56:48,433 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 17:56:48,676 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 17:56:48,862 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 17:56:49,035 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 17:56:49,183 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 17:56:49,365 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 17:56:49,552 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 17:56:49,733 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 17:56:49,925 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 17:56:50,064 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 17:56:50,368 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 17:56:50,775 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-整数执行未通过
2020-03-01 17:56:50,775 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-03-01 17:56:51,107 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-1位小数执行未通过
2020-03-01 17:56:51,107 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-03-01 17:56:51,438 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-2位小数执行未通过
2020-03-01 17:56:51,438 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-03-01 17:56:51,775 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-50万执行未通过
2020-03-01 17:56:51,775 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-03-01 17:56:51,957 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 17:56:51,957 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 17:56:52,143 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 17:56:52,143 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 17:56:52,311 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 17:56:52,311 - [test_withdraw.py-->line:79] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-03-01 17:56:52,509 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 17:56:52,509 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 17:56:52,669 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 17:56:52,669 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 17:56:52,873 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 17:56:52,874 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 17:56:53,058 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 17:56:53,058 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 17:56:53,224 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 17:56:53,390 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 17:56:53,390 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 17:56:53,564 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 17:56:53,564 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 18:22:48,752 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 18:22:48,752 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 18:22:48,943 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 18:22:48,943 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 18:22:49,103 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 18:22:49,263 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 18:22:49,437 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 18:22:49,892 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 18:22:50,212 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 18:22:50,540 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 18:22:50,880 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 18:22:51,065 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 18:22:51,222 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 18:22:51,386 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 18:22:51,387 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:22:51,547 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 18:22:51,711 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 18:22:51,711 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:22:51,913 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 18:22:51,913 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 18:22:52,206 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 18:22:52,206 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 18:22:52,488 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 18:22:52,743 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 18:22:52,743 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 18:22:52,953 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 18:22:53,246 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 18:22:53,535 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 18:22:53,694 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 18:22:53,858 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 18:22:54,036 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 18:22:54,203 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 18:22:54,372 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 18:22:54,539 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 18:22:54,709 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 18:22:54,880 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 18:22:55,041 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 18:22:55,208 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 18:22:55,453 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 18:22:55,842 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 18:22:56,159 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 18:22:56,487 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 18:22:56,826 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 18:22:56,968 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 18:22:56,968 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 18:22:57,115 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 18:22:57,116 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 18:22:57,267 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 18:22:57,267 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:22:57,459 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 18:22:57,459 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 18:22:57,640 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 18:22:57,640 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:22:57,785 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 18:22:57,785 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 18:22:57,924 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 18:22:57,924 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 18:22:58,075 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 18:22:58,246 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 18:22:58,247 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 18:22:58,417 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 18:22:58,417 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 18:34:01,555 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 18:34:01,555 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 18:34:01,723 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 18:34:01,723 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 18:34:01,883 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 18:34:02,042 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 18:34:02,197 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 18:34:02,575 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 18:34:02,869 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 18:34:03,198 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 18:34:03,522 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 18:34:03,692 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 18:34:03,847 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 18:34:04,078 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 18:34:04,078 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:34:04,299 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 18:34:04,461 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 18:34:04,461 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:34:04,643 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 18:34:04,644 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 18:34:04,819 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 18:34:04,819 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 18:34:05,016 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 18:34:05,176 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 18:34:05,176 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 18:34:05,363 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 18:34:05,711 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 18:34:05,989 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 18:34:06,148 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 18:34:06,307 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 18:34:06,457 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 18:34:06,611 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 18:34:06,793 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 18:34:06,947 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 18:34:07,090 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 18:34:07,254 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 18:34:07,399 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 18:34:07,570 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 18:34:07,818 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 18:34:08,211 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 18:34:08,546 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 18:34:08,890 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 18:34:09,222 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 18:34:09,370 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 18:34:09,371 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 18:34:09,560 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 18:34:09,561 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 18:34:09,744 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 18:34:09,744 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:34:09,950 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 18:34:09,950 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 18:34:10,102 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 18:34:10,102 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:34:10,249 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 18:34:10,250 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 18:34:10,392 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 18:34:10,392 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 18:34:10,549 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 18:34:10,690 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 18:34:10,690 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 18:34:10,838 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 18:34:10,839 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 18:35:10,609 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 18:35:10,609 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 18:35:10,782 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 18:35:10,782 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 18:35:10,960 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 18:35:11,156 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 18:35:11,337 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 18:35:11,781 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 18:35:12,094 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 18:35:12,400 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 18:35:12,738 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 18:35:12,914 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 18:35:13,092 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 18:35:13,279 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 18:35:13,279 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:35:13,446 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 18:35:13,604 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 18:35:13,604 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:35:13,805 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 18:35:13,805 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 18:35:13,954 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 18:35:13,954 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 18:35:14,106 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 18:35:14,246 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 18:35:14,247 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 18:35:14,406 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 18:35:14,659 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 18:35:14,974 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 18:35:15,114 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 18:35:15,258 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 18:35:15,396 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 18:35:15,537 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 18:35:15,683 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 18:35:15,860 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 18:35:16,048 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 18:35:16,191 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 18:35:16,328 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 18:35:16,469 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 18:35:16,727 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 18:35:17,114 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 18:35:17,435 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 18:35:17,774 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 18:35:18,091 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 18:35:18,228 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 18:35:18,228 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 18:35:18,410 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 18:35:18,410 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 18:35:18,555 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 18:35:18,555 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:35:18,741 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 18:35:18,741 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 18:35:18,883 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 18:35:18,883 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:35:19,055 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 18:35:19,056 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 18:35:19,196 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 18:35:19,197 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 18:35:19,341 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 18:35:19,478 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 18:35:19,478 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 18:35:19,627 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 18:35:19,628 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 18:54:02,336 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 18:54:02,336 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 18:54:02,514 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 18:54:02,514 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 18:54:02,696 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 18:54:02,874 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 18:54:03,034 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 18:54:03,440 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 18:54:03,748 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 18:54:04,092 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 18:54:04,390 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 18:54:04,570 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 18:54:04,753 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 18:54:04,931 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 18:54:04,931 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:54:05,111 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 18:54:05,308 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 18:54:05,309 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:54:05,488 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 18:54:05,488 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 18:54:05,780 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 18:54:05,781 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 18:54:05,952 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 18:54:06,162 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 18:54:06,162 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 18:54:06,332 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 18:54:06,602 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 18:54:06,927 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 18:54:07,153 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 18:54:07,416 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 18:54:07,631 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 18:54:07,797 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 18:54:07,959 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 18:54:08,115 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 18:54:08,287 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 18:54:08,427 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 18:54:08,568 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 18:54:08,740 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 18:54:08,978 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 18:54:09,384 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 18:54:09,729 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 18:54:10,053 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 18:54:10,381 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 18:54:10,530 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 18:54:10,530 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 18:54:10,690 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 18:54:10,691 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 18:54:10,849 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 18:54:10,849 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:54:11,062 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 18:54:11,062 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 18:54:11,224 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 18:54:11,224 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:54:11,374 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 18:54:11,375 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 18:54:11,527 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 18:54:11,527 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 18:54:11,679 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 18:54:11,819 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 18:54:11,819 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 18:54:11,969 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 18:54:11,969 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 18:55:19,232 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 18:55:19,233 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 18:55:19,380 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 18:55:19,380 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 18:55:19,564 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 18:55:19,753 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 18:55:19,897 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 18:55:20,296 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 18:55:20,612 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 18:55:20,912 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 18:55:21,248 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 18:55:21,408 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 18:55:21,565 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 18:55:21,712 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 18:55:21,712 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:55:21,863 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 18:55:22,008 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 18:55:22,008 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:55:22,191 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 18:55:22,191 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 18:55:22,388 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 18:55:22,388 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 18:55:22,535 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 18:55:22,679 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 18:55:22,679 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 18:55:22,838 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 18:55:23,129 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 18:55:23,386 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 18:55:23,582 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 18:55:23,725 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 18:55:23,891 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 18:55:24,061 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 18:55:24,209 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 18:55:24,350 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 18:55:24,495 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 18:55:24,667 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 18:55:24,809 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 18:55:24,951 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 18:55:25,207 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 18:55:25,612 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 18:55:25,944 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 18:55:26,282 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 18:55:26,580 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 18:55:26,724 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 18:55:26,724 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 18:55:26,873 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 18:55:26,873 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 18:55:27,022 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 18:55:27,022 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:55:27,181 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 18:55:27,182 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 18:55:27,372 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 18:55:27,372 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 18:55:27,525 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 18:55:27,525 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 18:55:27,673 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 18:55:27,673 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 18:55:27,828 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 18:55:27,999 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 18:55:27,999 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 18:55:28,155 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 18:55:28,155 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:02:18,914 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 19:02:18,914 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 19:02:19,081 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 19:02:19,081 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:02:19,235 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 19:02:19,417 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 19:02:19,582 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 19:02:19,978 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 19:02:20,291 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 19:02:20,575 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 19:02:20,889 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 19:02:21,035 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 19:02:21,188 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 19:02:21,345 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:02:21,345 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:02:21,503 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 19:02:21,668 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 19:02:21,668 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:02:21,935 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 19:02:21,935 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:02:22,097 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 19:02:22,097 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:02:22,307 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 19:02:22,461 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 19:02:22,461 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:02:22,624 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 19:02:22,950 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 19:02:23,272 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 19:02:23,443 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 19:02:23,615 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 19:02:23,794 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 19:02:23,963 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 19:02:24,138 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 19:02:24,295 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 19:02:24,461 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 19:02:24,629 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 19:02:24,781 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 19:02:24,961 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 19:02:25,211 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 19:02:25,610 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 19:02:25,929 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 19:02:26,242 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 19:02:26,562 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 19:02:26,723 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 19:02:26,723 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 19:02:26,922 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 19:02:26,922 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 19:02:27,097 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:02:27,097 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:02:27,333 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 19:02:27,333 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:02:27,500 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 19:02:27,500 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:02:27,687 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 19:02:27,687 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:02:27,879 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 19:02:27,879 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 19:02:28,299 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 19:02:28,464 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 19:02:28,464 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:02:28,650 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 19:02:28,650 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:05:07,943 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 19:05:07,943 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 19:05:08,111 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 19:05:08,111 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:05:08,265 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 19:05:08,465 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 19:05:08,609 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 19:05:09,032 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 19:05:09,363 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 19:05:09,671 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 19:05:10,032 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 19:05:10,228 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 19:05:10,381 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 19:05:10,543 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:05:10,543 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:05:10,725 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 19:05:10,903 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 19:05:10,903 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:05:11,056 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 19:05:11,056 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:05:11,265 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 19:05:11,266 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:05:11,410 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 19:05:11,555 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 19:05:11,556 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:05:11,701 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 19:05:11,966 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 19:05:12,278 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 19:05:12,422 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 19:05:12,576 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 19:05:12,716 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 19:05:12,859 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 19:05:13,036 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 19:05:13,221 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 19:05:13,362 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 19:05:13,542 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 19:05:13,717 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 19:05:13,868 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 19:05:14,116 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 19:05:14,532 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 19:05:14,870 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 19:05:15,206 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 19:05:15,550 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 19:05:15,698 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 19:05:15,698 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 19:05:15,881 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 19:05:15,881 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 19:05:16,037 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:05:16,038 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:05:16,251 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 19:05:16,251 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:05:16,436 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 19:05:16,436 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:05:16,587 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 19:05:16,587 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:05:16,729 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 19:05:16,729 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 19:05:16,924 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 19:05:17,080 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 19:05:17,081 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:05:17,252 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 19:05:17,252 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:12:28,009 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 19:12:28,009 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 19:12:28,219 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 19:12:28,219 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:12:28,436 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 19:12:28,641 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 19:12:28,813 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 19:12:29,221 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 19:12:29,526 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 19:12:29,834 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 19:12:30,154 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 19:12:30,317 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 19:12:30,498 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 19:12:30,672 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:12:30,672 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:12:30,859 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 19:12:31,051 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 19:12:31,051 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:12:31,253 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 19:12:31,254 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:12:31,431 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 19:12:31,431 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:12:31,680 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 19:12:31,873 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 19:12:31,873 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:12:32,054 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 19:12:32,338 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 19:12:32,631 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 19:12:32,847 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 19:12:33,020 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 19:12:33,188 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 19:12:33,334 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 19:12:33,487 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 19:12:33,634 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 19:12:33,784 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 19:12:33,933 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 19:12:34,087 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 19:12:34,242 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 19:12:34,480 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 19:12:34,925 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 19:12:35,262 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 19:12:35,612 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 19:12:35,946 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 19:12:36,096 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 19:12:36,096 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 19:12:36,274 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 19:12:36,274 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 19:12:36,469 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:12:36,470 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:12:36,684 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 19:12:36,684 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:12:36,869 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 19:12:36,869 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:12:37,023 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 19:12:37,023 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:12:37,170 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 19:12:37,170 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 19:12:37,324 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 19:12:37,468 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 19:12:37,468 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:12:37,623 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 19:12:37,623 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:13:45,603 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 19:13:45,603 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 19:13:45,765 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 19:13:45,766 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:13:45,919 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 19:13:46,081 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 19:13:46,233 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 19:13:46,649 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 19:13:46,968 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 19:13:47,303 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 19:13:47,637 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 19:13:47,784 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 19:13:47,933 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 19:13:48,097 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:13:48,097 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:13:48,275 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 19:13:48,426 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 19:13:48,426 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:13:48,582 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 19:13:48,583 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:13:48,737 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 19:13:48,737 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:13:48,921 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 19:13:49,070 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 19:13:49,070 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:13:49,247 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 19:13:49,541 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 19:13:49,823 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 19:13:50,181 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 19:13:50,340 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 19:13:50,522 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 19:13:50,667 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 19:13:50,821 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 19:13:50,989 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 19:13:51,145 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 19:13:51,296 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 19:13:51,448 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 19:13:51,596 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 19:13:51,833 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 19:13:52,230 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 19:13:52,553 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 19:13:52,897 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 19:13:53,213 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 19:13:53,378 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 19:13:53,378 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 19:13:53,549 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 19:13:53,549 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 19:13:53,722 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:13:53,722 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:13:53,933 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 19:13:53,933 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:13:54,102 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 19:13:54,102 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:13:54,254 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 19:13:54,254 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:13:54,432 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 19:13:54,433 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 19:13:54,584 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 19:13:54,742 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 19:13:54,743 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:13:54,893 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 19:13:54,893 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:16:34,534 - [test_loanadd.py-->line:75] - ERROR: 用例CC执行通过
2020-03-01 19:16:34,746 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 19:16:34,746 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 19:16:34,904 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 19:16:34,904 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:16:35,071 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 19:16:35,218 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 19:16:35,358 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 19:16:35,753 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 19:16:36,040 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 19:16:36,328 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 19:16:36,618 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 19:16:36,770 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 19:16:36,919 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 19:16:37,078 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:16:37,078 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:16:37,240 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 19:16:37,407 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 19:16:37,408 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:16:37,568 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 19:16:37,569 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:16:37,726 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 19:16:37,726 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:16:37,885 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 19:16:38,032 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 19:16:38,033 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:16:38,194 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 19:16:38,464 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 19:16:38,764 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 19:16:38,923 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 19:16:39,092 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 19:16:39,250 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 19:16:39,403 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 19:16:39,566 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 19:16:39,736 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 19:16:39,896 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 19:16:40,064 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 19:16:40,226 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 19:16:40,392 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 19:16:40,632 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 19:16:41,042 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 19:16:41,405 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 19:16:41,745 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 19:16:42,112 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 19:16:42,275 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 19:16:42,276 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 19:16:42,461 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 19:16:42,461 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 19:16:42,643 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:16:42,643 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:16:42,855 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 19:16:42,855 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:16:43,031 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 19:16:43,032 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:16:43,211 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 19:16:43,212 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:16:43,377 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 19:16:43,377 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 19:16:43,564 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 19:16:43,734 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 19:16:43,735 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:16:43,908 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 19:16:43,908 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:18:35,874 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:18:36,157 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:18:36,299 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:18:36,515 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 19:18:36,515 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 19:18:36,682 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 19:18:36,683 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:18:36,854 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 19:18:37,041 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 19:18:37,187 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 19:18:37,592 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 19:18:37,905 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 19:18:38,253 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 19:18:38,560 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 19:18:38,720 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 19:18:38,897 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 19:18:39,105 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:18:39,105 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:18:39,286 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 19:18:39,439 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 19:18:39,440 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:18:39,583 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 19:18:39,583 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:18:39,735 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 19:18:39,735 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:18:39,875 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 19:18:40,065 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 19:18:40,066 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:18:40,243 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 19:18:40,524 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 19:18:40,811 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 19:18:40,990 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 19:18:41,141 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 19:18:41,308 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 19:18:41,468 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 19:18:41,650 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 19:18:41,803 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 19:18:42,007 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 19:18:42,157 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 19:18:42,309 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 19:18:42,446 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 19:18:42,714 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 19:18:43,101 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 19:18:43,447 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 19:18:43,783 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 19:18:44,098 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 19:18:44,283 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 19:18:44,283 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 19:18:44,432 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 19:18:44,433 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 19:18:44,591 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:18:44,591 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:18:44,774 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 19:18:44,774 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:18:44,940 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 19:18:44,940 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:18:45,096 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 19:18:45,096 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:18:45,248 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 19:18:45,248 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 19:18:45,433 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 19:18:45,582 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 19:18:45,582 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:18:45,736 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 19:18:45,736 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:50:21,044 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:50:21,332 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:50:21,531 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:50:21,692 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:50:21,857 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:50:22,014 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:50:22,174 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:50:22,332 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:50:22,508 - [test_loanadd.py-->line:71] - ERROR: 用例CC执行未通过
2020-03-01 19:50:22,509 - [test_loanadd.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:50:22,694 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:50:22,913 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 19:50:22,914 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 19:50:23,052 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 19:50:23,053 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:50:23,214 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 19:50:23,365 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 19:50:23,508 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 19:50:23,918 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 19:50:24,267 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 19:50:24,607 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 19:50:24,944 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 19:50:25,123 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 19:50:25,282 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 19:50:25,475 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:50:25,475 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:50:25,619 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 19:50:25,806 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 19:50:25,806 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:50:25,962 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 19:50:25,963 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:50:26,113 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 19:50:26,114 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:50:26,284 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 19:50:26,423 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 19:50:26,423 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:50:26,573 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 19:50:26,865 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 19:50:27,164 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 19:50:27,310 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 19:50:27,457 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 19:50:27,596 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 19:50:27,744 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 19:50:27,927 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 19:50:28,073 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 19:50:28,238 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 19:50:28,379 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 19:50:28,524 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 19:50:28,686 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 19:50:28,938 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 19:50:29,311 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 19:50:29,656 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 19:50:29,988 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 19:50:30,313 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 19:50:30,491 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 19:50:30,491 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 19:50:30,640 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 19:50:30,641 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 19:50:30,823 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:50:30,824 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:50:31,005 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 19:50:31,005 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:50:31,197 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 19:50:31,197 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:50:31,382 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 19:50:31,383 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:50:31,574 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 19:50:31,575 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 19:50:31,730 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 19:50:31,875 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 19:50:31,875 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:50:32,024 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 19:50:32,024 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:55:22,783 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:55:23,045 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:55:23,186 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:55:23,340 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:55:23,505 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:55:23,650 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:55:23,796 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:55:23,942 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:55:24,093 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:55:24,248 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:55:24,399 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-01 19:55:24,618 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-01 19:55:24,619 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-01 19:55:24,795 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-01 19:55:24,795 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:55:24,985 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-01 19:55:25,135 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-01 19:55:25,282 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-01 19:55:25,706 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-01 19:55:26,048 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-01 19:55:26,410 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-01 19:55:26,702 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-01 19:55:26,844 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-01 19:55:26,994 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-01 19:55:27,147 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:55:27,147 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:55:27,303 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-01 19:55:27,462 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-01 19:55:27,462 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:55:27,634 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-01 19:55:27,634 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:55:27,777 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-01 19:55:27,777 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-01 19:55:27,929 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-01 19:55:28,074 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-01 19:55:28,075 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-01 19:55:28,229 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-01 19:55:28,524 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-01 19:55:28,791 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-01 19:55:28,974 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-01 19:55:29,149 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-01 19:55:29,295 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-01 19:55:29,552 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-01 19:55:29,737 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-01 19:55:29,911 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-01 19:55:30,110 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-01 19:55:30,285 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-01 19:55:30,469 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-01 19:55:30,621 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-01 19:55:30,891 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-01 19:55:31,302 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-01 19:55:31,614 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-01 19:55:31,945 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-01 19:55:32,293 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-01 19:55:32,462 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-01 19:55:32,462 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-01 19:55:32,616 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-01 19:55:32,617 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-01 19:55:32,781 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-01 19:55:32,782 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:55:32,960 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-01 19:55:32,960 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-01 19:55:33,144 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-01 19:55:33,144 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-01 19:55:33,314 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-01 19:55:33,314 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:55:33,490 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-01 19:55:33,490 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-01 19:55:33,642 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-01 19:55:33,784 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-01 19:55:33,785 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-01 19:55:33,939 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-01 19:55:33,940 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 00:12:58,576 - [test_audit.py-->line:68] - ERROR: 用例审核执行未通过
2020-03-02 00:12:58,576 - [test_audit.py-->line:69] - ERROR: '项目ID不存在' != '项目id为空'
- 项目ID不存在
+ 项目id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 56, in test_add
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '项目ID不存在' != '项目id为空'
- 项目ID不存在
+ 项目id为空

2020-03-02 00:12:58,907 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-02 00:12:59,168 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-02 00:12:59,337 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-02 00:12:59,505 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-02 00:12:59,675 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-02 00:12:59,846 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-02 00:13:00,030 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-02 00:13:00,195 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-02 00:13:00,360 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-02 00:13:00,530 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-02 00:13:00,723 - [test_loanadd.py-->line:77] - ERROR: 用例CC执行通过
2020-03-02 00:13:00,961 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 00:13:00,961 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 00:13:01,128 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 00:13:01,128 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 00:13:01,307 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 00:13:01,485 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 00:13:01,661 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 00:13:02,094 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 00:13:02,431 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 00:13:02,777 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 00:13:03,154 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 00:13:03,325 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 00:13:03,508 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 00:13:03,687 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 00:13:03,687 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 00:13:03,861 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 00:13:04,060 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 00:13:04,060 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 00:13:04,229 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 00:13:04,229 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 00:13:04,390 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 00:13:04,390 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 00:13:04,559 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 00:13:04,720 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 00:13:04,720 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 00:13:04,900 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 00:13:05,201 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 00:13:05,467 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 00:13:05,676 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 00:13:05,838 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 00:13:06,029 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 00:13:06,201 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 00:13:06,378 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 00:13:06,547 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 00:13:06,714 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 00:13:06,908 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 00:13:07,080 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 00:13:07,242 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 00:13:07,487 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 00:13:07,890 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 00:13:08,224 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 00:13:08,555 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 00:13:08,895 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 00:13:09,084 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 00:13:09,084 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 00:13:09,266 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 00:13:09,267 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 00:13:09,526 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 00:13:09,526 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 00:13:09,704 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 00:13:09,705 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 00:13:09,914 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 00:13:09,914 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 00:13:10,095 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 00:13:10,095 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 00:13:10,273 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 00:13:10,273 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 00:13:10,489 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 00:13:10,658 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 00:13:10,658 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 00:13:10,837 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 00:13:10,837 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 00:26:20,469 - [test_audit.py-->line:68] - ERROR: 用例审核执行未通过
2020-03-02 00:26:20,469 - [test_audit.py-->line:69] - ERROR: '项目ID不存在' != '项目id为空'
- 项目ID不存在
+ 项目id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 56, in test_add
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '项目ID不存在' != '项目id为空'
- 项目ID不存在
+ 项目id为空

2020-03-02 00:26:21,124 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 00:26:21,293 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 00:26:21,468 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 00:26:21,653 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 00:26:21,978 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 00:26:22,159 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 00:26:22,363 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 00:26:22,601 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 00:26:22,873 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 00:26:23,188 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 00:26:23,189 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 00:26:23,424 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 00:26:23,424 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 00:26:23,635 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 00:26:23,810 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 00:26:23,972 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 00:26:24,403 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 00:26:24,757 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 00:26:25,145 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 00:26:25,496 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 00:26:25,675 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 00:26:25,858 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 00:26:26,039 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 00:26:26,039 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 00:26:26,214 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 00:26:26,386 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 00:26:26,386 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 00:26:26,561 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 00:26:26,562 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 00:26:26,733 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 00:26:26,734 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 00:26:26,916 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 00:26:27,089 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 00:26:27,089 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 00:26:27,267 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 00:26:27,586 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 00:26:27,854 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 00:26:28,054 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 00:26:28,221 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 00:26:28,445 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 00:26:28,616 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 00:26:28,794 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 00:26:28,967 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 00:26:29,140 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 00:26:29,312 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 00:26:29,488 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 00:26:29,660 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 00:26:29,916 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 00:26:30,357 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 00:26:30,725 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 00:26:31,092 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 00:26:31,426 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 00:26:31,597 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 00:26:31,597 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 00:26:31,782 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 00:26:31,782 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 00:26:31,967 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 00:26:31,967 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 00:26:32,144 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 00:26:32,144 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 00:26:32,366 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 00:26:32,366 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 00:26:32,552 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 00:26:32,552 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 00:26:32,738 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 00:26:32,738 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 00:26:32,909 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 00:26:33,123 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 00:26:33,123 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 00:26:33,297 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 00:26:33,298 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:14:29,694 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:14:29,862 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:14:30,039 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:14:30,203 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:14:30,406 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:14:30,588 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:14:30,776 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:14:30,947 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:14:31,120 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:14:31,375 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:14:31,375 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:14:31,549 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:14:31,549 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:14:31,754 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:14:31,928 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:14:32,111 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:14:32,517 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:14:32,877 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:14:33,242 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:14:33,636 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:14:33,808 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:14:34,005 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:14:34,208 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:14:34,208 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:14:34,374 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:14:34,551 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:14:34,551 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:14:34,772 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:14:34,772 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:14:34,945 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:14:34,945 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:14:35,117 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:14:35,323 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:14:35,323 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:14:35,500 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:14:35,841 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:14:36,165 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:14:36,329 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:14:36,499 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:14:36,678 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:14:36,892 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:14:37,079 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:14:37,267 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:14:37,438 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:14:37,609 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:14:37,778 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:14:37,948 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:14:38,279 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:14:38,687 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:14:39,012 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:14:39,336 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:14:39,684 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:14:39,885 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:14:39,885 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:14:40,047 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:14:40,048 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:14:40,227 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:14:40,227 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:14:40,391 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:14:40,392 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:14:40,572 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:14:40,572 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:14:40,776 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:14:40,777 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:14:40,953 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:14:40,953 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:14:41,139 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:14:41,308 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:14:41,308 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:14:41,494 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:14:41,495 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:16:00,866 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:16:01,039 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:16:01,218 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:16:01,421 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:16:01,585 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:16:01,748 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:16:01,916 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:16:02,097 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:16:02,259 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:16:02,459 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:16:02,460 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:16:02,626 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:16:02,626 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:16:02,797 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:16:03,022 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:16:03,188 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:16:03,613 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:16:03,988 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:16:04,337 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:16:04,921 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:16:05,093 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:16:05,259 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:16:05,461 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:16:05,461 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:16:05,626 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:16:05,839 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:16:05,839 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:16:06,004 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:16:06,004 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:16:06,182 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:16:06,182 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:16:06,348 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:16:06,558 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:16:06,559 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:16:06,755 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:16:07,747 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:16:08,087 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:16:08,276 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:16:08,441 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:16:08,613 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:16:08,828 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:16:09,022 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:16:09,183 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:16:09,340 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:16:09,500 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:16:09,695 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:16:09,868 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:16:10,202 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:16:12,540 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:16:12,906 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:16:13,251 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:16:13,621 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:16:13,809 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:16:13,809 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:16:13,984 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:16:13,985 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:16:14,189 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:16:14,189 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:16:14,363 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:16:14,364 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:16:14,547 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:16:14,547 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:16:14,747 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:16:14,747 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:16:14,929 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:16:14,929 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:16:15,099 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:16:15,278 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:16:15,278 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:16:15,442 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:16:15,442 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:17:13,694 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:17:13,862 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:17:14,036 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:17:14,196 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:17:14,364 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:17:14,527 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:17:14,697 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:17:14,888 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:17:15,055 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:17:15,332 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:17:15,332 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:17:15,495 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:17:15,495 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:17:15,704 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:17:15,883 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:17:16,048 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:17:16,481 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:17:16,823 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:17:17,168 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:17:17,545 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:17:17,707 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:17:17,870 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:17:18,064 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:17:18,064 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:17:18,240 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:17:18,411 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:17:18,412 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:17:18,586 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:17:18,586 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:17:18,747 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:17:18,747 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:17:18,930 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:17:19,087 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:17:19,087 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:17:19,258 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:17:19,646 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:17:20,157 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:17:20,328 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:17:20,500 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:17:20,682 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:17:20,887 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:17:21,099 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:17:21,268 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:17:21,453 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:17:21,632 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:17:21,795 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:17:21,986 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:17:22,308 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:17:22,716 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:17:23,101 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:17:23,442 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:17:23,959 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:17:24,158 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:17:24,158 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:17:24,329 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:17:24,330 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:17:24,498 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:17:24,498 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:17:24,710 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:17:24,710 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:17:24,909 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:17:24,909 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:17:25,108 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:17:25,108 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:17:25,278 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:17:25,278 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:17:25,443 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:17:25,603 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:17:25,603 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:17:25,769 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:17:25,769 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:18:42,019 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:18:42,195 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:18:42,382 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:18:42,572 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:18:42,762 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:18:42,932 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:18:43,113 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:18:43,282 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:18:43,478 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:18:43,718 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:18:43,718 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:18:43,883 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:18:43,884 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:18:44,063 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:18:44,230 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:18:44,398 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:18:44,823 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:18:45,161 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:18:45,533 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:18:45,902 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:18:46,078 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:18:46,243 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:18:46,432 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:18:46,432 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:18:46,603 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:18:46,810 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:18:46,810 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:18:46,977 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:18:46,977 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:18:47,171 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:18:47,171 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:18:47,338 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:18:47,518 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:18:47,518 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:18:47,688 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:18:47,991 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:18:48,277 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:18:48,444 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:18:48,612 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:18:48,777 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:18:48,981 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:18:49,160 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:18:49,339 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:18:49,535 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:18:49,709 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:18:49,879 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:18:50,068 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:18:50,370 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:18:50,797 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:18:51,143 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:18:51,488 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:18:51,844 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:18:52,014 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:18:52,014 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:18:52,192 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:18:52,192 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:18:52,363 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:18:52,363 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:18:52,526 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:18:52,526 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:18:52,692 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:18:52,692 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:18:52,896 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:18:52,896 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:18:53,068 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:18:53,068 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:18:53,239 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:18:53,438 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:18:53,438 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:18:53,608 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:18:53,609 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:20:37,736 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:20:38,011 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:20:38,191 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:20:38,361 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:20:38,530 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:20:38,705 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:20:38,880 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:20:39,044 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:20:39,213 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:20:39,383 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:20:39,584 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:20:39,779 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:20:39,779 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:20:39,952 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:20:39,952 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:20:40,152 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:20:40,333 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:20:40,495 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:20:40,902 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:20:41,269 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:20:41,615 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:20:41,962 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:20:42,132 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:20:42,305 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:20:42,497 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:20:42,498 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:20:42,672 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:20:42,873 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:20:42,873 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:20:43,047 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:20:43,048 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:20:43,217 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:20:43,217 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:20:43,398 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:20:43,594 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:20:43,595 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:20:43,814 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:20:44,110 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:20:44,359 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:20:44,518 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:20:44,745 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:20:44,905 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:20:45,100 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:20:45,272 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:20:45,430 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:20:45,593 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:20:45,788 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:20:45,953 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:20:46,145 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:20:46,421 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:20:46,838 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:20:47,222 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:20:47,576 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:20:47,936 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:20:48,102 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:20:48,103 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:20:48,310 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:20:48,310 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:20:48,531 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:20:48,531 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:20:48,745 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:20:48,745 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:20:48,950 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:20:48,950 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:20:49,153 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:20:49,154 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:20:49,334 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:20:49,334 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:20:49,521 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:20:49,717 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:20:49,717 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:20:49,888 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:20:49,888 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:24:19,691 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:24:19,967 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:24:20,146 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:24:20,320 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:24:20,478 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:24:20,686 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:24:20,890 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:24:21,050 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:24:21,250 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:24:21,413 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:24:21,576 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:24:21,831 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:24:21,832 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:24:21,994 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:24:21,994 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:24:22,177 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:24:22,373 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:24:22,558 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:24:22,993 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:24:23,383 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:24:23,762 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:24:24,117 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:24:24,297 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:24:24,458 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:24:24,634 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:24:24,634 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:24:24,798 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:24:24,997 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:24:24,997 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:24:25,166 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:24:25,166 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:24:25,338 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:24:25,338 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:24:25,507 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:24:25,666 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:24:25,666 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:24:25,881 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:24:26,211 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:24:26,478 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:24:26,664 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:24:26,860 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:24:27,015 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:24:27,171 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:24:27,387 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:24:27,539 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:24:27,700 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:24:27,853 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:24:28,050 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:24:28,237 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:24:28,509 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:24:28,931 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:24:29,276 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:24:29,639 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:24:29,974 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:24:30,135 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:24:30,135 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:24:30,332 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:24:30,332 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:24:30,502 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:24:30,502 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:24:30,766 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:24:30,766 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:24:30,968 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:24:30,968 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:24:31,135 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:24:31,135 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:24:31,330 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:24:31,330 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:24:31,492 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:24:31,694 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:24:31,694 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:24:31,869 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:24:31,870 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:25:21,879 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:25:22,158 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:25:22,353 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:25:22,519 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:25:22,695 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:25:22,909 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:25:23,108 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:25:23,272 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:25:23,442 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:25:23,629 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:25:23,835 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:25:24,063 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:25:24,064 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:25:24,225 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:25:24,225 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:25:24,452 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:25:24,617 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:25:24,802 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:25:25,238 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:25:25,625 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:25:25,998 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:25:26,368 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:25:26,535 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:25:26,706 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:25:26,940 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:25:26,941 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:25:27,111 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:25:27,315 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:25:27,315 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:25:27,504 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:25:27,505 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:25:27,682 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:25:27,682 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:25:27,871 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:25:28,043 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:25:28,043 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:25:28,245 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:25:28,558 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:25:28,848 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:25:29,025 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:25:29,234 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:25:29,395 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:25:29,559 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:25:29,726 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:25:29,926 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:25:30,123 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:25:30,280 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:25:30,442 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:25:30,633 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:25:30,913 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:25:31,347 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:25:31,687 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:25:32,036 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:25:32,343 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:25:32,510 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:25:32,510 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:25:32,682 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:25:32,682 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:25:32,883 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:25:32,883 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:25:33,090 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:25:33,090 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:25:33,263 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:25:33,264 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:25:33,455 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:25:33,455 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:25:33,628 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:25:33,629 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:25:33,800 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:25:34,000 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:25:34,000 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:25:34,161 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:25:34,161 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:27:45,358 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:27:45,641 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:27:45,832 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:27:46,022 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:27:46,210 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:27:46,370 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:27:46,535 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:27:46,698 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:27:46,923 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:27:47,086 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:27:47,291 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:27:47,504 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:27:47,504 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:27:47,680 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:27:47,680 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:27:47,875 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:27:48,077 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:27:48,254 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:27:48,699 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:27:49,083 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:27:49,441 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:27:49,779 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:27:49,934 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:27:50,140 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:27:50,345 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:27:50,345 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:27:50,504 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:27:50,702 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:27:50,703 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:27:50,863 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:27:50,863 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:27:51,039 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:27:51,039 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:27:51,201 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:27:51,420 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:27:51,420 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:27:51,591 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:27:51,894 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:27:52,163 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:27:52,332 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:27:52,534 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:27:52,700 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:27:52,864 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:27:53,033 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:27:53,204 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:27:53,384 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:27:53,549 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:27:53,704 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:27:53,866 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:27:54,133 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:27:54,551 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:27:54,886 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:27:55,222 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:27:55,578 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:27:55,820 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:27:55,820 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:27:56,021 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:27:56,021 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:27:56,200 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:27:56,200 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:27:56,416 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:27:56,416 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:27:56,587 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:27:56,588 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:27:56,759 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:27:56,759 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:27:56,917 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:27:56,917 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:27:57,088 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:27:57,249 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:27:57,249 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:27:57,419 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:27:57,419 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:43:09,343 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:43:09,343 - [test_audit.py-->line:87] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 78, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 01:43:09,596 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:43:09,597 - [test_audit.py-->line:87] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 78, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 01:43:09,817 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:43:09,817 - [test_audit.py-->line:87] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 78, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2020-03-02 01:43:10,031 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:43:10,031 - [test_audit.py-->line:87] - ERROR: 'approve_or_not为空' != 'approved_or_not为空'
- approve_or_not为空
+ approved_or_not为空
?        +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 79, in test_audit
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: 'approve_or_not为空' != 'approved_or_not为空'
- approve_or_not为空
+ approved_or_not为空
?        +

2020-03-02 01:43:10,254 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:43:10,254 - [test_audit.py-->line:87] - ERROR: '项目ID不存在' != '项目id为空'
- 项目ID不存在
+ 项目id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 79, in test_audit
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '项目ID不存在' != '项目id为空'
- 项目ID不存在
+ 项目id为空

2020-03-02 01:43:10,640 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:43:10,947 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:43:11,130 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:43:11,356 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:43:11,572 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:43:11,754 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:43:11,928 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:43:12,094 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:43:12,274 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:43:12,444 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:43:12,622 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:43:12,859 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:43:12,859 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:43:13,100 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:43:13,100 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:43:13,305 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:43:13,483 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:43:13,653 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:43:14,128 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:43:14,473 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:43:14,834 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:43:15,187 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:43:15,351 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:43:15,521 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:43:15,702 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:43:15,702 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:43:15,873 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:43:16,052 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:43:16,052 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:43:16,228 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:43:16,229 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:43:16,394 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:43:16,394 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:43:16,575 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:43:16,781 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:43:16,782 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:43:16,979 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:43:17,289 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:43:17,569 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:43:17,796 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:43:17,960 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:43:18,167 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:43:18,333 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:43:18,525 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:43:18,714 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:43:18,907 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:43:19,086 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:43:19,256 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:43:19,417 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:43:19,701 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:43:20,134 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:43:20,487 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:43:20,856 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:43:21,201 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:43:21,403 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:43:21,403 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:43:21,563 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:43:21,564 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:43:21,778 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:43:21,778 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:43:21,945 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:43:21,945 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:43:22,128 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:43:22,128 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:43:22,325 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:43:22,325 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:43:22,514 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:43:22,514 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:43:22,692 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:43:22,870 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:43:22,870 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:43:23,041 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:43:23,041 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:46:10,296 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:46:10,296 - [test_audit.py-->line:87] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 78, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 01:46:10,564 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:46:10,565 - [test_audit.py-->line:87] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 78, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 01:46:10,795 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:46:10,795 - [test_audit.py-->line:87] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 78, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2020-03-02 01:46:11,015 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 01:46:11,233 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 01:46:11,549 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:46:11,793 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:46:11,976 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:46:12,149 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:46:12,311 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:46:12,473 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:46:12,674 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:46:12,864 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:46:13,031 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:46:13,195 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:46:13,362 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:46:13,555 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:46:13,555 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:46:13,762 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:46:13,762 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:46:13,929 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:46:14,086 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:46:14,242 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:46:14,624 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:46:14,934 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:46:15,259 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:46:15,609 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:46:15,763 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:46:15,931 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:46:16,096 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:46:16,096 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:46:16,303 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:46:16,490 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:46:16,491 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:46:16,657 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:46:16,657 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:46:16,910 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:46:16,910 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:46:17,068 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:46:17,326 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:46:17,326 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:46:17,489 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:46:17,781 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:46:18,046 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:46:18,214 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:46:18,386 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:46:18,542 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:46:18,711 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:46:18,890 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:46:19,051 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:46:19,209 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:46:19,373 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:46:19,574 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:46:19,740 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:46:20,025 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:46:20,437 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:46:20,766 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:46:21,151 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:46:21,507 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:46:21,690 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:46:21,690 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:46:21,863 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:46:21,864 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:46:22,060 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:46:22,060 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:46:22,224 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:46:22,224 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:46:22,474 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:46:22,474 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:46:22,637 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:46:22,637 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:46:22,796 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:46:22,796 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:46:22,949 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:46:23,113 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:46:23,113 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:46:23,274 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:46:23,274 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:48:15,044 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:48:15,045 - [test_audit.py-->line:87] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 78, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 01:48:15,271 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:48:15,271 - [test_audit.py-->line:87] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 78, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 01:48:15,471 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:48:15,471 - [test_audit.py-->line:87] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 78, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2020-03-02 01:48:15,668 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 01:48:15,920 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 01:48:16,277 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:48:16,539 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:48:16,700 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:48:16,909 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:48:17,067 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:48:17,252 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:48:17,406 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:48:17,570 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:48:17,779 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:48:17,975 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:48:18,133 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:48:18,361 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:48:18,361 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:48:18,556 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:48:18,556 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:48:18,732 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:48:18,896 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:48:19,053 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:48:19,477 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:48:19,830 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:48:20,186 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:48:20,551 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:48:20,701 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:48:20,858 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:48:21,035 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:48:21,035 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:48:21,191 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:48:21,397 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:48:21,397 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:48:21,551 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:48:21,551 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:48:21,709 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:48:21,709 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:48:21,858 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:48:22,082 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:48:22,082 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:48:22,229 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:48:22,524 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:48:22,813 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:48:23,007 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:48:23,161 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:48:23,326 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:48:23,491 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:48:23,653 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:48:23,814 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:48:23,993 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:48:24,147 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:48:24,301 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:48:24,457 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:48:24,694 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:48:25,106 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:48:25,449 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:48:25,839 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:48:26,193 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:48:26,343 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:48:26,343 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:48:26,519 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:48:26,519 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:48:26,699 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:48:26,699 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:48:26,876 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:48:26,876 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:48:27,045 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:48:27,045 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:48:27,215 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:48:27,215 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:48:27,377 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:48:27,377 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:48:27,555 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:48:27,732 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:48:27,732 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:48:27,900 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:48:27,901 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:50:37,887 - [test_audit.py-->line:84] - ERROR: 用例审核执行未通过
2020-03-02 01:50:37,887 - [test_audit.py-->line:85] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 76, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 01:50:38,099 - [test_audit.py-->line:84] - ERROR: 用例审核执行未通过
2020-03-02 01:50:38,099 - [test_audit.py-->line:85] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 76, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 01:50:38,308 - [test_audit.py-->line:84] - ERROR: 用例审核执行未通过
2020-03-02 01:50:38,309 - [test_audit.py-->line:85] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 76, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2020-03-02 01:50:38,505 - [test_audit.py-->line:90] - ERROR: 用例审核执行通过
2020-03-02 01:50:38,698 - [test_audit.py-->line:90] - ERROR: 用例审核执行通过
2020-03-02 01:50:39,044 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:50:39,299 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:50:39,472 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:50:39,654 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:50:39,817 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:50:39,982 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:50:40,161 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:50:40,351 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:50:40,502 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:50:40,686 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:50:40,848 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:50:41,105 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:50:41,106 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:50:41,253 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:50:41,253 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:50:41,427 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:50:41,608 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:50:41,761 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:50:42,153 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:50:42,505 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:50:42,876 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:50:43,184 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:50:43,345 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:50:43,533 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:50:43,704 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:50:43,704 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:50:43,882 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:50:44,053 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:50:44,053 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:50:44,282 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:50:44,283 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:50:44,431 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:50:44,431 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:50:44,599 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:50:44,819 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:50:44,819 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:50:44,980 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:50:45,285 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:50:45,546 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:50:45,709 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:50:45,868 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:50:46,017 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:50:46,180 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:50:46,345 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:50:46,533 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:50:46,682 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:50:46,841 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:50:46,998 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:50:47,164 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:50:47,423 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:50:47,844 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:50:48,191 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:50:48,549 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:50:48,871 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:50:49,038 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:50:49,038 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:50:49,236 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:50:49,236 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:50:49,420 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:50:49,420 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:50:49,585 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:50:49,585 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:50:49,769 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:50:49,770 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:50:49,935 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:50:49,935 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:50:50,095 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:50:50,095 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:50:50,263 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:50:50,435 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:50:50,435 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:50:50,649 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:50:50,649 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:52:00,332 - [test_audit.py-->line:84] - ERROR: 用例审核执行未通过
2020-03-02 01:52:00,332 - [test_audit.py-->line:85] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 76, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 01:52:00,566 - [test_audit.py-->line:84] - ERROR: 用例审核执行未通过
2020-03-02 01:52:00,566 - [test_audit.py-->line:85] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 76, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 01:52:00,765 - [test_audit.py-->line:84] - ERROR: 用例审核执行未通过
2020-03-02 01:52:00,765 - [test_audit.py-->line:85] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 76, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2020-03-02 01:52:00,964 - [test_audit.py-->line:90] - ERROR: 用例审核执行通过
2020-03-02 01:52:01,170 - [test_audit.py-->line:90] - ERROR: 用例审核执行通过
2020-03-02 01:52:01,506 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:52:01,742 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:52:01,908 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:52:02,068 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:52:02,227 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:52:02,396 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:52:02,558 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:52:02,719 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:52:02,921 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:52:03,081 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:52:03,252 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:52:03,486 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:52:03,486 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:52:03,644 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:52:03,644 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:52:03,838 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:52:04,011 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:52:04,172 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:52:04,555 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:52:04,900 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:52:05,210 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:52:05,515 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:52:05,671 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:52:05,827 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:52:05,997 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:52:05,997 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:52:06,182 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:52:06,360 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:52:06,360 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:52:06,520 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:52:06,520 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:52:06,674 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:52:06,674 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:52:06,892 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:52:07,120 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:52:07,121 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:52:07,280 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:52:07,555 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:52:07,847 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:52:08,012 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:52:08,182 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:52:08,340 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:52:08,497 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:52:08,661 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:52:08,826 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:52:08,982 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:52:09,139 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:52:09,347 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:52:09,513 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:52:09,779 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:52:10,176 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:52:10,494 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:52:10,880 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:52:11,193 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:52:11,349 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:52:11,349 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:52:11,519 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:52:11,520 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:52:11,689 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:52:11,689 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:52:11,861 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:52:11,861 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:52:12,061 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:52:12,061 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:52:12,220 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:52:12,220 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:52:12,376 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:52:12,376 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:52:12,563 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:52:12,722 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:52:12,722 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:52:12,889 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:52:12,889 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:59:21,326 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 01:59:21,326 - [test_audit.py-->line:87] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 01:59:21,660 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:59:21,901 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:59:22,069 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:59:22,238 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:59:22,400 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:59:22,595 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:59:22,753 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:59:22,908 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:59:23,093 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:59:23,247 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:59:23,418 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 01:59:23,614 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 01:59:23,615 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 01:59:23,766 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 01:59:23,766 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:59:23,938 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 01:59:24,108 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 01:59:24,270 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 01:59:24,708 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 01:59:25,053 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 01:59:25,399 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 01:59:25,742 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 01:59:25,903 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 01:59:26,064 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 01:59:26,511 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:59:26,512 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:59:26,698 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 01:59:26,866 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 01:59:26,866 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:59:27,031 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 01:59:27,031 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:59:27,207 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 01:59:27,207 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 01:59:27,365 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 01:59:27,533 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 01:59:27,533 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 01:59:27,712 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 01:59:27,993 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 01:59:28,258 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 01:59:28,446 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 01:59:28,603 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 01:59:28,752 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 01:59:28,921 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 01:59:29,083 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 01:59:29,237 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 01:59:29,391 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 01:59:29,577 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 01:59:29,727 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 01:59:29,911 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 01:59:30,168 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 01:59:30,600 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 01:59:30,914 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 01:59:31,263 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 01:59:31,617 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 01:59:31,769 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 01:59:31,770 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 01:59:31,932 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 01:59:31,932 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 01:59:32,134 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 01:59:32,134 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:59:32,305 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 01:59:32,306 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 01:59:32,503 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 01:59:32,503 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 01:59:32,670 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 01:59:32,670 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:59:32,845 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 01:59:32,845 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 01:59:33,008 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 01:59:33,179 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 01:59:33,179 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 01:59:33,335 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 01:59:33,335 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:02:03,009 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:02:03,275 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:02:03,438 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:02:03,598 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:02:03,786 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:02:03,951 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:02:04,129 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:02:04,309 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:02:04,469 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:02:04,636 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:02:04,794 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:02:04,997 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:02:04,997 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:02:05,163 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:02:05,163 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:02:05,335 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:02:05,511 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:02:05,674 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:02:06,101 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:02:06,493 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:02:06,836 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:02:07,174 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:02:07,333 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:02:07,512 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:02:07,706 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:02:07,706 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:02:07,880 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:02:08,060 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:02:08,060 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:02:08,228 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:02:08,228 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:02:08,384 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:02:08,385 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:02:08,556 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:02:08,708 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:02:08,708 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:02:08,906 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:02:09,208 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:02:09,475 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:02:09,628 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:02:09,790 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:02:09,981 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:02:10,142 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:02:10,306 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:02:10,468 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:02:10,629 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:02:10,790 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:02:10,976 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:02:11,154 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:02:11,428 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:02:11,836 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:02:12,173 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:02:12,528 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:02:12,856 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:02:13,020 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:02:13,020 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:02:13,206 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:02:13,206 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:02:13,380 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:02:13,381 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:02:13,599 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:02:13,599 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:02:13,785 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:02:13,785 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:02:13,956 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:02:13,956 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:02:14,129 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:02:14,129 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:02:14,303 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:02:14,480 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:02:14,481 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:02:14,659 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:02:14,659 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:03:15,093 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:03:15,093 - [test_audit.py-->line:87] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 02:03:15,451 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:03:15,711 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:03:15,887 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:03:16,076 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:03:16,263 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:03:16,461 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:03:16,645 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:03:16,839 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:03:17,036 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:03:17,237 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:03:17,428 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:03:17,651 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:03:17,651 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:03:17,830 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:03:17,830 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:03:18,035 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:03:18,222 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:03:18,431 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:03:18,893 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:03:19,237 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:03:19,587 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:03:19,940 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:03:20,119 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:03:20,321 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:03:20,516 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:03:20,516 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:03:20,690 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:03:20,909 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:03:20,909 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:03:21,076 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:03:21,076 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:03:21,284 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:03:21,285 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:03:21,452 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:03:21,628 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:03:21,628 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:03:21,786 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:03:22,063 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:03:22,325 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:03:22,487 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:03:22,734 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:03:22,903 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:03:23,073 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:03:23,247 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:03:23,425 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:03:23,591 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:03:23,758 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:03:23,917 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:03:24,086 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:03:24,351 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:03:24,748 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:03:25,059 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:03:25,394 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:03:25,755 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:03:25,944 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:03:25,945 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:03:26,115 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:03:26,115 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:03:26,316 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:03:26,316 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:03:26,477 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:03:26,477 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:03:26,682 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:03:26,682 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:03:26,837 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:03:26,837 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:03:27,045 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:03:27,045 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:03:27,233 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:03:27,416 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:03:27,416 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:03:27,578 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:03:27,578 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:04:25,000 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:04:25,255 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:04:25,421 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:04:25,588 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:04:25,740 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:04:25,908 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:04:26,067 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:04:26,257 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:04:26,417 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:04:26,581 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:04:26,734 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:04:26,955 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:04:26,955 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:04:27,139 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:04:27,139 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:04:27,318 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:04:27,516 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:04:27,678 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:04:28,076 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:04:28,431 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:04:28,758 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:04:29,080 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:04:29,237 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:04:29,393 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:04:29,555 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:04:29,555 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:04:29,723 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:04:29,885 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:04:29,886 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:04:30,062 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:04:30,063 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:04:30,220 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:04:30,220 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:04:30,394 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:04:30,556 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:04:30,556 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:04:30,763 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:04:31,076 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:04:31,321 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:04:31,491 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:04:31,667 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:04:31,870 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:04:32,036 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:04:32,205 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:04:32,397 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:04:32,560 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:04:32,719 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:04:32,906 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:04:33,062 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:04:33,325 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:04:33,739 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:04:34,096 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:04:34,427 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:04:34,769 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:04:34,924 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:04:34,924 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:04:35,094 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:04:35,094 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:04:35,266 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:04:35,266 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:04:35,465 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:04:35,465 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:04:35,629 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:04:35,629 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:04:35,818 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:04:35,818 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:04:35,967 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:04:35,967 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:04:36,136 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:04:36,293 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:04:36,293 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:04:36,466 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:04:36,466 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:05:35,434 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:05:35,434 - [test_audit.py-->line:87] - ERROR: 0 != 1004
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1004
2020-03-02 02:05:35,779 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:05:36,060 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:05:36,229 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:05:36,420 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:05:36,583 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:05:36,770 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:05:36,969 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:05:37,152 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:05:37,339 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:05:37,541 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:05:37,705 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:05:37,927 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:05:37,928 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:05:38,096 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:05:38,096 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:05:38,289 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:05:38,452 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:05:38,616 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:05:39,183 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:05:39,721 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:05:40,241 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:05:40,716 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:05:41,060 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:05:41,302 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:05:41,486 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:05:41,486 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:05:41,695 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:05:41,869 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:05:41,869 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:05:42,041 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:05:42,041 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:05:42,209 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:05:42,209 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:05:42,383 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:05:42,545 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:05:42,545 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:05:42,717 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:05:43,009 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:05:43,267 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:05:43,502 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:05:43,678 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:05:43,861 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:05:44,042 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:05:44,219 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:05:44,406 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:05:44,579 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:05:44,754 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:05:44,931 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:05:45,108 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:05:45,352 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:05:45,742 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:05:46,067 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:05:46,378 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:05:46,705 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:05:46,880 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:05:46,881 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:05:47,067 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:05:47,067 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:05:47,301 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:05:47,302 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:05:47,495 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:05:47,495 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:05:47,681 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:05:47,681 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:05:47,870 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:05:47,870 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:05:48,058 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:05:48,058 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:05:48,236 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:05:48,425 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:05:48,425 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:05:48,602 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:05:48,602 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:06:39,681 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:06:39,980 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:06:40,166 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:06:40,361 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:06:40,552 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:06:40,764 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:06:40,955 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:06:41,158 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:06:41,367 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:06:41,552 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:06:41,759 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:06:41,995 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:06:41,995 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:06:42,180 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:06:42,181 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:06:42,360 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:06:42,534 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:06:42,704 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:06:43,113 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:06:43,470 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:06:43,819 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:06:44,162 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:06:44,326 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:06:44,491 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:06:44,665 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:06:44,665 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:06:44,836 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:06:45,014 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:06:45,014 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:06:45,206 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:06:45,207 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:06:45,380 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:06:45,381 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:06:45,553 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:06:45,715 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:06:45,716 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:06:45,901 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:06:46,226 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:06:46,493 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:06:46,651 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:06:46,852 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:06:47,022 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:06:47,186 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:06:47,366 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:06:47,534 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:06:47,699 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:06:47,865 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:06:48,044 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:06:48,215 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:06:48,464 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:06:48,838 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:06:49,168 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:06:49,481 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:06:49,785 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:06:49,960 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:06:49,960 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:06:50,144 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:06:50,144 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:06:50,362 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:06:50,363 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:06:50,568 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:06:50,568 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:06:50,742 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:06:50,743 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:06:50,923 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:06:50,923 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:06:51,087 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:06:51,087 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:06:51,267 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:06:51,435 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:06:51,435 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:06:51,603 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:06:51,603 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:08:48,107 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:08:48,108 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:08:48,446 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:08:48,719 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:08:48,872 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:08:49,037 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:08:49,196 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:08:49,363 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:08:49,522 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:08:49,684 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:08:49,834 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:08:49,993 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:08:50,147 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:08:50,371 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:08:50,371 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:08:50,523 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:08:50,523 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:08:50,702 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:08:50,864 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:08:51,057 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:08:51,516 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:08:51,856 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:08:52,190 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:08:52,538 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:08:52,695 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:08:52,856 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:08:53,026 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:08:53,027 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:08:53,212 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:08:53,380 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:08:53,380 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:08:53,547 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:08:53,547 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:08:53,703 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:08:53,703 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:08:53,873 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:08:54,037 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:08:54,037 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:08:54,210 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:08:54,517 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:08:54,785 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:08:54,946 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:08:55,171 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:08:55,335 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:08:55,530 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:08:55,988 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:08:56,149 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:08:56,318 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:08:56,478 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:08:56,696 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:08:56,889 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:08:57,138 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:08:57,572 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:08:58,113 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:08:58,448 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:08:58,787 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:08:58,993 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:08:58,993 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:08:59,157 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:08:59,157 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:08:59,394 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:08:59,394 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:08:59,556 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:08:59,556 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:08:59,744 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:08:59,744 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:08:59,913 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:08:59,913 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:09:00,098 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:09:00,098 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:09:00,261 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:09:00,432 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:09:00,432 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:09:00,618 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:09:00,618 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:10:24,966 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:10:25,233 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:10:25,388 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:10:25,547 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:10:25,702 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:10:25,896 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:10:26,061 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:10:26,253 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:10:26,415 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:10:26,585 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:10:26,738 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:10:26,947 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:10:26,947 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:10:27,108 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:10:27,108 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:10:27,306 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:10:27,471 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:10:27,649 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:10:28,038 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:10:28,411 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:10:28,732 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:10:29,099 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:10:29,264 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:10:29,425 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:10:29,590 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:10:29,590 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:10:29,757 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:10:29,934 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:10:29,934 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:10:30,108 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:10:30,108 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:10:30,299 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:10:30,299 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:10:30,471 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:10:30,624 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:10:30,625 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:10:30,817 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:10:31,150 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:10:31,420 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:10:31,579 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:10:31,759 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:10:31,992 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:10:32,149 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:10:32,324 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:10:32,493 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:10:32,654 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:10:32,811 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:10:33,018 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:10:33,208 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:10:33,474 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:10:33,886 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:10:34,226 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:10:34,560 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:10:34,920 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:10:35,075 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:10:35,076 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:10:35,248 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:10:35,249 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:10:35,418 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:10:35,419 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:10:35,617 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:10:35,617 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:10:35,776 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:10:35,777 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:10:35,949 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:10:35,949 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:10:36,106 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:10:36,106 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:10:36,273 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:10:36,440 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:10:36,440 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:10:36,650 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:10:36,650 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:12:25,467 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:12:25,728 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:12:25,900 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:12:26,104 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:12:26,272 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:12:26,457 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:12:26,629 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:12:26,809 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:12:26,976 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:12:27,155 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:12:27,337 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:12:27,565 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:12:27,565 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:12:27,738 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:12:27,738 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:12:27,934 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:12:28,133 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:12:28,304 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:12:28,713 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:12:29,081 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:12:29,402 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:12:29,732 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:12:29,909 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:12:30,118 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:12:30,314 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:12:30,314 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:12:30,525 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:12:30,743 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:12:30,744 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:12:30,931 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:12:30,931 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:12:31,123 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:12:31,123 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:12:31,311 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:12:31,502 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:12:31,503 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:12:31,691 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:12:32,000 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:12:32,253 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:12:32,433 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:12:32,615 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:12:32,842 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:12:33,014 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:12:33,182 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:12:33,336 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:12:33,499 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:12:33,655 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:12:33,839 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:12:33,997 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:12:34,243 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:12:34,645 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:12:34,985 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:12:35,341 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:12:35,672 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:12:35,827 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:12:35,827 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:12:35,993 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:12:35,993 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:12:36,158 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:12:36,158 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:12:36,365 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:12:36,365 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:12:36,530 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:12:36,530 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:12:36,734 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:12:36,735 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:12:36,889 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:12:36,889 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:12:37,092 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:12:37,247 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:12:37,248 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:12:37,444 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:12:37,444 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:14:11,683 - [test_audit.py-->line:86] - ERROR: 用例审核通过执行未通过
2020-03-02 02:14:11,683 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:14:12,014 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:14:12,279 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:14:12,463 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:14:12,667 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:14:12,848 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:14:13,034 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:14:13,186 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:14:13,348 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:14:13,508 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:14:13,668 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:14:13,824 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:14:14,043 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:14:14,043 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:14:14,199 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:14:14,200 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:14:14,405 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:14:14,566 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:14:14,757 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:14:15,180 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:14:15,510 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:14:15,847 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:14:16,157 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:14:16,332 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:14:16,490 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:14:16,682 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:14:16,683 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:14:16,853 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:14:17,042 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:14:17,042 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:14:17,213 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:14:17,213 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:14:17,383 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:14:17,384 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:14:17,553 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:14:17,707 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:14:17,707 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:14:17,872 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:14:18,173 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:14:18,446 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:14:18,638 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:14:18,797 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:14:18,953 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:14:19,118 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:14:19,280 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:14:19,478 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:14:19,640 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:14:19,827 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:14:19,988 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:14:20,148 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:14:20,423 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:14:20,849 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:14:21,193 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:14:21,541 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:14:21,905 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:14:22,064 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:14:22,064 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:14:22,264 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:14:22,265 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:14:22,504 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:14:22,505 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:14:22,680 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:14:22,680 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:14:22,857 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:14:22,858 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:14:23,023 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:14:23,023 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:14:23,232 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:14:23,232 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:14:23,419 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:14:23,596 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:14:23,596 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:14:23,791 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:14:23,791 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:15:50,987 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:15:51,264 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:15:51,465 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:15:51,647 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:15:51,843 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:15:52,032 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:15:52,221 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:15:52,410 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:15:52,604 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:15:52,785 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:15:52,994 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:15:53,240 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:15:53,240 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:15:53,427 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:15:53,427 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:15:53,630 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:15:53,812 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:15:53,977 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:15:54,366 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:15:54,738 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:15:55,074 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:15:55,414 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:15:55,575 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:15:55,736 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:15:55,907 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:15:55,908 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:15:56,081 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:15:56,258 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:15:56,258 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:15:56,431 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:15:56,432 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:15:56,591 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:15:56,591 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:15:56,760 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:15:56,927 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:15:56,927 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:15:57,139 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:15:57,409 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:15:57,673 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:15:57,836 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:15:58,034 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:15:58,194 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:15:58,383 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:15:58,542 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:15:58,704 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:15:58,885 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:15:59,043 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:15:59,208 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:15:59,374 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:15:59,609 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:16:00,018 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:16:00,374 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:16:00,695 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:16:01,031 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:16:01,192 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:16:01,192 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:16:01,383 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:16:01,383 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:16:01,545 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:16:01,545 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:16:01,783 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:16:01,783 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:16:01,948 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:16:01,948 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:16:02,132 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:16:02,132 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:16:02,296 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:16:02,297 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:16:02,486 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:16:02,676 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:16:02,676 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:16:02,847 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:16:02,847 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:16:46,946 - [test_audit.py-->line:86] - ERROR: 用例审核通过执行未通过
2020-03-02 02:16:46,946 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:16:47,312 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:16:47,560 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:16:47,720 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:16:47,919 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:16:48,076 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:16:48,272 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:16:48,429 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:16:48,594 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:16:48,752 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:16:48,917 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:16:49,098 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:16:49,319 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:16:49,319 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:16:49,479 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:16:49,479 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:16:49,671 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:16:49,858 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:16:50,022 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:16:50,462 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:16:50,791 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:16:51,126 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:16:51,459 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:16:51,619 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:16:51,820 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:16:51,984 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:16:51,984 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:16:52,157 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:16:52,320 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:16:52,321 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:16:52,489 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:16:52,489 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:16:52,669 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:16:52,669 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:16:52,844 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:16:53,013 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:16:53,014 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:16:53,193 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:16:53,473 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:16:53,744 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:16:53,961 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:16:54,129 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:16:54,299 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:16:54,480 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:16:54,666 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:16:54,835 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:16:55,006 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:16:55,172 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:16:55,353 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:16:55,518 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:16:55,799 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:16:56,211 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:16:56,539 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:16:56,870 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:16:57,223 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:16:57,422 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:16:57,422 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:16:57,583 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:16:57,583 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:16:57,804 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:16:57,804 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:16:57,962 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:16:57,962 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:16:58,139 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:16:58,139 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:16:58,302 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:16:58,302 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:16:58,482 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:16:58,482 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:16:58,640 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:16:58,844 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:16:58,844 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:16:59,020 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:16:59,020 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:18:14,976 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:18:14,977 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:18:15,202 - [test_audit.py-->line:86] - ERROR: 用例审核通过执行未通过
2020-03-02 02:18:15,202 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:18:15,554 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:18:15,805 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:18:15,976 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:18:16,158 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:18:16,329 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:18:16,499 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:18:16,665 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:18:16,852 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:18:17,022 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:18:17,199 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:18:17,378 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:18:17,593 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:18:17,594 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:18:17,763 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:18:17,764 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:18:17,967 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:18:18,146 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:18:18,364 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:18:18,765 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:18:19,098 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:18:19,438 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:18:19,776 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:18:19,962 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:18:20,171 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:18:20,373 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:18:20,374 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:18:20,553 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:18:20,756 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:18:20,757 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:18:20,937 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:18:20,937 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:18:21,130 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:18:21,130 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:18:21,316 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:18:21,515 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:18:21,515 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:18:21,685 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:18:21,988 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:18:22,299 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:18:22,476 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:18:22,659 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:18:22,857 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:18:23,053 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:18:23,248 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:18:23,446 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:18:23,634 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:18:23,820 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:18:23,996 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:18:24,184 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:18:24,458 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:18:24,879 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:18:25,219 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:18:25,554 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:18:25,879 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:18:26,035 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:18:26,035 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:18:26,247 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:18:26,247 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:18:26,415 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:18:26,415 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:18:26,584 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:18:26,585 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:18:26,773 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:18:26,773 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:18:26,941 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:18:26,941 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:18:27,110 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:18:27,110 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:18:27,313 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:18:27,475 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:18:27,475 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:18:27,649 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:18:27,649 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:27:29,977 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:27:29,977 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:27:30,224 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:27:30,225 - [test_audit.py-->line:87] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 02:27:30,463 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:27:30,463 - [test_audit.py-->line:87] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2020-03-02 02:27:30,975 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:27:31,251 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:27:31,448 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:27:31,648 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:27:31,848 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:27:32,042 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:27:32,242 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:27:32,445 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:27:32,647 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:27:32,836 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:27:33,049 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:27:33,279 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:27:33,280 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:27:33,477 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:27:33,477 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:27:33,691 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:27:33,948 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:27:34,146 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:27:34,585 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:27:34,918 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:27:35,276 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:27:35,628 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:27:35,825 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:27:35,995 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:27:36,174 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:27:36,174 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:27:36,352 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:27:36,607 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:27:36,607 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:27:36,773 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:27:36,773 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:27:36,963 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:27:36,964 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:27:37,133 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:27:37,328 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:27:37,328 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:27:37,501 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:27:37,836 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:27:38,139 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:27:38,309 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:27:38,481 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:27:38,683 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:27:38,863 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:27:39,042 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:27:39,220 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:27:39,425 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:27:39,606 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:27:39,778 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:27:39,952 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:27:40,211 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:27:40,648 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:27:41,014 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:27:41,388 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:27:41,732 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:27:41,976 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:27:41,976 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:27:42,146 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:27:42,146 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:27:42,353 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:27:42,353 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:27:42,544 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:27:42,545 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:27:42,727 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:27:42,727 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:27:42,898 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:27:42,898 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:27:43,082 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:27:43,083 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:27:43,257 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:27:43,431 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:27:43,431 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:27:43,636 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:27:43,637 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:29:59,949 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:29:59,950 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:30:00,185 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:30:00,185 - [test_audit.py-->line:87] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-03-02 02:30:00,427 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:30:00,427 - [test_audit.py-->line:87] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2020-03-02 02:30:00,670 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 02:30:00,919 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 02:30:01,309 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:30:01,592 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:30:01,795 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:30:01,992 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:30:02,178 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:30:02,362 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:30:02,544 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:30:02,738 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:30:02,940 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:30:03,180 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:30:03,379 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:30:03,647 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:30:03,647 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:30:03,851 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:30:03,851 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:30:04,054 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:30:04,251 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:30:04,442 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:30:04,899 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:30:05,221 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:30:05,593 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:30:05,937 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:30:06,102 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:30:06,271 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:30:06,468 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:30:06,468 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:30:06,640 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:30:06,819 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:30:06,819 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:30:06,993 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:30:06,993 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:30:07,157 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:30:07,157 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:30:07,330 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:30:07,546 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:30:07,546 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:30:07,708 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:30:08,005 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:30:08,294 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:30:08,471 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:30:08,634 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:30:08,793 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:30:08,995 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:30:09,172 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:30:09,341 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:30:09,508 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:30:09,701 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:30:09,864 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:30:10,041 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:30:10,310 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:30:10,720 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:30:11,061 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:30:11,437 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:30:11,771 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:30:11,940 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:30:11,940 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:30:12,107 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:30:12,107 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:30:12,289 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:30:12,290 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:30:12,462 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:30:12,463 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:30:12,634 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:30:12,635 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:30:12,807 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:30:12,807 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:30:12,972 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:30:12,972 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:30:13,141 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:30:13,302 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:30:13,303 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:30:13,479 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:30:13,479 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:31:48,442 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:31:48,442 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:31:48,692 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:31:48,693 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:31:48,947 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:31:48,947 - [test_audit.py-->line:87] - ERROR: '项目不在审核状态' != '数值格式异常'
- 项目不在审核状态
+ 数值格式异常
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 78, in test_audit
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '项目不在审核状态' != '数值格式异常'
- 项目不在审核状态
+ 数值格式异常

2020-03-02 02:31:49,192 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 02:31:49,404 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 02:31:49,752 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:31:50,041 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:31:50,244 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:31:50,415 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:31:50,585 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:31:50,753 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:31:50,920 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:31:51,087 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:31:51,273 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:31:51,437 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:31:51,612 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:31:51,857 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:31:51,857 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:31:52,075 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:31:52,075 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:31:52,287 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:31:52,472 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:31:52,643 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:31:53,053 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:31:53,390 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:31:53,734 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:31:54,055 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:31:54,219 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:31:54,387 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:31:54,596 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:31:54,596 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:31:54,766 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:31:54,946 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:31:54,946 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:31:55,108 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:31:55,109 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:31:55,286 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:31:55,286 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:31:55,474 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:31:55,706 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:31:55,706 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:31:55,877 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:31:56,162 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:31:56,446 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:31:56,609 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:31:56,806 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:31:56,980 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:31:57,171 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:31:57,350 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:31:57,519 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:31:57,686 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:31:57,854 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:31:58,044 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:31:58,217 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:31:58,498 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:31:58,939 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:31:59,272 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:31:59,662 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:32:00,035 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:32:00,224 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:32:00,224 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:32:00,396 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:32:00,396 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:32:00,569 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:32:00,569 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:32:00,740 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:32:00,740 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:32:00,919 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:32:00,920 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:32:01,106 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:32:01,106 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:32:01,267 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:32:01,267 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:32:01,439 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:32:01,609 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:32:01,610 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:32:01,790 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:32:01,790 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:34:35,779 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:34:35,779 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:34:36,010 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:34:36,010 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:34:36,291 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 02:34:36,508 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 02:34:36,856 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:34:37,135 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:34:37,306 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:34:37,476 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:34:37,704 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:34:37,874 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:34:38,045 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:34:38,211 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:34:38,380 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:34:38,574 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:34:38,753 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:34:38,992 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:34:38,992 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:34:39,183 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:34:39,183 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:34:39,421 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:34:39,609 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:34:39,800 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:34:40,636 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:34:41,107 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:34:41,523 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:34:41,925 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:34:42,236 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:34:42,487 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:34:42,674 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:34:42,674 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:34:42,893 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:34:43,120 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:34:43,120 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:34:43,289 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:34:43,290 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:34:43,469 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:34:43,469 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:34:43,666 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:34:43,835 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:34:43,836 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:34:44,035 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:34:44,332 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:34:44,657 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:34:44,824 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:34:45,059 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:34:45,283 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:34:45,461 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:34:45,641 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:34:45,883 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:34:46,068 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:34:46,241 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:34:46,406 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:34:46,589 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:34:46,866 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:34:47,289 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:34:47,642 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:34:48,013 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:34:48,398 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:34:48,573 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:34:48,574 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:34:48,754 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:34:48,754 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:34:48,947 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:34:48,947 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:34:49,116 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:34:49,116 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:34:49,314 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:34:49,314 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:34:49,494 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:34:49,494 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:34:49,663 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:34:49,663 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:34:49,836 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:34:50,031 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:34:50,031 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:34:50,203 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:34:50,203 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:37:39,220 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:37:39,220 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:37:39,517 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:37:39,517 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:37:39,849 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 02:37:40,201 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:37:40,511 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:37:40,689 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:37:40,866 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:37:41,043 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:37:41,239 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:37:41,411 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:37:41,600 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:37:41,775 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:37:41,955 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:37:42,151 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:37:42,380 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:37:42,380 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:37:42,555 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:37:42,555 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:37:42,743 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:37:42,974 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:37:43,152 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:37:43,556 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:37:43,921 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:37:44,253 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:37:44,575 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:37:44,751 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:37:44,925 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:37:45,116 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:37:45,117 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:37:45,293 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:37:45,477 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:37:45,477 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:37:45,659 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:37:45,660 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:37:45,850 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:37:45,851 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:37:46,028 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:37:46,202 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:37:46,202 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:37:46,397 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:37:46,768 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:37:47,078 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:37:47,257 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:37:47,440 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:37:47,612 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:37:47,789 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:37:47,976 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:37:48,152 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:37:48,332 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:37:48,516 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:37:48,698 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:37:48,870 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:37:49,132 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:37:49,536 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:37:49,880 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:37:50,239 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:37:50,598 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:37:50,808 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:37:50,808 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:37:50,983 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:37:50,983 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:37:51,168 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:37:51,169 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:37:51,341 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:37:51,342 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:37:51,527 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:37:51,527 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:37:51,706 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:37:51,706 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:37:51,884 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:37:51,884 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:37:52,056 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:37:52,231 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:37:52,231 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:37:52,402 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:37:52,402 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:39:10,023 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:39:10,023 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:39:10,257 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:39:10,257 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:39:10,588 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 02:39:10,919 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:39:11,190 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:39:11,384 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:39:11,598 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:39:11,785 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:39:11,986 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:39:12,201 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:39:12,401 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:39:12,598 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:39:12,801 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:39:13,008 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:39:13,246 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:39:13,246 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:39:13,450 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:39:13,450 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:39:13,654 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:39:13,920 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:39:14,124 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:39:14,547 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:39:14,899 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:39:15,233 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:39:15,573 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:39:15,773 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:39:15,976 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:39:16,177 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:39:16,177 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:39:16,355 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:39:16,530 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:39:16,530 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:39:16,706 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:39:16,706 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:39:16,877 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:39:16,877 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:39:17,053 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:39:17,222 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:39:17,223 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:39:17,398 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:39:17,760 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:39:18,033 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:39:18,200 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:39:18,370 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:39:18,533 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:39:18,707 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:39:18,883 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:39:19,056 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:39:19,221 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:39:19,396 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:39:19,567 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:39:19,765 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:39:20,035 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:39:20,462 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:39:20,806 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:39:21,162 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:39:21,508 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:39:21,717 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:39:21,717 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:39:21,896 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:39:21,896 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:39:22,082 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:39:22,082 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:39:22,279 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:39:22,279 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:39:22,463 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:39:22,464 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:39:22,635 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:39:22,635 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:39:22,816 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:39:22,816 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:39:23,005 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:39:23,219 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:39:23,219 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:39:23,391 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:39:23,391 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:40:27,564 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:40:27,564 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:40:27,816 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 02:40:27,816 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 02:40:28,158 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 02:40:28,481 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:40:28,731 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:40:28,915 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:40:29,087 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:40:29,258 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:40:29,455 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:40:29,652 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:40:29,834 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:40:30,014 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:40:30,188 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:40:30,361 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 02:40:30,575 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 02:40:30,575 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 02:40:30,764 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 02:40:30,764 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:40:30,947 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 02:40:31,169 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 02:40:31,344 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 02:40:31,763 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 02:40:32,116 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 02:40:32,456 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 02:40:32,794 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 02:40:32,961 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 02:40:33,128 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 02:40:33,333 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:40:33,333 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:40:33,521 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 02:40:33,715 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 02:40:33,715 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:40:33,879 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 02:40:33,879 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:40:34,056 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 02:40:34,056 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 02:40:34,232 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 02:40:34,406 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 02:40:34,406 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 02:40:34,575 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 02:40:34,920 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 02:40:35,194 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 02:40:35,388 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 02:40:35,562 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 02:40:35,732 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 02:40:35,918 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 02:40:36,130 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 02:40:36,311 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 02:40:36,482 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 02:40:36,647 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 02:40:36,819 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 02:40:36,990 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 02:40:37,238 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 02:40:37,677 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 02:40:38,025 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 02:40:38,376 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 02:40:38,727 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 02:40:38,941 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 02:40:38,941 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 02:40:39,148 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 02:40:39,148 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 02:40:39,331 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 02:40:39,331 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:40:39,513 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 02:40:39,513 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 02:40:39,718 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 02:40:39,718 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 02:40:39,892 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 02:40:39,892 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:40:40,067 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 02:40:40,067 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 02:40:40,237 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 02:40:40,414 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 02:40:40,414 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 02:40:40,584 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 02:40:40,584 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:37:10,939 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 20:37:10,940 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 20:37:11,181 - [test_audit.py-->line:86] - ERROR: 用例审核执行未通过
2020-03-02 20:37:11,182 - [test_audit.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 77, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 20:37:11,541 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 20:37:11,919 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:37:12,194 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:37:12,378 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:37:12,566 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:37:12,746 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:37:12,979 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:37:13,197 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:37:13,380 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:37:13,590 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:37:13,786 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:37:13,976 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:37:14,221 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 20:37:14,221 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 20:37:14,412 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 20:37:14,412 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:37:14,698 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 20:37:14,879 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 20:37:15,057 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 20:37:15,490 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 20:37:15,866 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 20:37:16,234 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 20:37:16,593 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 20:37:16,815 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 20:37:16,991 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 20:37:17,199 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:37:17,200 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:37:17,416 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 20:37:17,641 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 20:37:17,641 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:37:17,871 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 20:37:17,871 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:37:18,110 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 20:37:18,110 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:37:18,426 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 20:37:18,609 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 20:37:18,609 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:37:18,825 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 20:37:19,208 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 20:37:19,514 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 20:37:19,694 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 20:37:19,886 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 20:37:20,114 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 20:37:20,290 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 20:37:20,501 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 20:37:20,688 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 20:37:20,897 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 20:37:21,081 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 20:37:21,272 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 20:37:21,482 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 20:37:21,782 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 20:37:22,214 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 20:37:22,567 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 20:37:22,978 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 20:37:23,364 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 20:37:23,609 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 20:37:23,609 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 20:37:23,796 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 20:37:23,796 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 20:37:23,998 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:37:23,998 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:37:24,185 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 20:37:24,185 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:37:24,405 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 20:37:24,405 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:37:24,586 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 20:37:24,586 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:37:24,779 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 20:37:24,779 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 20:37:24,974 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 20:37:25,188 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 20:37:25,188 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:37:25,374 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 20:37:25,374 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:39:06,561 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 20:39:06,830 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 20:39:07,162 - [test_audit.py-->line:92] - ERROR: 用例审核执行通过
2020-03-02 20:39:07,538 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:39:07,799 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:39:07,985 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:39:08,213 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:39:08,404 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:39:08,599 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:39:08,777 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:39:08,955 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:39:09,134 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:39:09,315 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:39:09,502 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:39:09,873 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 20:39:09,873 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 20:39:10,360 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 20:39:10,360 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:39:10,596 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 20:39:10,795 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 20:39:10,984 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 20:39:11,417 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 20:39:11,797 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 20:39:12,140 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 20:39:12,495 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 20:39:12,681 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 20:39:12,871 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 20:39:13,063 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:39:13,063 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:39:13,273 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 20:39:13,448 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 20:39:13,448 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:39:13,694 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 20:39:13,694 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:39:13,932 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 20:39:13,933 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:39:14,114 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 20:39:14,306 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 20:39:14,306 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:39:14,481 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 20:39:15,093 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 20:39:15,358 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 20:39:15,543 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 20:39:15,723 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 20:39:15,905 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 20:39:16,123 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 20:39:16,365 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 20:39:16,548 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 20:39:16,744 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 20:39:16,913 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 20:39:17,093 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 20:39:17,267 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 20:39:17,594 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 20:39:18,027 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 20:39:18,376 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 20:39:18,751 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 20:39:19,083 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 20:39:19,302 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 20:39:19,302 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 20:39:19,495 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 20:39:19,495 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 20:39:19,706 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:39:19,706 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:39:19,891 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 20:39:19,891 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:39:20,072 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 20:39:20,072 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:39:20,265 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 20:39:20,265 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:39:20,462 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 20:39:20,462 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 20:39:20,641 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 20:39:20,834 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 20:39:20,834 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:39:21,020 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 20:39:21,021 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:45:47,466 - [test_audit.py-->line:93] - ERROR: 用例审核通过执行通过
2020-03-02 20:45:47,714 - [test_audit.py-->line:93] - ERROR: 用例审核执行通过
2020-03-02 20:45:48,036 - [test_audit.py-->line:93] - ERROR: 用例审核执行通过
2020-03-02 20:45:48,388 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:45:48,789 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:45:49,002 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:45:49,232 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:45:49,417 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:45:49,598 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:45:49,769 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:45:49,962 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:45:50,142 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:45:50,330 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:45:50,515 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:45:50,744 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 20:45:50,744 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 20:45:50,926 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 20:45:50,926 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:45:51,122 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 20:45:51,357 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 20:45:51,582 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 20:45:52,014 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 20:45:52,362 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 20:45:52,713 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 20:45:53,073 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 20:45:53,247 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 20:45:53,424 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 20:45:53,613 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:45:53,613 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:45:53,796 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 20:45:53,986 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 20:45:53,987 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:45:54,178 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 20:45:54,179 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:45:54,407 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 20:45:54,408 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:45:54,590 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 20:45:54,809 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 20:45:54,809 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:45:54,995 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 20:45:55,323 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 20:45:55,637 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 20:45:55,816 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 20:45:55,999 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 20:45:56,170 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 20:45:56,351 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 20:45:56,539 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 20:45:56,711 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 20:45:56,886 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 20:45:57,056 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 20:45:57,231 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 20:45:57,394 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 20:45:57,662 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 20:45:58,087 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 20:45:58,444 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 20:45:58,804 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 20:45:59,164 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 20:45:59,427 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 20:45:59,427 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 20:45:59,607 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 20:45:59,608 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 20:45:59,803 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:45:59,803 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:45:59,977 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 20:45:59,977 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:46:00,171 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 20:46:00,171 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:46:00,353 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 20:46:00,353 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:46:00,575 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 20:46:00,575 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 20:46:00,798 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 20:46:00,997 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 20:46:00,997 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:46:01,190 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 20:46:01,190 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:48:05,776 - [test_audit.py-->line:93] - ERROR: 用例审核通过执行通过
2020-03-02 20:48:05,998 - [test_audit.py-->line:93] - ERROR: 用例审核执行通过
2020-03-02 20:48:06,362 - [test_audit.py-->line:93] - ERROR: 用例审核执行通过
2020-03-02 20:48:06,736 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:48:07,023 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:48:07,203 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:48:07,382 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:48:07,553 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:48:07,727 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:48:07,903 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:48:08,093 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:48:08,270 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:48:08,467 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:48:08,692 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:48:08,921 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 20:48:08,921 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 20:48:09,118 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 20:48:09,118 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:48:09,349 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 20:48:09,575 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 20:48:09,769 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 20:48:10,218 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 20:48:10,540 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 20:48:10,874 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 20:48:11,211 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 20:48:11,389 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 20:48:11,571 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 20:48:11,760 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:48:11,760 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:48:11,947 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 20:48:12,170 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 20:48:12,170 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:48:12,359 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 20:48:12,360 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:48:12,533 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 20:48:12,533 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:48:12,728 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 20:48:12,916 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 20:48:12,916 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:48:13,107 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 20:48:13,468 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 20:48:13,787 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 20:48:13,968 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 20:48:14,176 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 20:48:14,364 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 20:48:14,544 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 20:48:14,734 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 20:48:14,908 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 20:48:15,091 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 20:48:15,287 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 20:48:15,465 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 20:48:15,640 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 20:48:15,918 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 20:48:16,345 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 20:48:16,692 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 20:48:17,066 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 20:48:17,436 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 20:48:17,669 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 20:48:17,669 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 20:48:17,853 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 20:48:17,854 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 20:48:18,056 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:48:18,056 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:48:18,253 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 20:48:18,254 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:48:18,451 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 20:48:18,451 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:48:18,638 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 20:48:18,638 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:48:18,839 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 20:48:18,840 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 20:48:19,025 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 20:48:19,203 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 20:48:19,203 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:48:19,437 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 20:48:19,437 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:50:30,232 - [test_audit.py-->line:93] - ERROR: 用例审核通过执行通过
2020-03-02 20:50:30,463 - [test_audit.py-->line:93] - ERROR: 用例审核执行通过
2020-03-02 20:50:30,714 - [test_audit.py-->line:93] - ERROR: 用例审核执行通过
2020-03-02 20:50:30,930 - [test_audit.py-->line:93] - ERROR: 用例审核执行通过
2020-03-02 20:50:31,319 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:50:31,578 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:50:31,769 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:50:31,950 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:50:32,119 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:50:32,305 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:50:32,489 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:50:32,677 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:50:32,857 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:50:33,051 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:50:33,248 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:50:33,463 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 20:50:33,463 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 20:50:33,635 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 20:50:33,635 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:50:33,893 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 20:50:34,080 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 20:50:34,265 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 20:50:34,674 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 20:50:34,999 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 20:50:35,333 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 20:50:35,675 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 20:50:35,854 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 20:50:36,056 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 20:50:36,319 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:50:36,320 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:50:36,505 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 20:50:36,696 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 20:50:36,696 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:50:36,887 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 20:50:36,887 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:50:37,071 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 20:50:37,073 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:50:37,245 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 20:50:37,426 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 20:50:37,426 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:50:37,646 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 20:50:37,939 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 20:50:38,223 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 20:50:38,390 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 20:50:38,560 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 20:50:38,723 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 20:50:38,902 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 20:50:39,086 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 20:50:39,260 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 20:50:39,432 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 20:50:39,607 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 20:50:39,775 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 20:50:39,956 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 20:50:40,242 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 20:50:40,625 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 20:50:40,992 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 20:50:41,323 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 20:50:41,678 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 20:50:41,847 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 20:50:41,847 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 20:50:42,036 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 20:50:42,036 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 20:50:42,222 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:50:42,222 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:50:42,392 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 20:50:42,392 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:50:42,580 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 20:50:42,580 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:50:42,795 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 20:50:42,796 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:50:42,962 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 20:50:42,962 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 20:50:43,145 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 20:50:43,323 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 20:50:43,323 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:50:43,496 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 20:50:43,496 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:52:51,594 - [test_audit.py-->line:93] - ERROR: 用例审核通过执行通过
2020-03-02 20:52:51,813 - [test_audit.py-->line:93] - ERROR: 用例审核执行通过
2020-03-02 20:52:52,110 - [test_audit.py-->line:93] - ERROR: 用例审核执行通过
2020-03-02 20:52:52,319 - [test_audit.py-->line:93] - ERROR: 用例审核执行通过
2020-03-02 20:52:52,693 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:52:52,948 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:52:53,117 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:52:53,294 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:52:53,453 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:52:53,645 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:52:53,818 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:52:53,989 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:52:54,176 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:52:54,361 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:52:54,546 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 20:52:54,768 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 20:52:54,768 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 20:52:54,944 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 20:52:54,944 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:52:55,207 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 20:52:55,429 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 20:52:55,645 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 20:52:56,038 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 20:52:56,359 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 20:52:56,701 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 20:52:57,027 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 20:52:57,200 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 20:52:57,372 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 20:52:57,544 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:52:57,545 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:52:57,714 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 20:52:57,907 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 20:52:57,907 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:52:58,078 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 20:52:58,078 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:52:58,249 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 20:52:58,249 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:52:58,416 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 20:52:58,582 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 20:52:58,582 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:52:58,804 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 20:52:59,097 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 20:52:59,363 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 20:52:59,541 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 20:52:59,714 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 20:52:59,890 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 20:53:00,077 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 20:53:00,257 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 20:53:00,426 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 20:53:00,600 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 20:53:00,773 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 20:53:00,940 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 20:53:01,115 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 20:53:01,378 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 20:53:01,813 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 20:53:02,158 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 20:53:02,488 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 20:53:02,880 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 20:53:03,055 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 20:53:03,055 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 20:53:03,255 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 20:53:03,255 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 20:53:03,438 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 20:53:03,438 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:53:03,620 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 20:53:03,620 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 20:53:03,791 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 20:53:03,791 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:53:04,008 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 20:53:04,008 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:53:04,187 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 20:53:04,187 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 20:53:04,371 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 20:53:04,552 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 20:53:04,553 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:53:04,765 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 20:53:04,765 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 21:00:33,324 - [test_audit.py-->line:98] - ERROR: 用例审核通过执行通过
2020-03-02 21:00:33,572 - [test_audit.py-->line:98] - ERROR: 用例审核执行通过
2020-03-02 21:00:33,841 - [test_audit.py-->line:98] - ERROR: 用例审核执行通过
2020-03-02 21:00:34,060 - [test_audit.py-->line:98] - ERROR: 用例审核执行通过
2020-03-02 21:00:34,456 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:00:34,920 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:00:35,144 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:00:35,333 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:00:35,507 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:00:35,684 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:00:35,876 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:00:36,052 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:00:36,290 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:00:36,464 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:00:36,642 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:00:36,868 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 21:00:36,868 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 21:00:37,090 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 21:00:37,091 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:00:37,278 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 21:00:37,468 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 21:00:37,658 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 21:00:38,127 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 21:00:38,463 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 21:00:38,810 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 21:00:39,156 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 21:00:39,327 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 21:00:39,490 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 21:00:39,701 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 21:00:39,701 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:00:39,872 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 21:00:40,056 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 21:00:40,056 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:00:40,221 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 21:00:40,222 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:00:40,405 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 21:00:40,405 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:00:40,579 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 21:00:40,759 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 21:00:40,759 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:00:40,975 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 21:00:41,338 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 21:00:41,608 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 21:00:41,822 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 21:00:41,989 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 21:00:42,158 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 21:00:42,329 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 21:00:42,502 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 21:00:42,673 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 21:00:42,849 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 21:00:43,023 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 21:00:43,273 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 21:00:43,461 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 21:00:43,718 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 21:00:44,123 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 21:00:44,442 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 21:00:44,779 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 21:00:45,163 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 21:00:45,331 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 21:00:45,332 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 21:00:45,511 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 21:00:45,511 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 21:00:45,692 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 21:00:45,693 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:00:45,881 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 21:00:45,882 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 21:00:46,051 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 21:00:46,052 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:00:46,270 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 21:00:46,270 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:00:46,585 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 21:00:46,585 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 21:00:46,748 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 21:00:46,942 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 21:00:46,943 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:00:47,108 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 21:00:47,109 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 21:08:17,626 - [test_audit.py-->line:94] - ERROR: 用例审核执行通过
2020-03-02 21:08:17,894 - [test_audit.py-->line:94] - ERROR: 用例审核执行通过
2020-03-02 21:08:18,126 - [test_audit.py-->line:94] - ERROR: 用例审核执行通过
2020-03-02 21:08:18,536 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:08:18,813 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:08:18,986 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:08:19,174 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:08:19,345 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:08:19,515 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:08:19,688 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:08:19,927 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:08:20,103 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:08:20,291 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:08:20,467 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:08:20,684 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 21:08:20,685 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 21:08:20,856 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 21:08:20,857 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:08:21,083 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 21:08:21,272 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 21:08:21,473 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 21:08:21,887 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 21:08:22,248 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 21:08:22,586 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 21:08:22,911 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 21:08:23,078 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 21:08:23,269 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 21:08:23,450 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 21:08:23,451 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:08:23,641 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 21:08:23,817 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 21:08:23,817 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:08:23,999 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 21:08:24,000 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:08:24,173 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 21:08:24,173 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:08:24,350 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 21:08:24,516 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 21:08:24,516 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:08:24,736 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 21:08:25,146 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 21:08:25,531 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 21:08:25,739 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 21:08:25,912 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 21:08:26,204 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 21:08:26,425 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 21:08:26,600 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 21:08:26,769 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 21:08:26,942 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 21:08:27,112 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 21:08:27,283 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 21:08:27,455 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 21:08:27,746 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 21:08:28,161 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 21:08:28,503 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 21:08:28,852 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 21:08:29,208 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 21:08:29,426 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 21:08:29,427 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 21:08:29,600 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 21:08:29,600 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 21:08:29,781 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 21:08:29,781 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:08:29,945 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 21:08:29,945 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 21:08:30,157 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 21:08:30,158 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:08:30,332 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 21:08:30,332 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:08:30,522 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 21:08:30,522 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 21:08:30,700 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 21:08:30,879 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 21:08:30,879 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:08:31,049 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 21:08:31,049 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 21:13:07,949 - [test_audit.py-->line:94] - ERROR: 用例审核通过执行通过
2020-03-02 21:13:08,181 - [test_audit.py-->line:94] - ERROR: 用例审核执行通过
2020-03-02 21:13:08,453 - [test_audit.py-->line:94] - ERROR: 用例审核执行通过
2020-03-02 21:13:08,711 - [test_audit.py-->line:94] - ERROR: 用例审核执行通过
2020-03-02 21:13:09,071 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:13:09,319 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:13:09,502 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:13:09,678 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:13:09,854 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:13:10,024 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:13:10,186 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:13:10,353 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:13:10,520 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:13:10,689 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:13:10,862 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-02 21:13:11,076 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-02 21:13:11,076 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 21:13:11,294 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-02 21:13:11,294 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:13:11,478 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-02 21:13:11,662 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-02 21:13:11,839 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-02 21:13:12,270 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-02 21:13:12,624 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-02 21:13:12,971 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-02 21:13:13,331 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-02 21:13:13,507 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-02 21:13:13,705 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-02 21:13:13,906 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 21:13:13,906 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:13:14,089 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-02 21:13:14,281 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-02 21:13:14,281 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:13:14,476 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-02 21:13:14,477 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:13:14,651 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-02 21:13:14,651 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:13:14,834 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-02 21:13:15,010 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-02 21:13:15,010 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:13:15,235 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-02 21:13:15,551 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-02 21:13:15,823 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-02 21:13:15,986 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-02 21:13:16,157 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-02 21:13:16,335 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-02 21:13:16,511 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-02 21:13:16,684 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-02 21:13:16,864 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-02 21:13:17,038 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-02 21:13:17,210 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-02 21:13:17,374 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-02 21:13:17,553 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-02 21:13:17,812 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-02 21:13:18,267 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-02 21:13:18,637 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-02 21:13:18,974 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-02 21:13:19,352 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-02 21:13:19,525 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-02 21:13:19,525 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-02 21:13:19,711 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-02 21:13:19,711 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-02 21:13:19,901 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-02 21:13:19,902 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:13:20,091 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-02 21:13:20,091 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-02 21:13:20,273 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-02 21:13:20,273 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:13:20,460 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-02 21:13:20,460 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:13:20,634 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-02 21:13:20,635 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-02 21:13:20,820 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-02 21:13:20,999 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-02 21:13:20,999 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:13:21,190 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-02 21:13:21,190 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:29:26,854 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:29:27,143 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:29:27,378 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:29:27,585 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:29:27,778 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:29:27,929 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:29:28,109 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:29:28,343 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:29:28,579 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:29:28,795 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:29:28,957 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:29:29,164 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-03 22:29:29,164 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 22:29:29,383 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-03 22:29:29,383 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:29:29,553 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-03 22:29:29,727 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-03 22:29:29,884 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-03 22:29:30,365 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-03 22:29:30,737 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-03 22:29:31,190 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-03 22:29:31,618 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-03 22:29:31,798 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-03 22:29:31,961 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-03 22:29:32,144 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:29:32,144 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:29:32,313 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-03 22:29:32,477 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-03 22:29:32,477 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:29:32,671 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-03 22:29:32,671 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:29:32,833 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-03 22:29:32,833 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:29:32,999 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-03 22:29:33,164 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-03 22:29:33,164 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:29:33,336 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-03 22:29:33,648 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-03 22:29:33,912 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-03 22:29:34,109 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-03 22:29:34,274 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-03 22:29:34,462 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-03 22:29:34,648 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-03 22:29:34,812 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-03 22:29:35,003 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-03 22:29:35,209 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-03 22:29:35,469 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-03 22:29:35,666 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-03 22:29:35,829 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-03 22:29:36,142 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-03 22:29:36,533 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-03 22:29:36,870 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-03 22:29:37,222 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-03 22:29:37,659 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-03 22:29:37,834 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-03 22:29:37,834 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-03 22:29:38,045 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-03 22:29:38,045 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-03 22:29:38,357 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:29:38,357 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:29:38,546 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-03 22:29:38,546 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:29:38,735 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-03 22:29:38,735 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:29:38,891 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-03 22:29:38,891 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:29:39,047 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-03 22:29:39,048 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-03 22:29:39,287 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-03 22:29:39,469 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-03 22:29:39,470 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:29:39,658 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-03 22:29:39,658 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:31:42,256 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:31:42,665 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:31:42,823 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:31:43,050 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:31:43,319 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:31:43,485 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:31:43,706 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:31:43,921 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:31:44,298 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:31:44,462 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:31:44,713 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:31:44,959 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-03 22:31:44,959 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 22:31:45,208 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-03 22:31:45,208 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:31:45,443 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-03 22:31:45,631 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-03 22:31:45,878 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-03 22:31:46,383 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-03 22:31:46,741 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-03 22:31:47,110 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-03 22:31:47,455 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-03 22:31:47,759 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-03 22:31:47,999 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-03 22:31:48,164 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:31:48,164 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:31:48,392 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-03 22:31:48,546 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-03 22:31:48,546 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:31:48,830 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-03 22:31:48,830 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:31:49,050 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-03 22:31:49,050 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:31:49,199 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-03 22:31:49,388 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-03 22:31:49,388 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:31:49,537 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-03 22:31:49,847 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-03 22:31:50,140 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-03 22:31:50,324 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-03 22:31:50,474 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-03 22:31:50,645 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-03 22:31:50,800 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-03 22:31:51,019 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-03 22:31:51,325 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-03 22:31:51,527 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-03 22:31:51,689 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-03 22:31:51,846 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-03 22:31:52,000 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-03 22:31:52,282 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-03 22:31:52,683 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-03 22:31:53,030 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-03 22:31:53,388 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-03 22:31:53,756 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-03 22:31:53,955 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-03 22:31:53,956 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-03 22:31:54,110 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-03 22:31:54,110 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-03 22:31:54,344 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:31:54,345 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:31:54,553 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-03 22:31:54,553 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:31:54,724 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-03 22:31:54,724 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:31:54,914 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-03 22:31:54,914 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:31:55,095 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-03 22:31:55,095 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-03 22:31:55,248 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-03 22:31:55,454 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-03 22:31:55,454 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:31:55,638 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-03 22:31:55,638 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:33:37,005 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:33:37,274 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:33:37,454 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:33:37,608 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:33:37,837 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:33:37,995 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:33:38,185 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:33:38,328 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:33:38,509 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:33:38,713 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:33:38,880 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:33:39,113 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-03 22:33:39,114 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 22:33:39,297 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-03 22:33:39,297 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:33:39,484 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-03 22:33:39,683 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-03 22:33:39,865 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-03 22:33:40,309 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-03 22:33:40,649 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-03 22:33:41,000 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-03 22:33:41,400 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-03 22:33:41,566 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-03 22:33:41,710 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-03 22:33:42,005 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:33:42,005 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:33:42,164 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-03 22:33:42,383 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-03 22:33:42,383 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:33:42,592 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-03 22:33:42,592 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:33:42,786 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-03 22:33:42,786 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:33:42,943 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-03 22:33:43,084 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-03 22:33:43,084 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:33:43,275 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-03 22:33:43,656 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-03 22:33:43,938 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-03 22:33:44,209 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-03 22:33:44,394 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-03 22:33:44,589 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-03 22:33:44,737 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-03 22:33:45,032 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-03 22:33:45,225 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-03 22:33:45,404 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-03 22:33:45,580 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-03 22:33:45,736 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-03 22:33:45,886 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-03 22:33:46,151 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-03 22:33:46,613 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-03 22:33:46,974 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-03 22:33:47,343 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-03 22:33:47,700 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-03 22:33:47,914 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-03 22:33:47,914 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-03 22:33:48,070 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-03 22:33:48,071 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-03 22:33:48,324 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:33:48,324 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:33:48,545 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-03 22:33:48,545 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:33:48,705 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-03 22:33:48,705 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:33:48,898 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-03 22:33:48,898 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:33:49,102 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-03 22:33:49,103 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-03 22:33:49,253 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-03 22:33:49,469 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-03 22:33:49,469 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:33:49,614 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-03 22:33:49,614 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:46:49,772 - [test_audit.py-->line:95] - ERROR: 用例审核执行通过
2020-03-03 22:46:50,128 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:46:50,460 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:46:50,629 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:46:50,809 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:46:51,025 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:46:51,281 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:46:51,477 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:46:51,663 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:46:51,823 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:46:52,028 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:46:52,203 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:46:52,424 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-03 22:46:52,424 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 22:46:52,593 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-03 22:46:52,593 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:46:52,791 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-03 22:46:53,024 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-03 22:46:53,250 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-03 22:46:53,811 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-03 22:46:54,215 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-03 22:46:54,582 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-03 22:46:54,948 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-03 22:46:55,143 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-03 22:46:55,293 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-03 22:46:55,471 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:46:55,471 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:46:55,650 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-03 22:46:55,845 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-03 22:46:55,845 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:46:56,001 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-03 22:46:56,001 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:46:56,217 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-03 22:46:56,217 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:46:56,378 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-03 22:46:56,568 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-03 22:46:56,568 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:46:56,767 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-03 22:46:57,084 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-03 22:46:57,418 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-03 22:46:57,632 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-03 22:46:57,814 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-03 22:46:57,999 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-03 22:46:58,228 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-03 22:46:58,416 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-03 22:46:58,574 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-03 22:46:58,726 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-03 22:46:58,939 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-03 22:46:59,171 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-03 22:46:59,359 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-03 22:46:59,640 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-03 22:47:00,071 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-03 22:47:00,433 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-03 22:47:00,865 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-03 22:47:01,275 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-03 22:47:01,490 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-03 22:47:01,490 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-03 22:47:01,721 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-03 22:47:01,721 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-03 22:47:01,932 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:47:01,932 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:47:02,134 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-03 22:47:02,134 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:47:02,548 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-03 22:47:02,548 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:47:02,730 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-03 22:47:02,731 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:47:02,900 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-03 22:47:02,900 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-03 22:47:03,150 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-03 22:47:03,304 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-03 22:47:03,304 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:47:03,464 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-03 22:47:03,464 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:49:01,925 - [test_audit.py-->line:96] - ERROR: 用例审核执行通过
2020-03-03 22:49:02,283 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:49:02,616 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:49:02,795 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:49:02,947 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:49:03,119 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:49:03,300 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:49:03,449 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:49:03,631 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:49:03,787 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:49:03,947 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:49:04,166 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:49:04,417 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-03 22:49:04,417 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 22:49:04,600 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-03 22:49:04,600 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:49:04,796 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-03 22:49:05,000 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-03 22:49:05,189 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-03 22:49:05,654 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-03 22:49:06,041 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-03 22:49:06,442 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-03 22:49:06,828 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-03 22:49:07,105 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-03 22:49:07,313 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-03 22:49:07,535 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:49:07,535 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:49:07,712 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-03 22:49:07,878 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-03 22:49:07,878 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:49:08,057 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-03 22:49:08,057 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:49:08,248 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-03 22:49:08,248 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:49:08,406 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-03 22:49:08,593 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-03 22:49:08,593 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:49:08,831 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-03 22:49:09,214 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-03 22:49:09,568 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-03 22:49:09,762 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-03 22:49:09,956 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-03 22:49:10,140 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-03 22:49:10,336 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-03 22:49:10,625 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-03 22:49:10,786 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-03 22:49:10,996 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-03 22:49:11,233 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-03 22:49:11,482 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-03 22:49:11,696 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-03 22:49:12,026 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-03 22:49:12,508 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-03 22:49:12,907 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-03 22:49:13,272 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-03 22:49:13,621 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-03 22:49:13,820 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-03 22:49:13,820 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-03 22:49:14,009 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-03 22:49:14,010 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-03 22:49:14,179 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:49:14,179 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:49:14,386 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-03 22:49:14,386 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:49:14,816 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-03 22:49:14,816 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:49:15,010 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-03 22:49:15,010 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:49:15,201 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-03 22:49:15,201 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-03 22:49:15,376 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-03 22:49:15,566 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-03 22:49:15,566 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:49:15,763 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-03 22:49:15,763 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:53:35,730 - [test_audit.py-->line:98] - ERROR: 用例审核执行通过
2020-03-03 22:53:36,074 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:53:36,359 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:53:36,661 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:53:36,823 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:53:36,981 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:53:37,213 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:53:37,365 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:53:37,616 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:53:37,794 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:53:38,021 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:53:38,209 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:53:38,430 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-03 22:53:38,430 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 22:53:38,623 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-03 22:53:38,623 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:53:38,830 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-03 22:53:39,073 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-03 22:53:39,259 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-03 22:53:39,714 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-03 22:53:40,090 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-03 22:53:40,484 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-03 22:53:40,870 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-03 22:53:41,037 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-03 22:53:41,193 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-03 22:53:41,381 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:53:41,381 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:53:41,562 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-03 22:53:41,734 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-03 22:53:41,734 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:53:41,913 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-03 22:53:41,913 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:53:42,091 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-03 22:53:42,091 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:53:42,271 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-03 22:53:42,424 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-03 22:53:42,424 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:53:42,636 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-03 22:53:42,980 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-03 22:53:43,298 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-03 22:53:43,495 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-03 22:53:43,680 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-03 22:53:43,856 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-03 22:53:44,064 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-03 22:53:44,289 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-03 22:53:44,460 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-03 22:53:44,641 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-03 22:53:44,795 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-03 22:53:44,947 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-03 22:53:45,105 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-03 22:53:45,414 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-03 22:53:45,865 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-03 22:53:46,228 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-03 22:53:46,633 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-03 22:53:47,023 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-03 22:53:47,187 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-03 22:53:47,188 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-03 22:53:47,401 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-03 22:53:47,402 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-03 22:53:47,579 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:53:47,579 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:53:47,737 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-03 22:53:47,737 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:53:47,935 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-03 22:53:47,935 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:53:48,094 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-03 22:53:48,094 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:53:48,304 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-03 22:53:48,304 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-03 22:53:48,459 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-03 22:53:48,614 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-03 22:53:48,614 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:53:48,802 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-03 22:53:48,803 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:55:06,345 - [test_audit.py-->line:96] - ERROR: 用例审核通过执行通过
2020-03-03 22:55:06,664 - [test_audit.py-->line:96] - ERROR: 用例审核执行通过
2020-03-03 22:55:06,947 - [test_audit.py-->line:90] - ERROR: 用例审核执行未通过
2020-03-03 22:55:06,947 - [test_audit.py-->line:91] - ERROR: '项目不在审核状态' != '项目不在审核中状态'
- 项目不在审核状态
+ 项目不在审核中状态
?       +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_audit.py", line 82, in test_audit
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '项目不在审核状态' != '项目不在审核中状态'
- 项目不在审核状态
+ 项目不在审核中状态
?       +

2020-03-03 22:55:07,395 - [test_audit.py-->line:96] - ERROR: 用例审核执行通过
2020-03-03 22:55:07,726 - [test_audit.py-->line:96] - ERROR: 用例审核执行通过
2020-03-03 22:55:08,080 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:55:08,395 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:55:08,610 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:55:08,791 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:55:08,940 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:55:09,233 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:55:09,460 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:55:09,610 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:55:09,779 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:55:09,953 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:55:10,136 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:55:10,399 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-03 22:55:10,399 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 22:55:10,619 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-03 22:55:10,619 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:55:10,798 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-03 22:55:10,985 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-03 22:55:11,132 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-03 22:55:11,565 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-03 22:55:11,908 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-03 22:55:12,262 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-03 22:55:12,662 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-03 22:55:12,808 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-03 22:55:12,991 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-03 22:55:13,173 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:55:13,174 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:55:13,329 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-03 22:55:13,523 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-03 22:55:13,523 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:55:13,704 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-03 22:55:13,705 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:55:13,910 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-03 22:55:13,910 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:55:14,123 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-03 22:55:14,314 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-03 22:55:14,314 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:55:14,472 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-03 22:55:14,827 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-03 22:55:15,098 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-03 22:55:15,268 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-03 22:55:15,532 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-03 22:55:15,734 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-03 22:55:15,893 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-03 22:55:16,106 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-03 22:55:16,314 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-03 22:55:16,514 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-03 22:55:16,678 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-03 22:55:16,877 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-03 22:55:17,075 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-03 22:55:17,377 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-03 22:55:18,049 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-03 22:55:18,454 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-03 22:55:18,797 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-03 22:55:19,163 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-03 22:55:19,346 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-03 22:55:19,346 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-03 22:55:19,569 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-03 22:55:19,569 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-03 22:55:19,784 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:55:19,784 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:55:19,968 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-03 22:55:19,968 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:55:20,134 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-03 22:55:20,134 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:55:20,309 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-03 22:55:20,310 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:55:20,502 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-03 22:55:20,502 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-03 22:55:20,706 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-03 22:55:20,865 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-03 22:55:20,865 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:55:21,093 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-03 22:55:21,094 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:57:28,448 - [test_audit.py-->line:96] - ERROR: 用例审核通过执行通过
2020-03-03 22:57:28,700 - [test_audit.py-->line:96] - ERROR: 用例审核执行通过
2020-03-03 22:57:28,927 - [test_audit.py-->line:96] - ERROR: 用例审核执行通过
2020-03-03 22:57:29,214 - [test_audit.py-->line:96] - ERROR: 用例审核执行通过
2020-03-03 22:57:29,517 - [test_audit.py-->line:96] - ERROR: 用例审核执行通过
2020-03-03 22:57:29,904 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:57:30,220 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:57:30,381 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:57:30,572 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:57:30,748 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:57:30,900 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:57:31,046 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:57:31,262 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:57:31,442 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:57:31,612 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:57:31,813 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 22:57:32,131 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-03 22:57:32,131 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 22:57:32,314 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-03 22:57:32,314 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:57:32,483 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-03 22:57:32,799 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-03 22:57:33,046 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-03 22:57:33,505 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-03 22:57:33,864 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-03 22:57:34,225 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-03 22:57:34,586 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-03 22:57:34,781 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-03 22:57:34,933 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-03 22:57:35,180 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:57:35,180 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:57:35,393 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-03 22:57:35,603 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-03 22:57:35,603 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:57:35,822 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-03 22:57:35,822 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:57:35,996 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-03 22:57:35,996 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 22:57:36,242 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-03 22:57:36,436 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-03 22:57:36,436 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 22:57:36,592 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-03 22:57:36,926 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-03 22:57:37,360 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-03 22:57:37,567 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-03 22:57:37,715 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-03 22:57:37,906 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-03 22:57:38,183 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-03 22:57:38,502 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-03 22:57:38,693 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-03 22:57:38,939 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-03 22:57:39,136 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-03 22:57:39,338 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-03 22:57:39,505 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-03 22:57:39,773 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-03 22:57:40,234 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-03 22:57:40,629 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-03 22:57:40,960 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-03 22:57:41,372 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-03 22:57:41,551 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-03 22:57:41,551 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-03 22:57:41,727 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-03 22:57:41,727 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-03 22:57:41,905 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 22:57:41,905 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:57:42,078 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-03 22:57:42,079 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 22:57:42,317 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-03 22:57:42,317 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 22:57:42,502 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-03 22:57:42,502 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:57:42,679 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-03 22:57:42,679 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-03 22:57:42,887 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-03 22:57:43,125 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-03 22:57:43,125 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 22:57:43,317 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-03 22:57:43,317 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 23:35:53,139 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-03 23:35:53,534 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-03 23:35:53,800 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-03 23:35:54,052 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-03 23:35:54,295 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-03 23:35:54,673 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 23:35:54,974 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 23:35:55,279 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 23:35:55,508 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 23:35:55,730 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 23:35:55,979 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 23:35:56,162 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 23:35:56,316 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 23:35:56,490 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 23:35:56,729 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 23:35:56,882 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-03 23:35:57,180 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-03 23:35:57,180 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 23:35:57,364 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-03 23:35:57,365 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 23:35:57,626 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-03 23:35:57,830 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-03 23:35:58,071 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-03 23:35:58,794 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-03 23:35:59,197 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-03 23:35:59,538 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-03 23:35:59,954 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-03 23:36:00,158 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-03 23:36:00,314 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-03 23:36:00,530 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 23:36:00,531 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 23:36:00,755 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-03 23:36:00,951 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-03 23:36:00,952 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 23:36:01,194 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-03 23:36:01,194 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 23:36:01,422 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-03 23:36:01,422 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 23:36:01,710 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-03 23:36:01,914 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-03 23:36:01,914 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 23:36:02,135 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-03 23:36:02,422 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-03 23:36:02,696 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-03 23:36:02,871 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-03 23:36:03,057 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-03 23:36:03,265 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-03 23:36:03,460 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-03 23:36:03,679 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-03 23:36:03,875 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-03 23:36:04,085 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-03 23:36:04,293 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-03 23:36:04,476 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-03 23:36:04,646 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-03 23:36:04,913 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-03 23:36:05,320 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-03 23:36:05,700 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-03 23:36:06,052 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-03 23:36:06,405 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-03 23:36:06,753 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-03 23:36:06,753 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-03 23:36:06,989 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-03 23:36:06,990 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-03 23:36:07,223 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-03 23:36:07,223 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 23:36:07,476 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-03 23:36:07,476 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-03 23:36:07,673 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-03 23:36:07,673 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 23:36:07,859 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-03 23:36:07,860 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 23:36:08,024 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-03 23:36:08,024 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-03 23:36:08,210 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-03 23:36:08,468 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-03 23:36:08,469 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 23:36:08,709 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-03 23:36:08,709 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 00:02:29,689 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 00:02:30,066 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:02:30,322 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:02:30,620 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:02:30,855 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:02:31,102 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 00:02:31,378 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 00:02:31,746 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:02:32,085 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:02:32,372 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:02:32,552 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:02:32,787 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:02:32,979 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:02:33,226 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:02:33,479 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:02:33,713 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:02:33,941 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:02:34,141 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:02:34,436 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 00:02:34,436 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 00:02:34,598 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 00:02:34,598 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 00:02:34,772 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 00:02:35,000 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 00:02:35,220 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 00:02:35,612 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 00:02:35,979 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 00:02:36,332 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 00:02:36,696 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 00:02:36,855 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 00:02:37,094 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 00:02:37,330 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 00:02:37,330 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:02:37,523 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 00:02:37,693 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 00:02:37,693 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:02:37,912 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 00:02:37,912 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 00:02:38,073 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 00:02:38,074 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 00:02:38,241 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 00:02:38,436 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 00:02:38,436 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 00:02:38,598 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 00:02:38,920 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 00:02:39,213 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 00:02:39,370 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 00:02:39,530 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 00:02:39,754 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 00:02:39,910 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 00:02:40,157 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 00:02:40,333 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 00:02:40,530 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 00:02:40,714 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 00:02:40,871 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 00:02:41,085 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 00:02:41,358 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 00:02:41,798 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 00:02:42,226 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 00:02:42,594 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 00:02:42,995 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 00:02:43,166 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 00:02:43,166 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 00:02:43,355 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 00:02:43,355 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 00:02:43,567 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 00:02:43,567 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:02:43,725 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 00:02:43,725 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 00:02:43,946 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 00:02:43,947 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:02:44,150 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 00:02:44,150 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 00:02:44,319 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 00:02:44,319 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 00:02:44,479 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 00:02:44,678 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 00:02:44,678 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 00:02:44,835 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 00:02:44,836 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 00:15:42,402 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 00:15:42,723 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:15:42,984 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:15:43,223 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:15:43,564 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:15:43,813 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 00:15:44,030 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 00:15:44,263 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 00:15:44,517 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 00:15:44,734 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 00:15:44,888 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 00:15:45,092 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 00:15:45,247 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 00:15:45,454 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 00:15:45,724 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 00:15:46,141 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:15:46,446 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:15:46,634 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:15:46,841 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:15:47,003 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:15:47,166 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:15:47,352 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:15:47,540 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:15:47,712 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:15:47,945 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:15:48,106 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:15:48,348 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 00:15:48,348 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 00:15:48,542 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 00:15:48,542 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 00:15:48,714 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 00:15:48,910 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 00:15:49,097 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 00:15:49,533 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 00:15:49,918 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 00:15:50,314 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 00:15:50,699 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 00:15:50,860 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 00:15:51,067 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 00:15:51,301 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 00:15:51,301 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:15:51,462 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 00:15:51,707 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 00:15:51,707 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:15:51,957 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 00:15:51,957 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 00:15:52,135 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 00:15:52,135 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 00:15:52,304 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 00:15:52,502 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 00:15:52,502 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 00:15:52,721 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 00:15:53,111 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 00:15:53,439 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 00:15:53,703 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 00:15:53,935 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 00:15:54,222 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 00:15:54,477 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 00:15:54,786 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 00:15:54,970 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 00:15:55,159 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 00:15:55,409 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 00:15:55,749 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 00:15:56,040 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 00:15:56,355 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 00:15:56,840 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 00:15:57,196 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 00:15:57,561 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 00:15:57,904 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-50万执行未通过
2020-03-04 00:15:57,904 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-03-04 00:15:58,084 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 00:15:58,084 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 00:15:58,251 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 00:15:58,251 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 00:15:58,452 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 00:15:58,452 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:15:58,656 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 00:15:58,656 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 00:15:58,854 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 00:15:58,854 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:15:59,016 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 00:15:59,017 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 00:15:59,218 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 00:15:59,218 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 00:15:59,383 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 00:15:59,612 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 00:15:59,613 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 00:15:59,771 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 00:15:59,771 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 00:17:50,778 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 00:17:51,099 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:17:51,314 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:17:51,515 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:17:51,717 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 00:17:51,919 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 00:17:52,092 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 00:17:52,266 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 00:17:52,451 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 00:17:52,823 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 00:17:52,997 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 00:17:53,187 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 00:17:53,361 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 00:17:53,526 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 00:17:53,785 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 00:17:54,175 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:17:54,522 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:17:54,742 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:17:54,935 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:17:55,105 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:17:55,313 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:17:55,471 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:17:55,629 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:17:55,791 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:17:55,968 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:17:56,220 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 00:17:56,444 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 00:17:56,444 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 00:17:56,719 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 00:17:56,719 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 00:17:56,909 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 00:17:57,113 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 00:17:57,284 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 00:17:57,748 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 00:17:58,090 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 00:17:58,421 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 00:17:58,764 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 00:17:58,944 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 00:17:59,115 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 00:17:59,351 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 00:17:59,351 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:17:59,619 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 00:17:59,820 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 00:17:59,820 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:17:59,992 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 00:17:59,992 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 00:18:00,159 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 00:18:00,159 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 00:18:00,431 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 00:18:00,706 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 00:18:00,706 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 00:18:00,862 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 00:18:01,284 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 00:18:01,647 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 00:18:01,843 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 00:18:02,024 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 00:18:02,266 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 00:18:02,479 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 00:18:02,745 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 00:18:02,992 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 00:18:03,175 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 00:18:03,364 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 00:18:03,553 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 00:18:03,749 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 00:18:04,041 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 00:18:04,545 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 00:18:04,921 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 00:18:05,315 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 00:18:05,690 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 00:18:05,884 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 00:18:05,884 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 00:18:06,071 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 00:18:06,071 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 00:18:06,304 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 00:18:06,304 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:18:06,513 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 00:18:06,513 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 00:18:06,688 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 00:18:06,688 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 00:18:06,858 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 00:18:06,858 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 00:18:07,021 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 00:18:07,021 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 00:18:07,207 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 00:18:07,369 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 00:18:07,369 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 00:18:07,544 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 00:18:07,544 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:16:43,002 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 01:16:43,343 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:16:43,618 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:16:43,894 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:16:44,145 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:16:44,421 - [test_info.py-->line:45] - ERROR: 用例管理员执行未通过
2020-03-04 01:16:44,421 - [test_info.py-->line:46] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 38, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 01:16:44,605 - [test_info.py-->line:45] - ERROR: 用例普通用户执行未通过
2020-03-04 01:16:44,605 - [test_info.py-->line:46] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 38, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 01:16:44,809 - [test_info.py-->line:45] - ERROR: 用例无效的member_id执行未通过
2020-03-04 01:16:44,810 - [test_info.py-->line:46] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 38, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 01:16:45,099 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 01:16:45,321 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 01:16:45,495 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 01:16:45,767 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 01:16:45,999 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 01:16:46,169 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 01:16:46,351 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 01:16:46,528 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 01:16:46,712 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 01:16:46,922 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 01:16:47,322 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:16:47,579 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:16:47,751 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:16:47,976 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:16:48,166 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:16:48,394 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:16:48,573 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:16:48,755 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:16:48,929 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:16:49,140 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:16:49,317 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:16:49,567 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 01:16:49,567 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 01:16:49,742 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 01:16:49,742 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:16:49,930 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 01:16:50,183 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 01:16:50,422 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 01:16:50,884 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 01:16:51,238 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 01:16:51,629 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 01:16:52,023 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 01:16:52,224 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 01:16:52,420 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 01:16:52,664 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:16:52,664 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:16:52,844 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 01:16:53,083 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 01:16:53,083 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:16:53,305 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 01:16:53,305 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:16:53,508 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 01:16:53,508 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:16:53,713 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 01:16:53,911 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 01:16:53,911 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:16:54,106 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 01:16:54,445 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 01:16:54,766 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 01:16:54,965 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 01:16:55,166 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 01:16:55,366 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 01:16:55,553 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 01:16:55,765 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 01:16:55,951 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 01:16:56,185 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 01:16:56,382 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 01:16:56,577 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 01:16:56,777 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 01:16:57,083 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 01:16:57,560 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 01:16:57,975 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 01:16:58,428 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 01:16:58,785 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 01:16:59,032 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 01:16:59,032 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 01:16:59,228 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 01:16:59,228 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 01:16:59,442 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:16:59,442 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:16:59,627 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 01:16:59,627 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:16:59,812 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 01:16:59,812 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:17:00,017 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 01:17:00,017 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:17:00,242 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 01:17:00,243 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 01:17:00,426 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 01:17:00,609 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 01:17:00,609 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:17:00,852 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 01:17:00,852 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:23:42,692 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 01:23:43,075 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:23:43,358 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:23:43,584 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:23:43,799 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:23:44,100 - [test_info.py-->line:65] - ERROR: 用例管理员执行未通过
2020-03-04 01:23:44,100 - [test_info.py-->line:66] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 58, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 01:23:44,302 - [test_info.py-->line:65] - ERROR: 用例普通用户执行未通过
2020-03-04 01:23:44,303 - [test_info.py-->line:66] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 58, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 01:23:44,478 - [test_info.py-->line:65] - ERROR: 用例无效的member_id执行未通过
2020-03-04 01:23:44,478 - [test_info.py-->line:66] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 58, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 01:23:44,706 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 01:23:45,021 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 01:23:45,217 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 01:23:45,398 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 01:23:45,661 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 01:23:45,874 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 01:23:46,057 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 01:23:46,232 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 01:23:46,416 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 01:23:46,660 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 01:23:47,065 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:23:47,415 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:23:47,646 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:23:47,869 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:23:48,126 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:23:48,438 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:23:48,755 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:23:49,105 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:23:49,334 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:23:49,680 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:23:49,866 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:23:50,112 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 01:23:50,112 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 01:23:50,318 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 01:23:50,318 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:23:50,566 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 01:23:50,780 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 01:23:50,979 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 01:23:51,487 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 01:23:51,985 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 01:23:52,367 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 01:23:52,820 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 01:23:53,024 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 01:23:53,207 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 01:23:53,452 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:23:53,452 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:23:53,670 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 01:23:53,898 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 01:23:53,899 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:23:54,070 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 01:23:54,070 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:23:54,304 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 01:23:54,304 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:23:54,519 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 01:23:54,705 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 01:23:54,705 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:23:54,887 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 01:23:55,270 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 01:23:55,551 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 01:23:55,725 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 01:23:55,930 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 01:23:56,181 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 01:23:56,369 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 01:23:56,586 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 01:23:56,851 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 01:23:57,078 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 01:23:57,371 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 01:23:57,647 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 01:23:57,877 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 01:23:58,337 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 01:23:58,971 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 01:23:59,425 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 01:23:59,784 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 01:24:00,157 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 01:24:00,395 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 01:24:00,395 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 01:24:00,582 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 01:24:00,582 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 01:24:00,843 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:24:00,843 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:24:01,012 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 01:24:01,013 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:24:01,208 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 01:24:01,208 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:24:01,383 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 01:24:01,384 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:24:01,570 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 01:24:01,570 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 01:24:01,844 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 01:24:02,061 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 01:24:02,061 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:24:02,314 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 01:24:02,314 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:25:21,993 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 01:25:22,383 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:25:22,647 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:25:22,869 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:25:23,138 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:25:23,495 - [test_info.py-->line:75] - ERROR: 用例管理员执行通过
2020-03-04 01:25:23,715 - [test_info.py-->line:68] - ERROR: 用例普通用户执行未通过
2020-03-04 01:25:23,715 - [test_info.py-->line:69] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 59, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-03-04 01:25:23,986 - [test_info.py-->line:68] - ERROR: 用例无效的member_id执行未通过
2020-03-04 01:25:23,986 - [test_info.py-->line:69] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 59, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-03-04 01:25:24,251 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 01:25:24,459 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 01:25:24,692 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 01:25:24,956 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 01:25:25,233 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 01:25:25,441 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 01:25:25,614 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 01:25:25,793 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 01:25:25,999 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 01:25:26,258 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 01:25:26,666 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:25:26,985 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:25:27,187 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:25:27,380 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:25:27,565 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:25:27,740 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:25:27,995 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:25:28,176 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:25:28,362 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:25:28,682 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:25:28,865 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:25:29,167 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 01:25:29,167 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 01:25:29,338 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 01:25:29,338 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:25:29,561 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 01:25:29,810 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 01:25:30,091 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 01:25:30,581 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 01:25:31,019 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 01:25:31,466 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 01:25:31,875 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 01:25:32,163 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 01:25:32,344 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 01:25:32,580 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:25:32,580 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:25:32,765 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 01:25:32,988 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 01:25:32,988 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:25:33,204 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 01:25:33,204 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:25:33,381 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 01:25:33,381 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:25:33,629 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 01:25:33,814 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 01:25:33,814 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:25:33,985 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 01:25:34,325 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 01:25:34,620 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 01:25:34,822 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 01:25:34,992 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 01:25:35,214 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 01:25:35,383 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 01:25:35,649 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 01:25:35,842 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 01:25:36,009 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 01:25:36,300 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 01:25:36,485 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 01:25:36,681 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 01:25:37,046 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 01:25:37,521 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 01:25:37,929 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 01:25:38,351 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 01:25:38,748 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 01:25:38,965 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 01:25:38,965 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 01:25:39,144 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 01:25:39,144 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 01:25:39,334 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:25:39,334 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:25:39,506 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 01:25:39,506 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:25:39,688 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 01:25:39,688 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:25:39,901 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 01:25:39,901 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:25:40,072 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 01:25:40,073 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 01:25:40,286 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 01:25:40,462 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 01:25:40,462 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:25:40,700 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 01:25:40,700 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:37:26,797 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 01:37:27,141 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:37:27,484 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:37:27,809 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:37:28,072 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:37:28,442 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 01:37:28,655 - [test_info.py-->line:66] - ERROR: 用例普通用户执行未通过
2020-03-04 01:37:28,655 - [test_info.py-->line:67] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 59, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-03-04 01:37:28,979 - [test_info.py-->line:66] - ERROR: 用例无效的member_id执行未通过
2020-03-04 01:37:28,979 - [test_info.py-->line:67] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 59, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-03-04 01:37:29,229 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 01:37:29,447 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 01:37:29,672 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 01:37:29,921 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 01:37:30,265 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 01:37:30,433 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 01:37:30,718 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 01:37:30,911 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 01:37:31,124 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 01:37:31,398 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 01:37:31,819 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:37:32,155 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:37:32,346 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:37:32,548 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:37:32,720 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:37:32,953 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:37:33,203 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:37:33,380 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:37:33,582 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:37:33,907 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:37:34,168 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:37:34,430 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 01:37:34,430 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 01:37:34,616 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 01:37:34,616 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:37:34,815 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 01:37:35,063 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 01:37:35,258 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 01:37:35,806 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 01:37:36,376 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 01:37:36,889 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 01:37:37,293 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 01:37:37,477 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 01:37:37,686 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 01:37:38,013 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:37:38,013 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:37:38,219 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 01:37:38,439 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 01:37:38,439 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:37:38,769 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 01:37:38,769 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:37:38,979 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 01:37:38,979 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:37:39,164 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 01:37:39,505 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 01:37:39,505 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:37:39,748 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 01:37:40,155 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 01:37:40,514 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 01:37:40,781 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 01:37:41,027 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 01:37:41,258 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 01:37:41,455 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 01:37:41,643 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 01:37:41,812 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 01:37:42,053 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 01:37:42,250 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 01:37:42,449 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 01:37:42,662 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 01:37:43,016 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 01:37:43,475 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 01:37:43,883 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 01:37:44,267 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 01:37:44,694 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 01:37:44,882 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 01:37:44,882 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 01:37:45,061 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 01:37:45,061 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 01:37:45,314 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:37:45,314 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:37:45,485 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 01:37:45,485 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:37:45,707 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 01:37:45,707 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:37:45,942 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 01:37:45,942 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:37:46,158 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 01:37:46,158 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 01:37:46,360 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 01:37:46,533 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 01:37:46,533 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:37:46,712 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 01:37:46,712 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:38:40,220 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 01:38:40,546 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:38:40,836 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:38:41,126 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:38:41,503 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:38:41,791 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 01:38:42,031 - [test_info.py-->line:66] - ERROR: 用例普通用户执行未通过
2020-03-04 01:38:42,031 - [test_info.py-->line:67] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 59, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-03-04 01:38:42,336 - [test_info.py-->line:66] - ERROR: 用例无效的member_id执行未通过
2020-03-04 01:38:42,336 - [test_info.py-->line:67] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "D:\apitest\testcases\test_info.py", line 59, in test_info
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-03-04 01:38:42,635 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 01:38:42,857 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 01:38:43,142 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 01:38:43,501 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 01:38:43,766 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 01:38:43,956 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 01:38:44,157 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 01:38:44,324 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 01:38:44,584 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 01:38:44,875 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 01:38:45,371 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:38:45,701 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:38:46,058 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:38:46,287 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:38:46,535 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:38:46,706 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:38:46,898 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:38:47,134 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:38:47,311 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:38:47,552 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:38:47,743 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:38:48,001 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 01:38:48,001 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 01:38:48,222 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 01:38:48,222 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:38:48,405 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 01:38:48,709 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 01:38:48,998 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 01:38:49,556 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 01:38:50,004 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 01:38:50,383 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 01:38:50,762 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 01:38:50,930 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 01:38:51,151 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 01:38:51,375 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:38:51,376 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:38:51,709 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 01:38:51,986 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 01:38:51,986 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:38:52,175 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 01:38:52,175 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:38:52,350 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 01:38:52,350 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:38:52,515 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 01:38:52,729 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 01:38:52,729 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:38:52,925 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 01:38:53,301 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 01:38:53,689 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 01:38:53,988 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 01:38:54,263 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 01:38:54,452 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 01:38:54,641 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 01:38:54,867 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 01:38:55,035 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 01:38:55,278 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 01:38:55,504 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 01:38:55,715 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 01:38:55,896 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 01:38:56,200 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 01:38:56,646 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 01:38:57,067 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 01:38:57,467 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 01:38:57,890 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 01:38:58,094 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 01:38:58,094 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 01:38:58,267 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 01:38:58,267 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 01:38:58,536 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:38:58,536 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:38:58,775 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 01:38:58,775 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:38:58,953 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 01:38:58,953 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:38:59,136 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 01:38:59,136 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:38:59,388 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 01:38:59,388 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 01:38:59,635 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 01:38:59,826 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 01:38:59,826 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:39:00,012 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 01:39:00,012 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:41:47,183 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 01:41:47,537 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:41:47,845 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:41:48,089 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:41:48,384 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:41:48,706 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 01:41:48,980 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 01:41:49,198 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 01:41:49,439 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 01:41:49,653 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 01:41:49,968 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 01:41:50,232 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 01:41:50,484 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 01:41:50,656 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 01:41:50,869 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 01:41:51,093 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 01:41:51,551 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:41:51,846 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:41:52,010 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:41:52,207 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:41:52,394 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:41:52,566 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:41:52,771 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:41:52,944 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:41:53,198 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:41:53,390 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:41:53,571 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:41:53,922 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 01:41:53,922 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 01:41:54,208 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 01:41:54,208 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:41:54,512 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 01:41:54,760 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 01:41:55,015 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 01:41:55,492 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 01:41:55,905 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 01:41:56,340 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 01:41:56,771 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 01:41:56,985 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 01:41:57,252 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 01:41:57,531 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:41:57,531 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:41:57,739 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 01:41:57,923 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 01:41:57,923 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:41:58,104 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 01:41:58,104 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:41:58,358 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 01:41:58,358 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:41:58,530 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 01:41:58,733 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 01:41:58,733 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:41:58,939 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 01:41:59,247 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 01:41:59,652 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 01:41:59,850 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 01:42:00,027 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 01:42:00,199 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 01:42:00,395 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 01:42:00,651 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 01:42:00,832 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 01:42:01,065 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 01:42:01,436 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 01:42:01,654 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 01:42:01,844 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 01:42:02,183 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 01:42:02,783 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 01:42:03,352 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 01:42:03,755 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 01:42:04,165 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 01:42:04,383 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 01:42:04,384 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 01:42:04,592 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 01:42:04,592 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 01:42:04,805 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:42:04,805 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:42:04,977 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 01:42:04,978 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:42:05,159 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 01:42:05,159 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:42:05,355 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 01:42:05,356 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:42:05,529 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 01:42:05,529 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 01:42:05,743 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 01:42:06,000 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 01:42:06,000 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:42:06,170 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 01:42:06,170 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:44:11,768 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 01:44:12,153 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:44:12,461 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:44:12,778 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:44:13,066 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:44:13,355 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 01:44:13,628 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 01:44:13,958 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 01:44:14,193 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 01:44:14,522 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 01:44:14,844 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 01:44:15,019 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 01:44:15,263 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 01:44:15,458 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 01:44:15,696 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 01:44:15,984 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 01:44:16,365 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:44:16,703 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:44:16,958 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:44:17,170 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:44:17,475 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:44:17,727 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:44:17,932 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:44:18,096 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:44:18,326 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:44:18,533 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:44:18,734 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:44:19,015 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 01:44:19,015 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 01:44:19,196 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 01:44:19,196 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:44:19,380 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 01:44:19,669 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 01:44:19,873 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 01:44:20,454 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 01:44:20,852 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 01:44:21,193 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 01:44:21,675 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 01:44:21,892 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 01:44:22,055 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 01:44:22,267 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:44:22,267 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:44:22,463 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 01:44:22,675 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 01:44:22,675 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:44:22,844 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 01:44:22,844 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:44:23,099 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 01:44:23,099 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:44:23,282 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 01:44:23,480 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 01:44:23,481 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:44:23,679 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 01:44:24,016 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 01:44:24,311 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 01:44:24,475 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 01:44:24,656 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 01:44:24,837 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 01:44:25,042 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 01:44:25,235 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 01:44:25,400 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 01:44:25,629 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 01:44:25,843 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 01:44:26,205 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 01:44:26,439 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 01:44:26,802 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 01:44:27,309 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 01:44:27,731 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 01:44:28,131 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 01:44:28,568 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 01:44:28,747 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 01:44:28,747 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 01:44:28,952 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 01:44:28,952 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 01:44:29,247 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:44:29,248 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:44:29,420 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 01:44:29,420 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:44:29,645 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 01:44:29,645 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:44:29,840 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 01:44:29,840 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:44:30,018 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 01:44:30,019 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 01:44:30,219 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 01:44:30,464 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 01:44:30,464 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:44:30,756 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 01:44:30,756 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:52:10,703 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 01:52:11,034 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:52:11,341 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:52:11,632 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:52:11,931 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:52:12,202 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 01:52:12,519 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 01:52:12,775 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 01:52:12,979 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 01:52:13,156 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 01:52:13,379 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 01:52:13,582 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 01:52:13,757 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 01:52:13,995 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 01:52:14,204 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 01:52:14,409 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 01:52:14,827 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:52:15,127 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:52:15,417 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:52:15,634 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:52:15,912 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:52:16,111 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:52:16,285 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:52:16,478 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:52:16,736 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:52:17,023 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:52:17,276 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:52:17,539 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 01:52:17,539 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 01:52:17,786 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 01:52:17,787 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:52:18,034 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 01:52:18,253 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 01:52:18,604 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 01:52:19,062 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 01:52:19,476 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 01:52:19,910 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 01:52:20,421 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 01:52:20,639 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 01:52:20,811 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 01:52:21,001 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:52:21,001 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:52:21,170 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 01:52:21,396 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 01:52:21,396 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:52:21,656 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 01:52:21,656 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:52:21,831 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 01:52:21,831 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:52:22,014 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 01:52:22,190 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 01:52:22,190 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:52:22,415 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 01:52:22,785 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 01:52:23,122 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 01:52:23,342 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 01:52:23,526 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 01:52:23,717 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 01:52:23,964 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 01:52:24,191 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 01:52:24,402 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 01:52:24,723 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 01:52:24,939 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 01:52:25,115 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 01:52:25,312 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 01:52:25,652 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 01:52:26,008 - [test_update.py-->line:74] - ERROR: 用例审核通过执行未通过
2020-03-04 01:52:26,009 - [test_update.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 62, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-04 01:52:26,206 - [test_update.py-->line:74] - ERROR: 用例审核执行未通过
2020-03-04 01:52:26,207 - [test_update.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 62, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-04 01:52:26,455 - [test_update.py-->line:80] - ERROR: 用例审核执行通过
2020-03-04 01:52:26,640 - [test_update.py-->line:80] - ERROR: 用例审核执行通过
2020-03-04 01:52:26,817 - [test_update.py-->line:80] - ERROR: 用例审核执行通过
2020-03-04 01:52:27,292 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 01:52:27,705 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 01:52:28,102 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 01:52:28,604 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 01:52:28,824 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 01:52:28,824 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 01:52:28,999 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 01:52:28,999 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 01:52:29,251 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:52:29,251 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:52:29,417 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 01:52:29,418 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:52:29,628 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 01:52:29,628 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:52:29,832 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 01:52:29,832 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:52:30,037 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 01:52:30,037 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 01:52:30,255 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 01:52:30,493 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 01:52:30,493 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:52:30,725 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 01:52:30,725 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:54:42,396 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 01:54:42,784 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:54:43,047 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:54:43,375 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:54:43,714 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:54:44,065 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 01:54:44,347 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 01:54:44,604 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 01:54:44,858 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 01:54:45,147 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 01:54:45,397 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 01:54:45,663 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 01:54:45,876 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 01:54:46,110 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 01:54:46,397 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 01:54:46,668 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 01:54:47,076 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:54:47,459 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:54:47,687 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:54:47,928 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:54:48,135 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:54:48,307 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:54:48,552 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:54:48,771 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:54:48,960 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:54:49,135 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:54:49,303 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:54:49,675 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 01:54:49,676 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 01:54:49,883 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 01:54:49,883 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:54:50,133 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 01:54:50,350 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 01:54:50,595 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 01:54:51,081 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 01:54:51,463 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 01:54:51,863 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 01:54:52,262 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 01:54:52,434 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 01:54:52,600 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 01:54:52,946 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:54:52,946 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:54:53,138 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 01:54:53,370 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 01:54:53,371 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:54:53,582 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 01:54:53,582 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:54:53,753 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 01:54:53,753 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:54:53,933 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 01:54:54,140 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 01:54:54,141 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:54:54,313 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 01:54:54,610 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 01:54:54,894 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 01:54:55,062 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 01:54:55,262 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 01:54:55,434 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 01:54:55,660 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 01:54:55,867 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 01:54:56,077 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 01:54:56,268 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 01:54:56,439 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 01:54:56,649 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 01:54:56,834 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 01:54:57,119 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 01:54:57,502 - [test_update.py-->line:74] - ERROR: 用例审核通过执行未通过
2020-03-04 01:54:57,502 - [test_update.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 62, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-04 01:54:57,683 - [test_update.py-->line:74] - ERROR: 用例审核执行未通过
2020-03-04 01:54:57,683 - [test_update.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 62, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-04 01:54:57,860 - [test_update.py-->line:80] - ERROR: 用例审核执行通过
2020-03-04 01:54:58,079 - [test_update.py-->line:80] - ERROR: 用例审核执行通过
2020-03-04 01:54:58,277 - [test_update.py-->line:80] - ERROR: 用例审核执行通过
2020-03-04 01:54:58,792 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 01:54:59,150 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 01:54:59,549 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 01:54:59,915 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 01:55:00,134 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 01:55:00,135 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 01:55:00,337 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 01:55:00,337 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 01:55:00,545 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:55:00,545 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:55:00,805 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 01:55:00,805 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:55:01,001 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 01:55:01,002 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:55:01,182 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 01:55:01,182 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:55:01,402 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 01:55:01,403 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 01:55:01,592 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 01:55:01,781 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 01:55:01,781 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:55:01,988 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 01:55:01,989 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:57:21,282 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 01:57:21,696 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:57:21,945 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:57:22,219 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:57:22,477 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:57:22,814 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 01:57:23,131 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 01:57:23,321 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 01:57:23,534 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 01:57:23,813 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 01:57:24,017 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 01:57:24,188 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 01:57:24,423 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 01:57:24,593 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 01:57:24,819 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 01:57:25,179 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 01:57:25,582 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:57:25,873 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:57:26,085 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:57:26,321 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:57:26,577 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:57:26,763 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:57:26,945 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:57:27,114 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:57:27,317 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:57:27,577 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:57:27,786 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:57:28,099 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 01:57:28,099 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 01:57:28,305 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 01:57:28,305 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:57:28,495 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 01:57:28,682 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 01:57:28,856 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 01:57:29,452 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 01:57:29,875 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 01:57:30,357 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 01:57:30,771 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 01:57:30,948 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 01:57:31,121 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 01:57:31,366 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:57:31,367 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:57:31,582 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 01:57:31,768 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 01:57:31,768 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:57:32,007 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 01:57:32,007 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:57:32,220 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 01:57:32,220 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:57:32,402 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 01:57:32,585 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 01:57:32,585 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:57:32,871 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 01:57:33,240 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 01:57:33,607 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 01:57:33,817 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 01:57:34,049 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 01:57:34,221 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 01:57:34,454 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 01:57:34,693 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 01:57:34,919 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 01:57:35,106 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 01:57:35,276 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 01:57:35,489 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 01:57:35,688 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 01:57:36,009 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 01:57:36,312 - [test_update.py-->line:67] - ERROR: 用例审核通过执行未通过
2020-03-04 01:57:36,312 - [test_update.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 60, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-04 01:57:36,593 - [test_update.py-->line:67] - ERROR: 用例审核执行未通过
2020-03-04 01:57:36,594 - [test_update.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 60, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-04 01:57:36,771 - [test_update.py-->line:73] - ERROR: 用例审核执行通过
2020-03-04 01:57:36,952 - [test_update.py-->line:73] - ERROR: 用例审核执行通过
2020-03-04 01:57:37,123 - [test_update.py-->line:73] - ERROR: 用例审核执行通过
2020-03-04 01:57:37,651 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 01:57:37,986 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 01:57:38,363 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 01:57:38,739 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 01:57:38,927 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 01:57:38,927 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 01:57:39,178 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 01:57:39,178 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 01:57:39,406 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:57:39,406 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:57:39,829 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 01:57:39,829 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:57:40,200 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 01:57:40,200 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:57:40,398 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 01:57:40,399 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:57:40,582 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 01:57:40,582 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 01:57:40,755 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 01:57:40,980 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 01:57:40,981 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:57:41,158 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 01:57:41,158 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:59:03,342 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 01:59:03,761 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:59:04,001 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:59:04,346 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:59:04,616 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 01:59:04,930 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 01:59:05,200 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 01:59:05,449 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 01:59:05,677 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 01:59:05,899 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 01:59:06,147 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 01:59:06,329 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 01:59:06,583 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 01:59:06,838 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 01:59:07,011 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 01:59:07,240 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 01:59:07,737 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:59:08,095 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:59:08,286 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:59:08,461 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:59:08,654 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:59:08,877 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:59:09,048 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:59:09,317 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:59:09,524 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:59:09,758 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:59:09,966 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 01:59:10,302 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 01:59:10,302 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 01:59:10,479 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 01:59:10,479 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:59:10,742 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 01:59:10,972 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 01:59:11,141 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 01:59:11,614 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 01:59:12,000 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 01:59:12,446 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 01:59:12,907 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 01:59:13,153 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 01:59:13,420 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 01:59:13,725 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:59:13,725 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:59:13,938 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 01:59:14,148 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 01:59:14,148 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:59:14,437 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 01:59:14,437 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:59:14,608 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 01:59:14,608 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 01:59:14,796 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 01:59:15,009 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 01:59:15,009 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 01:59:15,249 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 01:59:15,596 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 01:59:15,913 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 01:59:16,107 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 01:59:16,318 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 01:59:16,500 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 01:59:16,677 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 01:59:16,891 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 01:59:17,121 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 01:59:17,322 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 01:59:17,553 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 01:59:17,773 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 01:59:18,040 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 01:59:18,400 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 01:59:19,069 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 01:59:19,458 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 01:59:19,854 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 01:59:20,236 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 01:59:20,469 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 01:59:20,469 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 01:59:20,727 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 01:59:20,727 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 01:59:20,932 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 01:59:20,932 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:59:21,110 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 01:59:21,110 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 01:59:21,344 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 01:59:21,345 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 01:59:21,514 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 01:59:21,515 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:59:21,696 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 01:59:21,696 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 01:59:21,866 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 01:59:22,084 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 01:59:22,085 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 01:59:22,253 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 01:59:22,253 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:00:58,946 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 02:00:59,430 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:00:59,787 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:01:00,103 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:01:00,443 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:01:00,794 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 02:01:01,122 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 02:01:01,432 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 02:01:01,634 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 02:01:01,979 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 02:01:02,239 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 02:01:02,492 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 02:01:02,680 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 02:01:02,962 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 02:01:03,151 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 02:01:03,397 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 02:01:03,805 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:01:04,161 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:01:04,419 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:01:04,715 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:01:04,911 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:01:05,087 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:01:05,373 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:01:05,586 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:01:05,785 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:01:05,959 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:01:06,180 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:01:06,504 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 02:01:06,504 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 02:01:06,679 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 02:01:06,679 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:01:06,877 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 02:01:07,137 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 02:01:07,320 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 02:01:07,775 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 02:01:08,217 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 02:01:08,628 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 02:01:08,994 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 02:01:09,162 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 02:01:09,361 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 02:01:09,609 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:01:09,609 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:01:09,822 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 02:01:10,014 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 02:01:10,014 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:01:10,231 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 02:01:10,231 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 02:01:10,395 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 02:01:10,395 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:01:10,616 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 02:01:10,815 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 02:01:10,815 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 02:01:11,010 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 02:01:11,376 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 02:01:11,681 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 02:01:11,886 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 02:01:12,091 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 02:01:12,260 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 02:01:12,473 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 02:01:12,649 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 02:01:12,841 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 02:01:13,011 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 02:01:13,181 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 02:01:13,408 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 02:01:13,576 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 02:01:13,865 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 02:01:14,171 - [test_update.py-->line:67] - ERROR: 用例更新会员信息执行未通过
2020-03-04 02:01:14,171 - [test_update.py-->line:68] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 60, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-03-04 02:01:14,654 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 02:01:14,997 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 02:01:15,455 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 02:01:15,860 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 02:01:16,063 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 02:01:16,064 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 02:01:16,420 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 02:01:16,420 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 02:01:16,765 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:01:16,765 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:01:16,954 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 02:01:16,954 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:01:17,137 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 02:01:17,138 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:01:17,400 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 02:01:17,400 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 02:01:17,617 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 02:01:17,618 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 02:01:17,796 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 02:01:18,075 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 02:01:18,075 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 02:01:18,273 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 02:01:18,273 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:04:27,219 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 02:04:27,588 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:04:27,815 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:04:28,084 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:04:28,367 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:04:28,625 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 02:04:28,907 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 02:04:29,093 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 02:04:29,276 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 02:04:29,468 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 02:04:29,715 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 02:04:29,952 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 02:04:30,190 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 02:04:30,440 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 02:04:30,620 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 02:04:30,842 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 02:04:31,268 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:04:31,591 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:04:31,762 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:04:31,939 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:04:32,167 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:04:32,454 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:04:32,625 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:04:32,845 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:04:33,019 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:04:33,281 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:04:33,468 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:04:33,816 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 02:04:33,816 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 02:04:34,007 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 02:04:34,007 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:04:34,264 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 02:04:34,478 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 02:04:34,753 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 02:04:35,327 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 02:04:35,708 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 02:04:36,092 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 02:04:36,473 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 02:04:36,649 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 02:04:36,851 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 02:04:37,036 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:04:37,037 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:04:37,211 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 02:04:37,535 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 02:04:37,535 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:04:37,774 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 02:04:37,774 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 02:04:37,955 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 02:04:37,955 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:04:38,128 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 02:04:38,296 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 02:04:38,296 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 02:04:38,502 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 02:04:38,828 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 02:04:39,143 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 02:04:39,314 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 02:04:39,491 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 02:04:39,716 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 02:04:39,923 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 02:04:40,113 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 02:04:40,287 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 02:04:40,465 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 02:04:40,648 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 02:04:40,862 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 02:04:41,038 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 02:04:41,323 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 02:04:41,661 - [test_update.py-->line:81] - ERROR: 用例更新会员信息执行未通过
2020-03-04 02:04:41,662 - [test_update.py-->line:82] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 74, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-03-04 02:04:42,086 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 02:04:42,433 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 02:04:42,846 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 02:04:43,252 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 02:04:43,438 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 02:04:43,439 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 02:04:43,627 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 02:04:43,628 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 02:04:43,865 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:04:43,865 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:04:44,076 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 02:04:44,076 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:04:44,315 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 02:04:44,315 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:04:44,486 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 02:04:44,486 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 02:04:44,657 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 02:04:44,657 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 02:04:44,929 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 02:04:45,099 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 02:04:45,099 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 02:04:45,420 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 02:04:45,420 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:07:49,904 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 02:07:50,265 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:07:50,519 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:07:50,831 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:07:51,080 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:07:51,442 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 02:07:51,720 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 02:07:51,915 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 02:07:52,123 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 02:07:52,474 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 02:07:52,697 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 02:07:52,958 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 02:07:53,175 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 02:07:53,485 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 02:07:53,679 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 02:07:53,925 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 02:07:54,293 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:07:54,603 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:07:54,803 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:07:54,979 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:07:55,152 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:07:55,324 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:07:55,540 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:07:55,758 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:07:56,015 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:07:56,206 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:07:56,472 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:07:56,746 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 02:07:56,746 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 02:07:56,969 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 02:07:56,969 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:07:57,174 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 02:07:57,355 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 02:07:57,521 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 02:07:57,994 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 02:07:58,452 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 02:07:58,849 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 02:07:59,227 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 02:07:59,465 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 02:07:59,631 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 02:07:59,836 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:07:59,836 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:08:00,057 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 02:08:00,239 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 02:08:00,239 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:08:00,458 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 02:08:00,458 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 02:08:00,655 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 02:08:00,655 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:08:00,846 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 02:08:01,074 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 02:08:01,074 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 02:08:01,246 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 02:08:01,571 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 02:08:01,924 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 02:08:02,233 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 02:08:02,465 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 02:08:02,670 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 02:08:02,863 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 02:08:03,080 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 02:08:03,384 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 02:08:03,579 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 02:08:03,788 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 02:08:04,096 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 02:08:04,364 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 02:08:04,753 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 02:08:05,201 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:08:05,673 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 02:08:06,086 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 02:08:06,503 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 02:08:06,950 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 02:08:07,203 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 02:08:07,203 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 02:08:07,370 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 02:08:07,370 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 02:08:07,586 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:08:07,587 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:08:07,755 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 02:08:07,756 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:08:07,971 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 02:08:07,971 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:08:08,197 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 02:08:08,197 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 02:08:08,456 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 02:08:08,456 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 02:08:08,620 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 02:08:08,829 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 02:08:08,829 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 02:08:09,023 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 02:08:09,023 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:14:27,482 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 02:14:27,869 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:14:28,117 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:14:28,427 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:14:28,776 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:14:29,052 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 02:14:29,325 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 02:14:29,546 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 02:14:29,757 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 02:14:29,988 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 02:14:30,365 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 02:14:30,602 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 02:14:30,818 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 02:14:31,049 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 02:14:31,257 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 02:14:31,521 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 02:14:31,914 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:14:32,284 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:14:32,502 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:14:32,763 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:14:32,939 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:14:33,110 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:14:33,283 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:14:33,543 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:14:33,731 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:14:33,972 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:14:34,148 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:14:34,394 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 02:14:34,394 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 02:14:34,628 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 02:14:34,628 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:14:34,841 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 02:14:35,052 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 02:14:35,257 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 02:14:35,679 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-04 02:14:36,257 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 02:14:36,662 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 02:14:37,039 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 02:14:37,528 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 02:14:37,722 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 02:14:37,975 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 02:14:38,163 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:14:38,163 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:14:38,383 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 02:14:38,761 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 02:14:38,762 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:14:38,953 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 02:14:38,953 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 02:14:39,313 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 02:14:39,313 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:14:39,569 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 02:14:39,741 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 02:14:39,741 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 02:14:40,079 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 02:14:40,492 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 02:14:40,832 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 02:14:41,058 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 02:14:41,347 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 02:14:41,585 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 02:14:41,786 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 02:14:42,043 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 02:14:42,342 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 02:14:42,575 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 02:14:42,849 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 02:14:43,102 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 02:14:43,296 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 02:14:43,590 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 02:14:44,019 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:14:44,240 - [test_update.py-->line:81] - ERROR: 用例更新会员信息执行未通过
2020-03-04 02:14:44,241 - [test_update.py-->line:82] - ERROR: '昵称大于十位' != '用户昵称长度超过10位'
- 昵称大于十位
+ 用户昵称长度超过10位
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 75, in test_update
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '昵称大于十位' != '用户昵称长度超过10位'
- 昵称大于十位
+ 用户昵称长度超过10位

2020-03-04 02:14:44,735 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 02:14:45,110 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 02:14:45,515 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 02:14:45,889 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 02:14:46,117 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 02:14:46,117 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 02:14:46,328 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 02:14:46,328 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 02:14:46,513 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:14:46,514 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:14:46,807 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 02:14:46,807 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:14:47,076 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 02:14:47,076 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:14:47,299 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 02:14:47,299 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 02:14:47,473 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 02:14:47,473 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 02:14:47,719 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 02:14:47,941 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 02:14:47,941 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 02:14:48,138 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 02:14:48,139 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:22:27,645 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 02:22:27,990 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:22:28,252 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:22:28,527 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:22:28,877 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:22:29,191 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 02:22:29,484 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 02:22:29,684 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 02:22:29,925 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 02:22:30,175 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 02:22:30,516 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 02:22:30,740 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 02:22:30,947 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 02:22:31,212 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 02:22:31,459 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 02:22:31,731 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 02:22:32,137 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:22:32,465 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:22:32,687 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:22:32,861 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:22:33,107 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:22:33,308 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:22:33,567 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:22:33,749 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:22:33,951 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:22:34,178 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:22:34,389 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:22:34,679 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 02:22:34,680 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 02:22:34,856 - [test_login.py-->line:38] - ERROR: 用例密码为空执行未通过
2020-03-04 02:22:34,856 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:22:35,077 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 02:22:35,371 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 02:22:35,546 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 02:22:35,890 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-04 02:22:36,121 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-04 02:22:36,604 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 02:22:37,059 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 02:22:37,439 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 02:22:37,865 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 02:22:38,047 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 02:22:38,233 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 02:22:38,511 - [test_recharge.py-->line:81] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:22:38,511 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:22:38,727 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 02:22:38,908 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 02:22:38,908 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:22:39,107 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 02:22:39,107 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 02:22:39,320 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 02:22:39,321 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:22:39,526 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 02:22:39,738 - [test_recharge.py-->line:81] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 02:22:39,738 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 02:22:39,943 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 02:22:40,291 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 02:22:40,612 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 02:22:40,791 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 02:22:40,990 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 02:22:41,200 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 02:22:41,524 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 02:22:41,714 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 02:22:41,965 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 02:22:42,139 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 02:22:42,340 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 02:22:42,566 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 02:22:42,764 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 02:22:43,064 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 02:22:43,353 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:22:43,541 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:22:43,745 - [test_update.py-->line:81] - ERROR: 用例更新会员信息执行未通过
2020-03-04 02:22:43,745 - [test_update.py-->line:82] - ERROR: '用户ID为空' != '用户id为空'
- 用户ID为空
+ 用户id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 75, in test_update
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户ID为空' != '用户id为空'
- 用户ID为空
+ 用户id为空

2020-03-04 02:22:43,940 - [test_update.py-->line:81] - ERROR: 用例更新会员信息执行未通过
2020-03-04 02:22:43,940 - [test_update.py-->line:82] - ERROR: '用户新昵称不存在' != '用户名为空'
- 用户新昵称不存在
+ 用户名为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 75, in test_update
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户新昵称不存在' != '用户名为空'
- 用户新昵称不存在
+ 用户名为空

2020-03-04 02:22:44,413 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 02:22:44,838 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 02:22:45,240 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 02:22:45,627 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 02:22:45,848 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 02:22:45,848 - [test_withdraw.py-->line:79] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2020-03-04 02:22:46,020 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 02:22:46,020 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 02:22:46,208 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:22:46,208 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:22:46,410 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 02:22:46,410 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:22:46,614 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 02:22:46,614 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:22:46,794 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 02:22:46,795 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 02:22:46,968 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 02:22:46,968 - [test_withdraw.py-->line:79] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-04 02:22:47,163 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 02:22:47,347 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 02:22:47,347 - [test_withdraw.py-->line:79] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 02:22:47,545 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 02:22:47,545 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:32:42,677 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 02:32:43,072 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:32:43,331 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:32:43,696 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:32:44,055 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:32:44,366 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 02:32:44,682 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 02:32:44,883 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 02:32:45,060 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 02:32:45,287 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 02:32:45,552 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 02:32:45,755 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 02:32:45,947 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 02:32:46,161 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 02:32:46,364 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 02:32:46,674 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 02:32:47,079 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:32:47,411 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:32:47,645 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:32:47,820 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:32:47,998 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:32:48,178 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:32:48,356 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:32:48,524 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:32:48,803 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:32:49,041 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:32:49,269 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:32:49,581 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 02:32:49,581 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 02:32:49,882 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-03-04 02:32:49,882 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:32:50,132 - [test_login.py-->line:44] - ERROR: 用例密码为空执行通过
2020-03-04 02:32:50,425 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 02:32:50,713 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 02:32:50,932 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 02:32:51,241 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-04 02:32:51,425 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-04 02:32:51,881 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 02:32:52,303 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 02:32:52,676 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 02:32:53,064 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 02:32:53,249 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 02:32:53,465 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 02:32:53,634 - [test_recharge.py-->line:87] - ERROR: 用例会员id为字符串执行通过
2020-03-04 02:32:53,808 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 02:32:54,039 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 02:32:54,039 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:32:54,322 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 02:32:54,322 - [test_recharge.py-->line:82] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 02:32:54,510 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 02:32:54,510 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:32:54,697 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 02:32:54,901 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-大于50万执行通过
2020-03-04 02:32:55,085 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 02:32:55,435 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 02:32:55,745 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 02:32:55,914 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 02:32:56,165 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 02:32:56,368 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 02:32:56,581 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 02:32:56,761 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 02:32:56,933 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 02:32:57,098 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 02:32:57,342 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 02:32:57,564 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 02:32:57,767 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 02:32:58,071 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 02:32:58,444 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:32:58,614 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:32:58,806 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:32:58,983 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:32:59,543 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 02:33:00,070 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 02:33:00,598 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 02:33:01,126 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 02:33:01,442 - [test_withdraw.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-03-04 02:33:01,631 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 02:33:01,632 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 02:33:01,861 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:33:01,861 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:33:02,032 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 02:33:02,032 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:33:02,215 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 02:33:02,215 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:33:02,472 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额为负数执行通过
2020-03-04 02:33:02,724 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额为空执行通过
2020-03-04 02:33:02,909 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 02:33:03,084 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-大于50万执行通过
2020-03-04 02:33:03,254 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-非数字执行通过
2020-03-04 02:34:47,442 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 02:34:47,792 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:34:48,086 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:34:48,327 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:34:48,622 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 02:34:48,978 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 02:34:49,335 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 02:34:49,636 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 02:34:49,918 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 02:34:50,172 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 02:34:50,473 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 02:34:50,645 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 02:34:51,008 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 02:34:51,206 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 02:34:51,503 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 02:34:51,733 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 02:34:52,325 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:34:52,700 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:34:52,909 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:34:53,171 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:34:53,417 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:34:53,701 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:34:53,897 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:34:54,100 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:34:54,312 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:34:54,687 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:34:54,927 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 02:34:55,321 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 02:34:55,321 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 02:34:55,512 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-03-04 02:34:55,512 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:34:55,686 - [test_login.py-->line:44] - ERROR: 用例密码为空执行通过
2020-03-04 02:34:55,963 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 02:34:56,191 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 02:34:56,359 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 02:34:56,718 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-04 02:34:56,950 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-04 02:34:57,475 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行通过
2020-03-04 02:34:57,891 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 02:34:58,293 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 02:34:58,662 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行通过
2020-03-04 02:34:58,866 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行通过
2020-03-04 02:34:59,091 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 02:34:59,324 - [test_recharge.py-->line:87] - ERROR: 用例会员id为字符串执行通过
2020-03-04 02:34:59,642 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行通过
2020-03-04 02:34:59,831 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为0执行未通过
2020-03-04 02:34:59,831 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:35:00,005 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为负数执行通过
2020-03-04 02:35:00,180 - [test_recharge.py-->line:81] - ERROR: 用例充值金额为空执行未通过
2020-03-04 02:35:00,180 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 02:35:00,363 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 02:35:00,529 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-大于50万执行通过
2020-03-04 02:35:00,771 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 02:35:01,242 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 02:35:01,542 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 02:35:01,755 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 02:35:01,962 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 02:35:02,207 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 02:35:02,471 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 02:35:02,789 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 02:35:02,972 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 02:35:03,148 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 02:35:03,315 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 02:35:03,530 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 02:35:03,788 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 02:35:04,088 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 02:35:04,403 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:35:04,605 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:35:04,823 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:35:05,053 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 02:35:05,586 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 02:35:05,984 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 02:35:06,358 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 02:35:06,760 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 02:35:06,936 - [test_withdraw.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-03-04 02:35:07,119 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 02:35:07,119 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 02:35:07,348 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 02:35:07,348 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:35:07,528 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 02:35:07,529 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 02:35:07,722 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 02:35:07,722 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 02:35:07,991 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额为负数执行通过
2020-03-04 02:35:08,166 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额为空执行通过
2020-03-04 02:35:08,356 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 02:35:08,584 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-大于50万执行通过
2020-03-04 02:35:08,765 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-非数字执行通过
2020-03-04 20:39:34,674 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-整数执行通过
2020-03-04 20:39:35,051 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 20:39:35,424 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 20:39:35,821 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-50万执行通过
2020-03-04 20:39:36,030 - [test_recharge.py-->line:93] - ERROR: 用例会员id为空执行通过
2020-03-04 20:39:36,235 - [test_recharge.py-->line:93] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 20:39:36,433 - [test_recharge.py-->line:93] - ERROR: 用例会员id为字符串执行通过
2020-03-04 20:39:36,645 - [test_recharge.py-->line:93] - ERROR: 用例会员id为小数执行通过
2020-03-04 20:39:36,866 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为0执行未通过
2020-03-04 20:39:36,866 - [test_recharge.py-->line:88] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 20:39:37,086 - [test_recharge.py-->line:93] - ERROR: 用例充值金额为负数执行通过
2020-03-04 20:39:37,301 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为空执行未通过
2020-03-04 20:39:37,302 - [test_recharge.py-->line:88] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 20:39:37,496 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 20:39:37,719 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-大于50万执行通过
2020-03-04 20:39:37,983 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 20:41:59,743 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行未通过
2020-03-04 20:41:59,743 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:42:00,102 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行未通过
2020-03-04 20:42:00,102 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:42:00,480 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行未通过
2020-03-04 20:42:00,480 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:42:00,878 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行未通过
2020-03-04 20:42:00,878 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:42:01,072 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行未通过
2020-03-04 20:42:01,072 - [test_recharge.py-->line:88] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 20:42:01,278 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 20:42:01,279 - [test_recharge.py-->line:88] - ERROR: 1007 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 1003
2020-03-04 20:42:01,476 - [test_recharge.py-->line:87] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 20:42:01,476 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:42:01,689 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行未通过
2020-03-04 20:42:01,689 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:42:01,905 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为0执行未通过
2020-03-04 20:42:01,906 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:42:02,120 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 20:42:02,121 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:42:02,337 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为空执行未通过
2020-03-04 20:42:02,338 - [test_recharge.py-->line:88] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 20:42:02,586 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行未通过
2020-03-04 20:42:02,586 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:42:02,830 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 20:42:02,830 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:42:03,050 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行未通过
2020-03-04 20:42:03,050 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:44:43,295 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行未通过
2020-03-04 20:44:43,295 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:44:43,672 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行未通过
2020-03-04 20:44:43,672 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:44:44,075 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行未通过
2020-03-04 20:44:44,076 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:44:44,472 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行未通过
2020-03-04 20:44:44,472 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:44:44,672 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行未通过
2020-03-04 20:44:44,672 - [test_recharge.py-->line:88] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 20:44:44,889 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 20:44:44,889 - [test_recharge.py-->line:88] - ERROR: 1007 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 1003
2020-03-04 20:44:45,113 - [test_recharge.py-->line:87] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 20:44:45,115 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:44:45,368 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行未通过
2020-03-04 20:44:45,368 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:44:45,575 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为0执行未通过
2020-03-04 20:44:45,575 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:44:45,803 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 20:44:45,804 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:44:46,034 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为空执行未通过
2020-03-04 20:44:46,034 - [test_recharge.py-->line:88] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 20:44:46,285 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行未通过
2020-03-04 20:44:46,285 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:44:46,500 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 20:44:46,500 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:44:46,713 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行未通过
2020-03-04 20:44:46,715 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:46:16,437 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-整数执行未通过
2020-03-04 20:46:16,437 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:46:16,839 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-1位小数执行未通过
2020-03-04 20:46:16,839 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:46:17,223 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-2位小数执行未通过
2020-03-04 20:46:17,223 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:46:17,633 - [test_recharge.py-->line:87] - ERROR: 用例充值成功-50万执行未通过
2020-03-04 20:46:17,633 - [test_recharge.py-->line:88] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 20:46:17,841 - [test_recharge.py-->line:87] - ERROR: 用例会员id为空执行未通过
2020-03-04 20:46:17,841 - [test_recharge.py-->line:88] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 20:46:18,071 - [test_recharge.py-->line:87] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 20:46:18,072 - [test_recharge.py-->line:88] - ERROR: 1007 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 1003
2020-03-04 20:46:18,374 - [test_recharge.py-->line:87] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 20:46:18,374 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:46:18,578 - [test_recharge.py-->line:87] - ERROR: 用例会员id为小数执行未通过
2020-03-04 20:46:18,578 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:46:18,818 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为0执行未通过
2020-03-04 20:46:18,818 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:46:19,029 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为负数执行未通过
2020-03-04 20:46:19,029 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:46:19,467 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为空执行未通过
2020-03-04 20:46:19,467 - [test_recharge.py-->line:88] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 20:46:19,690 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-3位小数执行未通过
2020-03-04 20:46:19,690 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:46:19,924 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-大于50万执行未通过
2020-03-04 20:46:19,925 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:46:20,135 - [test_recharge.py-->line:87] - ERROR: 用例充值金额-非数字执行未通过
2020-03-04 20:46:20,135 - [test_recharge.py-->line:88] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 20:47:26,295 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-整数执行通过
2020-03-04 20:47:26,665 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 20:47:27,017 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 20:47:27,387 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-50万执行通过
2020-03-04 20:47:27,578 - [test_recharge.py-->line:93] - ERROR: 用例会员id为空执行通过
2020-03-04 20:47:27,779 - [test_recharge.py-->line:93] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 20:47:27,983 - [test_recharge.py-->line:93] - ERROR: 用例会员id为字符串执行通过
2020-03-04 20:47:28,171 - [test_recharge.py-->line:93] - ERROR: 用例会员id为小数执行通过
2020-03-04 20:47:28,386 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为0执行未通过
2020-03-04 20:47:28,386 - [test_recharge.py-->line:88] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 20:47:28,582 - [test_recharge.py-->line:93] - ERROR: 用例充值金额为负数执行通过
2020-03-04 20:47:28,791 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为空执行未通过
2020-03-04 20:47:28,792 - [test_recharge.py-->line:88] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 20:47:28,995 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 20:47:29,209 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-大于50万执行通过
2020-03-04 20:47:29,405 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 22:07:15,936 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 22:07:16,200 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 22:07:16,476 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 22:07:16,669 - [test_invest.py-->line:58] - ERROR: 用例标id为空执行未通过
2020-03-04 22:07:16,669 - [test_invest.py-->line:59] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_invest.py", line 53, in test_invest
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 22:07:16,949 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-03-04 22:07:16,949 - [test_loanadd.py-->line:74] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 22:07:17,165 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-03-04 22:07:17,165 - [test_loanadd.py-->line:74] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 22:07:17,377 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-03-04 22:07:17,377 - [test_loanadd.py-->line:74] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 22:07:17,604 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-03-04 22:07:17,604 - [test_loanadd.py-->line:74] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 22:07:17,821 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-03-04 22:07:17,821 - [test_loanadd.py-->line:74] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 22:07:18,032 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-03-04 22:07:18,032 - [test_loanadd.py-->line:74] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 22:07:18,288 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-03-04 22:07:18,289 - [test_loanadd.py-->line:74] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 22:07:18,506 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-03-04 22:07:18,506 - [test_loanadd.py-->line:74] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 22:07:18,721 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-03-04 22:07:18,721 - [test_loanadd.py-->line:74] - ERROR: 1007 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 1003
2020-03-04 22:07:18,935 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-03-04 22:07:18,935 - [test_loanadd.py-->line:74] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 22:07:19,175 - [test_loanadd.py-->line:73] - ERROR: 用例CC执行未通过
2020-03-04 22:07:19,175 - [test_loanadd.py-->line:74] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_loanadd.py", line 58, in test_add
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 22:07:19,424 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 22:07:19,424 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 22:07:19,656 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-03-04 22:07:19,656 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 22:07:19,850 - [test_login.py-->line:44] - ERROR: 用例密码为空执行通过
2020-03-04 22:07:20,061 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 22:07:20,267 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 22:07:20,455 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 22:07:21,035 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-04 22:07:21,240 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-04 22:07:21,731 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-整数执行通过
2020-03-04 22:07:22,415 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 22:07:22,789 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 22:07:23,154 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-50万执行通过
2020-03-04 22:07:23,363 - [test_recharge.py-->line:93] - ERROR: 用例会员id为空执行通过
2020-03-04 22:07:23,563 - [test_recharge.py-->line:93] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 22:07:23,765 - [test_recharge.py-->line:93] - ERROR: 用例会员id为字符串执行通过
2020-03-04 22:07:24,002 - [test_recharge.py-->line:93] - ERROR: 用例会员id为小数执行通过
2020-03-04 22:07:24,233 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为0执行未通过
2020-03-04 22:07:24,233 - [test_recharge.py-->line:88] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 22:07:24,453 - [test_recharge.py-->line:93] - ERROR: 用例充值金额为负数执行通过
2020-03-04 22:07:24,669 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为空执行未通过
2020-03-04 22:07:24,669 - [test_recharge.py-->line:88] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 22:07:24,863 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 22:07:25,075 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-大于50万执行通过
2020-03-04 22:07:25,282 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 22:07:25,610 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 22:07:25,934 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 22:07:26,198 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 22:07:26,397 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 22:07:26,604 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 22:07:26,803 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 22:07:27,005 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 22:07:27,202 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 22:07:27,407 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 22:07:27,599 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 22:07:27,801 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 22:07:27,995 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 22:07:28,302 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 22:07:28,602 - [test_update.py-->line:81] - ERROR: 用例更新会员信息执行未通过
2020-03-04 22:07:28,602 - [test_update.py-->line:82] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 74, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 22:07:28,818 - [test_update.py-->line:81] - ERROR: 用例更新会员信息执行未通过
2020-03-04 22:07:28,818 - [test_update.py-->line:82] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 74, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 22:07:29,029 - [test_update.py-->line:81] - ERROR: 用例更新会员信息执行未通过
2020-03-04 22:07:29,029 - [test_update.py-->line:82] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 74, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 22:07:29,248 - [test_update.py-->line:81] - ERROR: 用例更新会员信息执行未通过
2020-03-04 22:07:29,248 - [test_update.py-->line:82] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_update.py", line 74, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 22:07:29,747 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-整数执行未通过
2020-03-04 22:07:29,748 - [test_withdraw.py-->line:79] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 22:07:30,132 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-1位小数执行未通过
2020-03-04 22:07:30,133 - [test_withdraw.py-->line:79] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 22:07:30,480 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-2位小数执行未通过
2020-03-04 22:07:30,481 - [test_withdraw.py-->line:79] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 22:07:30,829 - [test_withdraw.py-->line:78] - ERROR: 用例提现成功-50万执行未通过
2020-03-04 22:07:30,829 - [test_withdraw.py-->line:79] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-03-04 22:07:31,027 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为空执行未通过
2020-03-04 22:07:31,027 - [test_withdraw.py-->line:79] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 22:07:31,237 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 22:07:31,238 - [test_withdraw.py-->line:79] - ERROR: 1007 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 1003
2020-03-04 22:07:31,441 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 22:07:31,441 - [test_withdraw.py-->line:79] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 22:07:31,646 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 22:07:31,646 - [test_withdraw.py-->line:79] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 22:07:31,867 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 22:07:31,867 - [test_withdraw.py-->line:79] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 22:07:32,083 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为负数执行未通过
2020-03-04 22:07:32,084 - [test_withdraw.py-->line:79] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 22:07:32,307 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为空执行未通过
2020-03-04 22:07:32,308 - [test_withdraw.py-->line:79] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2020-03-04 22:07:32,511 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数执行未通过
2020-03-04 22:07:32,511 - [test_withdraw.py-->line:79] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 22:07:32,737 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万执行未通过
2020-03-04 22:07:32,737 - [test_withdraw.py-->line:79] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 22:07:32,972 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额-非数字执行未通过
2020-03-04 22:07:32,972 - [test_withdraw.py-->line:79] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2020-03-04 22:10:33,232 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-04 22:10:33,555 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 22:10:33,802 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 22:10:34,041 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 22:10:34,295 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-04 22:10:34,562 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-04 22:10:34,786 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-04 22:10:35,250 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-04 22:10:35,444 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-04 22:10:35,658 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-04 22:10:36,142 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-04 22:10:36,351 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-04 22:10:36,556 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-04 22:10:36,753 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-04 22:10:36,968 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-04 22:10:37,395 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-04 22:10:37,776 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 22:10:38,087 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 22:10:38,302 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 22:10:38,511 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 22:10:38,719 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 22:10:38,922 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 22:10:39,128 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 22:10:39,326 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 22:10:39,526 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 22:10:39,774 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 22:10:39,971 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-04 22:10:40,216 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-04 22:10:40,216 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 22:10:40,543 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-03-04 22:10:40,544 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 22:10:40,875 - [test_login.py-->line:44] - ERROR: 用例密码为空执行通过
2020-03-04 22:10:41,189 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-04 22:10:41,414 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-04 22:10:41,609 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-04 22:10:41,893 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-04 22:10:42,089 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-04 22:10:42,612 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-整数执行通过
2020-03-04 22:10:42,959 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-1位小数执行通过
2020-03-04 22:10:43,312 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-2位小数执行通过
2020-03-04 22:10:43,657 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-50万执行通过
2020-03-04 22:10:43,907 - [test_recharge.py-->line:93] - ERROR: 用例会员id为空执行通过
2020-03-04 22:10:44,105 - [test_recharge.py-->line:93] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-04 22:10:44,305 - [test_recharge.py-->line:93] - ERROR: 用例会员id为字符串执行通过
2020-03-04 22:10:44,518 - [test_recharge.py-->line:93] - ERROR: 用例会员id为小数执行通过
2020-03-04 22:10:44,733 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为0执行未通过
2020-03-04 22:10:44,734 - [test_recharge.py-->line:88] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 22:10:44,940 - [test_recharge.py-->line:93] - ERROR: 用例充值金额为负数执行通过
2020-03-04 22:10:45,144 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为空执行未通过
2020-03-04 22:10:45,144 - [test_recharge.py-->line:88] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 22:10:45,350 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-3位小数执行通过
2020-03-04 22:10:45,560 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-大于50万执行通过
2020-03-04 22:10:45,765 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-非数字执行通过
2020-03-04 22:10:46,114 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-04 22:10:46,419 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-04 22:10:46,645 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-04 22:10:46,856 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-04 22:10:47,062 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-04 22:10:47,319 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-04 22:10:47,558 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-04 22:10:47,757 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-04 22:10:47,968 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-04 22:10:48,163 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-04 22:10:48,367 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-04 22:10:48,581 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-04 22:10:48,884 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-04 22:10:49,186 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 22:10:49,378 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 22:10:49,583 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 22:10:49,784 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-04 22:10:50,243 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-04 22:10:50,638 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-04 22:10:51,035 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-04 22:10:51,461 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-04 22:10:51,658 - [test_withdraw.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-03-04 22:10:51,869 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-04 22:10:51,870 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-04 22:10:52,083 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-04 22:10:52,083 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 22:10:52,297 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-04 22:10:52,297 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-04 22:10:52,510 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-04 22:10:52,510 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 22:10:52,949 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额为负数执行通过
2020-03-04 22:10:53,341 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额为空执行通过
2020-03-04 22:10:53,603 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-04 22:10:53,931 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-大于50万执行通过
2020-03-04 22:10:54,196 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-非数字执行通过
2020-03-06 20:31:39,289 - [test_audit.py-->line:99] - ERROR: 用例审核通过执行通过
2020-03-06 20:31:39,623 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-06 20:31:39,889 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-06 20:31:40,150 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-06 20:31:40,418 - [test_audit.py-->line:99] - ERROR: 用例审核执行通过
2020-03-06 20:31:40,706 - [test_info.py-->line:73] - ERROR: 用例管理员执行通过
2020-03-06 20:31:40,970 - [test_invest.py-->line:64] - ERROR: 用例管理员正常登录执行通过
2020-03-06 20:31:41,206 - [test_invest.py-->line:64] - ERROR: 用例管理员加标执行通过
2020-03-06 20:31:41,430 - [test_invest.py-->line:64] - ERROR: 用例管理员审核执行通过
2020-03-06 20:31:41,663 - [test_invest.py-->line:64] - ERROR: 用例投资人正常登录执行通过
2020-03-06 20:31:41,961 - [test_invest.py-->line:64] - ERROR: 用例投资人正常投资执行通过
2020-03-06 20:31:42,197 - [test_invest.py-->line:64] - ERROR: 用例投资人id为空执行通过
2020-03-06 20:31:42,421 - [test_invest.py-->line:64] - ERROR: 用例标id为空执行通过
2020-03-06 20:31:42,639 - [test_invest.py-->line:64] - ERROR: 用例投资金额为空执行通过
2020-03-06 20:31:42,873 - [test_invest.py-->line:64] - ERROR: 用例投资金额大于项目可投金额执行通过
2020-03-06 20:31:43,135 - [test_invest.py-->line:64] - ERROR: 用例投资金额等于项目可投金额执行通过
2020-03-06 20:31:43,518 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-06 20:31:43,815 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-06 20:31:44,031 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-06 20:31:44,259 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-06 20:31:44,497 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-06 20:31:44,731 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-06 20:31:44,976 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-06 20:31:45,256 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-06 20:31:45,512 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-06 20:31:45,795 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-06 20:31:46,033 - [test_loanadd.py-->line:79] - ERROR: 用例CC执行通过
2020-03-06 20:31:46,296 - [test_login.py-->line:38] - ERROR: 用例登录成功执行未通过
2020-03-06 20:31:46,296 - [test_login.py-->line:39] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-06 20:31:46,603 - [test_login.py-->line:38] - ERROR: 用例手机号为空执行未通过
2020-03-06 20:31:46,603 - [test_login.py-->line:39] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_login.py", line 34, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-06 20:31:47,041 - [test_login.py-->line:44] - ERROR: 用例密码为空执行通过
2020-03-06 20:31:48,319 - [test_login.py-->line:44] - ERROR: 用例手机号未注册执行通过
2020-03-06 20:31:49,956 - [test_login.py-->line:44] - ERROR: 用例密码错误执行通过
2020-03-06 20:31:50,485 - [test_login.py-->line:44] - ERROR: 用例手机号格式错误执行通过
2020-03-06 20:31:50,897 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-06 20:31:51,124 - [test_prolist.py-->line:73] - ERROR: 用例获取项目列表执行通过
2020-03-06 20:31:51,621 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-整数执行通过
2020-03-06 20:31:51,981 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-1位小数执行通过
2020-03-06 20:31:52,329 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-2位小数执行通过
2020-03-06 20:31:52,733 - [test_recharge.py-->line:93] - ERROR: 用例充值成功-50万执行通过
2020-03-06 20:31:53,017 - [test_recharge.py-->line:93] - ERROR: 用例会员id为空执行通过
2020-03-06 20:31:53,239 - [test_recharge.py-->line:93] - ERROR: 用例id不是当前登录的用户执行通过
2020-03-06 20:31:53,455 - [test_recharge.py-->line:93] - ERROR: 用例会员id为字符串执行通过
2020-03-06 20:31:53,739 - [test_recharge.py-->line:93] - ERROR: 用例会员id为小数执行通过
2020-03-06 20:31:54,074 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为0执行未通过
2020-03-06 20:31:54,075 - [test_recharge.py-->line:88] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-06 20:31:54,409 - [test_recharge.py-->line:93] - ERROR: 用例充值金额为负数执行通过
2020-03-06 20:31:54,650 - [test_recharge.py-->line:87] - ERROR: 用例充值金额为空执行未通过
2020-03-06 20:31:54,650 - [test_recharge.py-->line:88] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-06 20:31:54,866 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-3位小数执行通过
2020-03-06 20:31:55,094 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-大于50万执行通过
2020-03-06 20:31:55,324 - [test_recharge.py-->line:93] - ERROR: 用例充值金额-非数字执行通过
2020-03-06 20:31:55,686 - [test_register.py-->line:58] - ERROR: 用例注册成功-带注册名执行通过
2020-03-06 20:31:56,009 - [test_register.py-->line:58] - ERROR: 用例成功-不带用户名执行通过
2020-03-06 20:31:56,229 - [test_register.py-->line:58] - ERROR: 用例不输入手机号执行通过
2020-03-06 20:31:56,472 - [test_register.py-->line:58] - ERROR: 用例手机号长度10位执行通过
2020-03-06 20:31:56,720 - [test_register.py-->line:58] - ERROR: 用例手机号长度12位执行通过
2020-03-06 20:31:57,003 - [test_register.py-->line:58] - ERROR: 用例手机号含有非法字符执行通过
2020-03-06 20:31:57,235 - [test_register.py-->line:58] - ERROR: 用例已注册过的手机号执行通过
2020-03-06 20:31:57,510 - [test_register.py-->line:58] - ERROR: 用例密码7位执行通过
2020-03-06 20:31:57,729 - [test_register.py-->line:58] - ERROR: 用例密码17位执行通过
2020-03-06 20:31:57,944 - [test_register.py-->line:58] - ERROR: 用例不输入密码执行通过
2020-03-06 20:31:58,154 - [test_register.py-->line:58] - ERROR: 用例注册名11位执行通过
2020-03-06 20:31:58,356 - [test_register.py-->line:58] - ERROR: 用例类型输入非0，1内容执行通过
2020-03-06 20:31:58,660 - [test_register.py-->line:58] - ERROR: 用例不输入类型执行通过
2020-03-06 20:31:58,989 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-06 20:31:59,213 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-06 20:31:59,437 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-06 20:31:59,654 - [test_update.py-->line:87] - ERROR: 用例更新会员信息执行通过
2020-03-06 20:32:00,124 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-整数执行通过
2020-03-06 20:32:00,499 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-1位小数执行通过
2020-03-06 20:32:00,919 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-2位小数执行通过
2020-03-06 20:32:01,370 - [test_withdraw.py-->line:84] - ERROR: 用例提现成功-50万执行通过
2020-03-06 20:32:01,597 - [test_withdraw.py-->line:84] - ERROR: 用例会员id为空执行通过
2020-03-06 20:32:01,837 - [test_withdraw.py-->line:78] - ERROR: 用例id不是当前登录的用户执行未通过
2020-03-06 20:32:01,838 - [test_withdraw.py-->line:79] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-06 20:32:02,100 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为字符串执行未通过
2020-03-06 20:32:02,103 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-06 20:32:02,351 - [test_withdraw.py-->line:78] - ERROR: 用例会员id为小数执行未通过
2020-03-06 20:32:02,351 - [test_withdraw.py-->line:79] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2020-03-06 20:32:02,599 - [test_withdraw.py-->line:78] - ERROR: 用例提现金额为0执行未通过
2020-03-06 20:32:02,600 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\apitest\testcases\test_withdraw.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-06 20:32:02,839 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额为负数执行通过
2020-03-06 20:32:03,067 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额为空执行通过
2020-03-06 20:32:03,315 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-3位小数执行通过
2020-03-06 20:32:03,543 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-大于50万执行通过
2020-03-06 20:32:03,764 - [test_withdraw.py-->line:84] - ERROR: 用例提现金额-非数字执行通过
